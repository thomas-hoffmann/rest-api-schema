openapi: 3.0.4
info:
  title: JTL-WAWI API v1
  description: "# Introduction\r\n\r\nWelcome to the JTL-WAWI technical API documentation. This guide is here to help developers understand how our REST API works and how it can be integrated into your existing systems. We'll delve into the details of authentication and data manipulation processes, providing clear examples along the way. Whether you're a developer or an IT professional, this documentation aims to give you a practical understanding, laying the groundwork for effectively using the JTL-WAWI API to enhance your processes.\r\n\r\n# Authentication\r\n\r\nYou register your application with the API by sending a POST request with the required information and corresponding keys. You can find the exact request details at https://wawi-api.jtl-software.com/?#tag/appRegistration. This information has to include the following:\r\n\r\n* AppId\r\n* DisplayName\r\n* Description\r\n* Version\r\n* ProviderName\r\n* ProviderWebsite\r\n* MandatoryApiScopes\r\n\r\nThis data is crucial for identifying and registering your application with the API. The API uses it to generate a temporary authentication ID that allows your application to access the necessary resources. After successful validation of this information, you will receive the API key required for future authentication and API requests.\r\n\r\nBefore you can begin the registration process, you must open JTL-Wawi (new interface) and start the registration process under 'Admin->App registration'. Only at this point are you authorised to send the first API call. This step in JTL-Wawi ensures that your application is properly registered and has permission to use the API.\r\n\r\nThe API will send you an authentication ID in the form of a token. Once you have received this token and successfully completed the registration in JTL-Wawi, you will send another request to the API by including this authentication ID in the URL path.\r\n\r\nAfter successful validation of this second request by the API and confirmation of the correct information, you will be provided with the actual API key. It is important to note that this API key will not be displayed again!\r\n\r\nThis API key will be used in the future to authenticate requests to the API. It is of utmost importance that you securely store the API key upon receipt, as it cannot be retrieved from any other location in the system.\r\n\r\n# HTTP Header\r\n\r\nTo make a successful API request, it is essential to include the correct authentication data in the request header. Upper case and lower case is ignored. The header should contain the following information:\r\n\r\n* **X-AppID**: This is the name of your application, in this case \"MyApp/1.0.0\". It is used to identify your application.\r\n* **X-AppVersion**: This is where the version number of your application is entered, in this case \"1.0.0\".\r\n* **X-RunAs**: Here, a JTL-Wawi user can be specified to perform an API call on their behalf (more details in the documentation).\r\n* **X-ChallengeCode**: You can enter any custom value here. The X-ChallengeCode is used during app registration and must be the same for all registration requests. The maximum length is 30 characters.\r\n* **Authorization**: The API key. Example: \"Wawi 00000000-0000-00000-0000-000000000000\""
  contact:
    name: JTL-Software-GmbH
    url: https://wawi-api.jtl-software.com/
    email: partner@jtl-software.com
  version: "1.1"
  x-application-version: 1.11.0.0
servers:
  - url: http://127.0.0.1:52541/api/eazybusiness
paths:
  /accountingData:
    get:
      tags:
        - accountingData
      summary: Query Accounting Data
      description: >-
        Delivers a paginated overview of finalized accounting transactions,
        including invoices, credits, and their cancellations and corrections.
      operationId: AccountingDataHeader_QueryAccountingDataAsync
      parameters:
        - name: from1
          in: query
          description: Filters documents starting from a specific date and time
          schema:
            type: string
            format: date-time
        - name: from2
          in: query
          description: Filters documents starting from a specific date and time
          schema:
            type: string
            format: date-time
        - name: from
          in: query
          description: Filters documents starting from a specific date and time
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: Filters documents up to a specific date and time
          schema:
            type: string
            format: date-time
        - name: companyId
          in: query
          description: Filters documents by a specific company ID
          schema:
            type: integer
            format: int32
        - name: type
          in: query
          description: >-
            Specifies the type of document. 0 = Invoice, 1 = Credit, 2 = Invoice
            correction, 3 = Invoice cancellation, 4 = credit cancellation, 5 =
            invoice correction cancellation0=Invoice | 1=Credit |
            2=InvoiceCorrection | 3=InvoiceCancellation | 4=CreditCancellation |
            5=InvoiceCorrectionCancellation | 6=Liquidation |
            7=LiquidationCancellation
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
            type: integer
            format: int32
          x-enumNames:
            - Invoice
            - Credit
            - InvoiceCorrection
            - InvoiceCancellation
            - CreditCancellation
            - InvoiceCorrectionCancellation
            - Liquidation
            - LiquidationCancellation
        - name: exportCurrencyInDepartureCountry
          in: query
          description: If true, exports total sums in the currency of the departure country
          schema:
            type: boolean
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            Provides a detailed overview of all non-pending sales orders,
            including invoices, credits, invoice corrections, invoice
            cancellations, credit cancellations, and invoice correction
            cancellations, along with their associated line items
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.AccountingData.AccountingData]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No registration request was found for the specified identifier
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - accountingdata.queryaccountingdata
            - all.read
      x-sort: 100
  /authentication:
    post:
      tags:
        - appRegistration
      summary: Register App
      description: Send a registration request for an (external) application
      operationId: AuthenticationHeader_RegisterAppAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Contains the registration request's data
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.CreateAppRegistrationRequest
        required: true
        x-bodyName: registrationRequest
      responses:
        "201":
          description: >-
            Status of the registration process (including the unique identifiers
            for application and registration request)
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.RegistrationRequestStatusInfo
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "403":
          description: >-
            There was no application service available to receive and handle the
            registration request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "409":
          description: An application with the specified unique id is already registered.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      x-sort: 0
  /authentication/{registrationId}:
    get:
      tags:
        - appRegistration
      summary: Fetch Registration Status
      description: Obtain information about a registration request
      operationId: AuthenticationHeader_FetchRegistrationStatusAsync
      parameters:
        - name: registrationId
          in: path
          description: Unique identifier of the registration request
          required: true
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: >-
            Registration information (containing the current status of the
            registration process)
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.RegistrationInformation
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No registration request was found for the specified identifier
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "410":
          description: >-
            The registration request for the specified identifier has already
            been processed and answered
          content:
            application/json: {}
      x-sort: 0
    post:
      tags:
        - appRegistration
      summary: Register Multi Instance App
      description: >-
        Sends a registration request for another instance of the same
        application
      operationId: AuthenticationHeader_RegisterMultiInstanceAppAsync
      parameters:
        - name: registrationId
          in: path
          description: Unique identifier of the registration request
          required: true
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: >-
            Status of the registration process (including the unique identifiers
            of the application and registration request)
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.RegistrationRequestStatusInfo
        "400":
          description: The operation was not allowed in the given context.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "402":
          description: >-
            No licence available or the application has not been authorised by
            JTL.
          content:
            application/json: {}
        "403":
          description: >-
            There was no application service available to receive and handle the
            registration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      x-sort: 0
  /authentication/login:
    post:
      tags:
        - login
      summary: Login
      description: >-
        Sends a request to log in the user / dynamically assign the WAWI user.
        Only use this request if your API uses SSL.
      operationId: AuthenticationHeader_LoginAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Contains the login information
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.CreateLogin
        required: true
        x-bodyName: loginRequest
      responses:
        "200":
          description: login success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.Login
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      x-sort: 0
  /authentication/logout:
    post:
      tags:
        - logout
      summary: Logout
      description: Sends a request to log out the user
      operationId: AuthenticationHeader_LogoutAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: logout success
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - authentication.logout
      x-sort: 0
  /availabilities:
    get:
      tags:
        - item
      summary: Query Availabilities
      description: Query all availabilites for items
      operationId: AvailabilityHeader_QueryAvailabilitiesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all availabilites for items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Availability.Availability
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - availability.queryavailabilities
            - all.read
      x-sort: 0
  /cancellationReasons:
    get:
      tags:
        - cancellationreason
      summary: Query Cancellation Reasons
      description: Query all cancellation reasons for sales orders
      operationId: CancellationReasonHeader_QueryCancellationReasonsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all cancellation reasons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CancellationReason.CancellationReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - cancellationreason.querycancellationreasons
            - all.read
      x-sort: 0
  /categories:
    get:
      tags:
        - category
      summary: Query Categories
      description: Query all categories
      operationId: CategoryHeader_QueryCategoriesAsync
      parameters:
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all categories.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Category.Category]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - category.querycategories
            - all.read
      x-sort: 100
    post:
      tags:
        - category
      summary: Create Category
      description: Create a new category
      operationId: CategoryHeader_CreateCategoryAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The category to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.CreateCategory
        required: true
        x-bodyName: category
      responses:
        "201":
          description: The created category.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.Category
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - category.createcategory
      x-sort: 210
  /categories/{categoryId}:
    get:
      tags:
        - category
      summary: Get Category
      description: Get a specific category
      operationId: CategoryHeader_GetCategoryAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the category for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.Category
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - category.getcategory
            - all.read
      x-sort: 200
    patch:
      tags:
        - category
      summary: Update Category
      description: Update a specific category
      operationId: CategoryHeader_UpdateCategoryAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The category to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.UpdateCategory
        required: true
        x-bodyName: category
      responses:
        "201":
          description: The updated category.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.Category
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - category.updatecategory
      x-sort: 220
  /categories/{categoryId}/descriptions:
    get:
      tags:
        - category
      summary: Query Category Descriptions
      description: Query all descriptions for a specific category
      operationId: CategoryHeader_QueryCategoryDescriptionsAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested category descriptions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.CategoryDescription
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - category.querycategorydescriptions
      x-sort: 300
    post:
      tags:
        - category
      summary: Create Category Description
      description: Create a new description for a specific category
      operationId: CategoryHeader_CreateCategoryDescriptionAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The categoryDescription to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.CreateCategoryDescription
        required: true
        x-bodyName: categoryDescription
      responses:
        "201":
          description: The created category description.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.CategoryDescription
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - category.createcategorydescription
      x-sort: 310
  /categories/{categoryId}/descriptions/{salesChannelId}/{languageIso}:
    delete:
      tags:
        - category
      summary: Delete Category Description
      description: Delete a description for a specific category
      operationId: CategoryHeader_DeleteCategoryDescriptionAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: The id of the sales channel that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - category.deletecategorydescription
      x-sort: 330
    patch:
      tags:
        - category
      summary: Update Category Description
      description: Update a description for a specific category
      operationId: CategoryHeader_UpdateCategoryDescriptionAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: The id of the sales channel that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The category to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.UpdateCategoryDescription
        required: true
        x-bodyName: categoryDescription
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - category.updatecategorydescription
      x-sort: 320
  /categories/{categoryId}/items:
    post:
      tags:
        - category
      summary: Add Category Items
      description: Add items to a specific category
      operationId: CategoryHeader_AddCategoryItemsAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category where the items should be assigned.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item Ids to be assigned to the category.
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
        x-bodyName: items
      responses:
        "201":
          description: The assigned item ids.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - category.addcategoryitems
      x-sort: 1000
  /colorCodes:
    get:
      tags:
        - colorcodes
      summary: Query Color Codes
      description: Query all color codes for sales orders
      operationId: ColorCodeHeader_QueryColorCodesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all color codes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ColorCode.ColorCode
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - colorcode.querycolorcodes
            - all.read
      x-sort: 0
  /companies:
    get:
      tags:
        - company
      summary: Query Companies
      description: Query all companies
      operationId: CompanyHeader_QueryCompaniesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all companies.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Company.Company
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - company.querycompanies
            - all.read
      x-sort: 0
  /conditions:
    get:
      tags:
        - item
      summary: Query Conditions
      description: Query all item conditions
      operationId: ConditionHeader_QueryConditionsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all conditions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Condition.Condition
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - condition.queryconditions
            - all.read
      x-sort: 0
  /configuration/numberRanges:
    get:
      tags:
        - Configuration
      summary: Get Number Ranges
      description: Returns all available Number Ranges
      operationId: NumberRangesHeader_GetNumberRangesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The available Number Ranges
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.NumberRanges.NumberRangeItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - numberranges.getnumberranges
            - all.read
      x-sort: 0
  /configuration/numberRanges/{numberRangeId}:
    get:
      tags:
        - Configuration
      summary: Get Number Range
      description: Returns the requested NumberRange
      operationId: NumberRangesHeader_GetNumberRangeAsync
      parameters:
        - name: numberRangeId
          in: path
          description: The uuid of the NumberRange
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested Numberrange
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.NumberRanges.NumberRangeItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - numberranges.getnumberrange
            - all.read
      x-sort: 0
    put:
      tags:
        - Configuration
      summary: Update Number Range
      description: Updates an Existing NumberRange
      operationId: NumberRangesHeader_UpdateNumberRangeAsync
      parameters:
        - name: numberRangeId
          in: path
          description: The id of the NumberRange
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The relevant Information of the NumberRange
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.NumberRanges.PutNumberRangeItem
        required: true
        x-bodyName: item
      responses:
        "201":
          description: The changed NumberRange
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.NumberRanges.NumberRangeItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - numberranges.updatenumberrange
      x-sort: 0
    delete:
      tags:
        - Configuration
      summary: Delete Number Range
      description: Delete a NumberRange, but only Deletable Numberranges
      operationId: NumberRangesHeader_DeleteNumberRangeAsync
      parameters:
        - name: numberRangeId
          in: path
          description: The id of the NumberRange
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: The NumberRange is deleted
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - numberranges.deletenumberrange
      x-sort: 0
  /configuration/numberRanges/{numberRangeId}/increment:
    post:
      tags:
        - Configuration
      summary: Number Range Increment
      description: Increment and returns the Next Number for the given NumberRange
      operationId: NumberRangesHeader_NumberRangeIncrementAsync
      parameters:
        - name: numberRangeId
          in: path
          description: The id of the NumberRange
          required: true
          schema:
            type: string
            format: uuid
        - name: companyId
          in: query
          description: The Id of a specific Company
          schema:
            type: string
            format: uuid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The resulting Next Number for the given Item.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.NumberRanges.NumberRangeCurrentNumberItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - numberranges.numberrangeincrement
      x-sort: 0
  /configuration/numberRanges/{numberRangeId}/preview:
    get:
      tags:
        - Configuration
      summary: Number Range Preview
      description: Returns a Preview of the Next Number for the given NumberRange
      operationId: NumberRangesHeader_NumberRangePreviewAsync
      parameters:
        - name: numberRangeId
          in: path
          description: The id of the NumberRange
          required: true
          schema:
            type: string
            format: uuid
        - name: companyId
          in: query
          description: The Id of a specific Company
          schema:
            type: string
            format: uuid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The resulting Next Number for the given Item.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.NumberRanges.NumberRangeCurrentNumberItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - numberranges.numberrangepreview
            - all.read
      x-sort: 0
  /configuration/numberRanges/{parentNumberRangeId}:
    post:
      tags:
        - Configuration
      summary: Create Number Range
      description: Create a new NumberRange based on the given NumberRange
      operationId: NumberRangesHeader_CreateNumberRangeAsync
      parameters:
        - name: parentNumberRangeId
          in: path
          description: The id of the NumberRange on who this NumberRange is Based
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The relevant Information of the NumberRange
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.NumberRanges.CreateNumberRangeItem
        required: true
        x-bodyName: item
      responses:
        "201":
          description: The new Created NumberRange
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.NumberRanges.NumberRangeItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - numberranges.createnumberrange
      x-sort: 0
  /creditNotes/{creditNoteId}/output/mail:
    post:
      tags:
        - creditnote
      summary: Mail Credit Note
      description: Execute the mailing of a CreditNote
      operationId: CreditNoteHeader_MailCreditNoteAsync
      parameters:
        - name: creditNoteId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The MailJob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - creditnote.mailcreditnote
      x-sort: 5010
  /creditNotes/{creditNoteId}/output/pdf:
    post:
      tags:
        - creditnote
      summary: Pdf Credit Note
      description: Execute the pdf creation of a CreditNote
      operationId: CreditNoteHeader_PdfCreditNoteAsync
      parameters:
        - name: creditNoteId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to creat pdf.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - creditnote.pdfcreditnote
      x-sort: 5010
  /creditNotes/{creditNoteId}/output/print:
    post:
      tags:
        - creditnote
      summary: Print Credit Note
      description: Execute the printing of a CreditNote
      operationId: CreditNoteHeader_PrintCreditNoteAsync
      parameters:
        - name: creditNoteId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - creditnote.printcreditnote
      x-sort: 5010
  /customerCategories:
    get:
      tags:
        - customerCategory
      summary: Query Customer Categories
      description: Query all customer categories
      operationId: CustomerCategoryHeader_QueryCustomerCategoriesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all customer categories.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CustomerCategory
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customercategory.querycustomercategories
            - all.read
      x-sort: 0
    post:
      tags:
        - customerCategory
      summary: Create Customer Category
      description: Create a new customer category
      operationId: CustomerCategoryHeader_CreateCustomerCategoryAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer category to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CreateCustomerCategory
        required: true
        x-bodyName: customerCategory
      responses:
        "201":
          description: The created customer category.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CustomerCategory
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customercategory.createcustomercategory
      x-sort: 0
  /customerCategories/{customercategoryId}:
    get:
      tags:
        - customerCategory
      summary: Get Customer Category
      description: Get a specific customercategory
      operationId: CustomerCategoryHeader_GetCustomerCategoryAsync
      parameters:
        - name: customercategoryId
          in: path
          description: The id of the Customercategory to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customercategory for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CustomerCategory
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customercategory with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customercategory.getcustomercategory
            - all.read
      x-sort: 200
    delete:
      tags:
        - customerCategory
      summary: Delete Customer Category
      description: Delete a specific customercategory
      operationId: CustomerCategoryHeader_DeleteCustomerCategoryAsync
      parameters:
        - name: customercategoryId
          in: path
          description: The id of the Customercategory to delete.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customercategory with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customercategory.deletecustomercategory
      x-sort: 200
    patch:
      tags:
        - customerCategory
      summary: Update Customer Category
      description: Update a specific customer category
      operationId: CustomerCategoryHeader_UpdateCustomerCategoryAsync
      parameters:
        - name: customercategoryId
          in: path
          description: The id of the Customer category to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer category to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.UpdateCustomerCategory
        required: true
        x-bodyName: customerCategory
      responses:
        "201":
          description: The updated customer category.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CustomerCategory
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customercategory.updatecustomercategory
      x-sort: 0
  /customerGroups:
    get:
      tags:
        - customerGroup
      summary: Query Customer Groups
      description: Query all customer groups
      operationId: CustomerGroupHeader_QueryCustomerGroupsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all customer groups.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CustomerGroup
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customergroup.querycustomergroups
            - all.read
      x-sort: 0
    post:
      tags:
        - customerGroup
      summary: Create Customer Group
      description: Create a new customer group
      operationId: CustomerGroupHeader_CreateCustomerGroupAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer group to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CreateCustomerGroup
        required: true
        x-bodyName: customerGroup
      responses:
        "201":
          description: The created customer group.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CustomerGroup
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customergroup.createcustomergroup
      x-sort: 0
  /customerGroups/{customergroupId}:
    get:
      tags:
        - customerGroup
      summary: Get Customer Group
      description: Get a specific customergroup
      operationId: CustomerGroupHeader_GetCustomerGroupAsync
      parameters:
        - name: customergroupId
          in: path
          description: The id of the Customergroup to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customergroup for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CustomerGroup
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customergroup with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customergroup.getcustomergroup
            - all.read
      x-sort: 200
    delete:
      tags:
        - customerGroup
      summary: Delete Customer Group
      description: Delete a specific customergroup
      operationId: CustomerGroupHeader_DeleteCustomerGroupAsync
      parameters:
        - name: customergroupId
          in: path
          description: The id of the customergroup to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customergroup with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customergroup.deletecustomergroup
      x-sort: 0
    patch:
      tags:
        - customerGroup
      summary: Update Customer Group
      description: Update a specific customer group
      operationId: CustomerGroupHeader_UpdateCustomerGroupAsync
      parameters:
        - name: customergroupId
          in: path
          description: The id of the Customer group to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.UpdateCustomerGroup
        required: true
        x-bodyName: customerGroup
      responses:
        "201":
          description: The updated customer group.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CustomerGroup
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer group with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customergroup.updatecustomergroup
      x-sort: 0
  /customers:
    get:
      tags:
        - customer
      summary: Query Customers
      description: Query all customers
      operationId: CustomerHeader_QueryCustomersAsync
      parameters:
        - name: searchKeyWord
          in: query
          description: >-
            All Search Keywords for the customer, like the number and the most
            important fields from the billing address.
          schema:
            type: string
        - name: number
          in: query
          description: Search for a specific customer number.
          schema:
            type: string
        - name: groupId
          in: query
          description: All customers withing the given customer group.
          schema:
            type: integer
            format: int32
        - name: categoryId
          in: query
          description: All customers withing the given customer category.
          schema:
            type: integer
            format: int32
        - name: lastChangeFrom
          in: query
          description: >-
            All customers where the last change happened after or equal the
            given time
          schema:
            type: string
            format: date-time
        - name: lastChangeTo
          in: query
          description: >-
            All customers where the last change happened before or equal the
            given time
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            Returns all customer, can be filtered by searchKeyWord or
            categoryId.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Customer.Customer]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customer.querycustomers
            - all.read
      x-sort: 100
    post:
      tags:
        - customer
      summary: Create Customer
      description: Create a new customer
      operationId: CustomerHeader_CreateCustomerAsync
      parameters:
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CreateCustomer
        required: true
        x-bodyName: customer
      responses:
        "201":
          description: The created customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.Customer
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customer.createcustomer
      x-sort: 210
  /customers/{customerId}:
    get:
      tags:
        - customer
      summary: Get Customer
      description: Get a specific customer
      operationId: CustomerHeader_GetCustomerAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the Customer to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.Customer
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.getcustomer
            - all.read
      x-sort: 200
    delete:
      tags:
        - customer
      summary: Delete Customer
      description: Delete a specific customer
      operationId: CustomerHeader_DeleteCustomerAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.deletecustomer
      x-sort: 230
    patch:
      tags:
        - customer
      summary: Update Customer
      description: Update a specific customer
      operationId: CustomerHeader_UpdateCustomerAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the Customer to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.UpdateCustomer
        required: true
        x-bodyName: customer
      responses:
        "201":
          description: The updated customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.Customer
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.updatecustomer
      x-sort: 220
  /customers/{customerId}/bankaccounts:
    get:
      tags:
        - customer
      summary: Query Customer Bank Accounts
      description: Query all bank accounts for a specific customer
      operationId: CustomerHeader_QueryCustomerBankAccountsAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested bank account of the customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerBankAccount
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.querycustomerbankaccounts
      x-sort: 500
    post:
      tags:
        - customer
      summary: Create Customer Bank Account
      description: Create a new bank account for a specific customer
      operationId: CustomerHeader_CreateCustomerBankAccountAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The bank account of the customer to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CreateCustomerBankAccount
        required: true
        x-bodyName: customerBankAccount
      responses:
        "201":
          description: The created bank account of the customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerBankAccount
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customer.createcustomerbankaccount
      x-sort: 510
  /customers/{customerId}/bankaccounts/{customerBankAccountId}:
    get:
      tags:
        - customer
      summary: Get Customer Bank Account
      description: Get a specific bank account
      operationId: CustomerHeader_GetCustomerBankAccountAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerBankAccountId
          in: path
          description: The id of the customer bank account.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer bankaccount for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerBankAccount
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer bank account with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.getcustomerbankaccount
      x-sort: 505
    delete:
      tags:
        - customer
      summary: Delete Customer Bank Account
      description: Delete a specific bank account
      operationId: CustomerHeader_DeleteCustomerBankAccountAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerBankAccountId
          in: path
          description: The id of the customer bank account.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer bank account with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.deletecustomerbankaccount
      x-sort: 530
    patch:
      tags:
        - customer
      summary: Update Customer Bank Account
      description: Update a specific bank account
      operationId: CustomerHeader_UpdateCustomerBankAccountAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerBankAccountId
          in: path
          description: The id of the customer bank account.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer bank account to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.UpdateCustomerBankAccount
        required: true
        x-bodyName: customerBankAccount
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer bank account with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.updatecustomerbankaccount
      x-sort: 520
  /customers/{customerId}/contacts:
    get:
      tags:
        - customer
      summary: Query Customer Contacts
      description: Query all contacts for a specific customer
      operationId: CustomerHeader_QueryCustomerContactsAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the contacts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested contacts of the customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerContact
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.querycustomercontacts
      x-sort: 400
    post:
      tags:
        - customer
      summary: Create Customer Contact
      description: Create a new customer contact
      operationId: CustomerHeader_CreateCustomerContactAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the contacts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The contact of the customer to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CreateCustomerContact
        required: true
        x-bodyName: customerContact
      responses:
        "201":
          description: The created contact of the customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerContact
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customer.createcustomercontact
      x-sort: 410
  /customers/{customerId}/contacts/{customerContactId}:
    get:
      tags:
        - customer
      summary: Get Customer Contact
      description: Get a specific contact from a customer
      operationId: CustomerHeader_GetCustomerContactAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerContactId
          in: path
          description: The id of the customer contact.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer contact for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerContact
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No concact with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.getcustomercontact
      x-sort: 405
    delete:
      tags:
        - customer
      summary: Delete Customer Contact
      description: Delete a specific customer concact
      operationId: CustomerHeader_DeleteCustomerContactAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the contacts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerContactId
          in: path
          description: The id of the customer contact.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer contact with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.deletecustomercontact
      x-sort: 430
    patch:
      tags:
        - customer
      summary: Update Customer Contact
      description: Update a specific customer contact
      operationId: CustomerHeader_UpdateCustomerContactAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the contacts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerContactId
          in: path
          description: The id of the customer contact.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer contact to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.UpdateCustomerContact
        required: true
        x-bodyName: customerContact
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer contact with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.updatecustomercontact
      x-sort: 420
  /customers/{customerId}/customfields:
    get:
      tags:
        - customer
      summary: Query Customer Custom Field Values
      description: Query all custom fields and corresponding values for a specific customer
      operationId: CustomerHeader_QueryCustomerCustomFieldValuesAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields values for a customer .
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomFieldValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.querycustomercustomfieldvalues
      x-sort: 710
  /customers/{customerId}/customfields/{customfieldId}:
    delete:
      tags:
        - customer
      summary: Delete Customer Custom Field
      description: Delete the value for a specific customer field for a given customer
      operationId: CustomerHeader_DeleteCustomerCustomFieldAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the custom field that should be deleted.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.deletecustomercustomfield
      x-sort: 730
    patch:
      tags:
        - customer
      summary: Update Customer Custom Field
      description: Update the value of a specific custom field for a given customer
      operationId: CustomerHeader_UpdateCustomerCustomFieldAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The custom field value.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateCustomFieldValue
        required: true
        x-bodyName: customFieldValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.updatecustomercustomfield
      x-sort: 720
  /customers/{customerId}/lastChange:
    get:
      tags:
        - customer
      summary: Get Customer Last Change
      description: Get the date of the last change for a customer
      operationId: CustomerHeader_GetCustomerLastChangeAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer's last change date for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.LastChange
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.getcustomerlastchange
      x-sort: 640
  /customers/{customerId}/notes:
    get:
      tags:
        - customer
      summary: Query Customer Notes
      description: Query all notes for a specific customer
      operationId: CustomerHeader_QueryCustomerNotesAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested notes of the customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.querycustomernotes
      x-sort: 600
    post:
      tags:
        - customer
      summary: Create Customer Note
      description: Create a new note for a specific customer
      operationId: CustomerHeader_CreateCustomerNoteAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The note of the customer to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateNote
        required: true
        x-bodyName: note
      responses:
        "201":
          description: The created note of the customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customer.createcustomernote
      x-sort: 610
  /customers/{customerId}/notes/{noteId}:
    get:
      tags:
        - customer
      summary: Get Customer Note
      description: Get a specific note from a customer
      operationId: CustomerHeader_GetCustomerNoteAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the customer note.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No note with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.getcustomernote
      x-sort: 630
    delete:
      tags:
        - customer
      summary: Delete Customer Note
      description: Delete a specific note for a customer
      operationId: CustomerHeader_DeleteCustomerNoteAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the customer note.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No note with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.deletecustomernote
      x-sort: 630
    patch:
      tags:
        - customer
      summary: Update Customer Note
      description: Update a specific note for a customer
      operationId: CustomerHeader_UpdateCustomerNoteAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the customer note.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The note to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateNote
        required: true
        x-bodyName: note
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No note with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.updatecustomernote
      x-sort: 620
  /customers/{customerId}/workflow/{workflowEventId}:
    post:
      tags:
        - customer
      summary: Trigger Customer Workflow
      description: Trigger a specific workflow event for a given customer
      operationId: CustomerHeader_TriggerCustomerWorkflowAsync
      parameters:
        - name: customerId
          in: path
          description: >-
            The id of the customer for that the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the Event for that the manual workflow event should be
            started.1=Created | 2=Changed
          required: true
          schema:
            enum:
              - 1
              - 2
            type: integer
            format: int32
          x-enumNames:
            - Created
            - Changed
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customer.triggercustomerworkflow
      x-sort: 5010
  /customers/{customerId}/workflowEvents:
    post:
      tags:
        - customer
      summary: Trigger Customer Workflow Event
      description: Trigger a specific workflow event for a given customer
      operationId: CustomerHeader_TriggerCustomerWorkflowEventAsync
      parameters:
        - name: customerId
          in: path
          description: >-
            The id of the customer for that the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The workflow event.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateWorkflowEvent
        required: true
        x-bodyName: workflowEvent
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - customer.triggercustomerworkflowevent
      x-sort: 2010
  /customers/customfields:
    get:
      tags:
        - customer
      summary: Query Customer Custom Fields
      description: Query all custom fields available for a customer
      operationId: CustomerHeader_QueryCustomerCustomFieldsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields for items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomField
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.querycustomercustomfields
      x-sort: 700
  /customers/workflowEvents:
    get:
      tags:
        - customer
      summary: Query Customer Workflow Events
      description: Query all workflow events for customers
      operationId: CustomerHeader_QueryCustomerWorkflowEventsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            All manual workflow events for customers that could be used to
            trigger workflow events via REST-API.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.WorkflowEvent
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - customer.querycustomerworkflowevents
      x-sort: 2000
  /deliveryNotes:
    get:
      tags:
        - deliverynote
      summary: Query Delivery Notes
      description: Query all delivery notes
      operationId: DeliveryNoteHeader_QueryDeliveryNotesAsync
      parameters:
        - name: salesOrderNumber
          in: query
          description: Search for a specific sales order number.
          schema:
            type: string
        - name: salesOrderNumberId
          in: query
          description: Search for a specific sales order.
          schema:
            type: integer
            format: int32
        - name: customerId
          in: query
          description: Search for a specific customer Id.
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all non-pending delivery notes.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNote]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - deliverynote.querydeliverynotes
            - all.read
      x-sort: 100
  /deliveryNotes/{deliveryNoteId}:
    get:
      tags:
        - deliverynote
      summary: Get Delivery Note
      description: Get a specific delivery note
      operationId: DeliveryNoteHeader_GetDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the delivery note.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the delivery note for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNote
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No delivery note order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - deliverynote.getdeliverynote
            - all.read
      x-sort: 200
  /deliveryNotes/{deliveryNoteId}/output/mail:
    post:
      tags:
        - deliverynote
      summary: Mail Delivery Note
      description: Execute the mailing of a DeliveryNote
      operationId: DeliveryNoteHeader_MailDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The MailJob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - deliverynote.maildeliverynote
      x-sort: 5010
  /deliveryNotes/{deliveryNoteId}/output/pdf:
    post:
      tags:
        - deliverynote
      summary: Pdf Delivery Note
      description: Execute the pdf creation of a DeliveryNote
      operationId: DeliveryNoteHeader_PdfDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to creat pdf.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - deliverynote.pdfdeliverynote
      x-sort: 5010
  /deliveryNotes/{deliveryNoteId}/output/print:
    post:
      tags:
        - deliverynote
      summary: Print Delivery Note
      description: Execute the printing of a DeliveryNote
      operationId: DeliveryNoteHeader_PrintDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - deliverynote.printdeliverynote
      x-sort: 5010
  /deliveryNotes/{deliveryNoteId}/packages:
    get:
      tags:
        - deliverynote
      summary: Get Delivery Note Packages
      description: Get all packages for a specific delivery note
      operationId: DeliveryNoteHeader_GetDeliveryNotePackagesAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the delivery note.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the delivery note for the given id.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNotePackage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No delivery note order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - deliverynote.getdeliverynotepackages
            - all.read
      x-sort: 200
    post:
      tags:
        - deliverynote
      summary: Post Package Data For Delivery Note
      description: Transmit Package Data
      operationId: DeliveryNoteHeader_PostPackageDataForDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the delivery note.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The Packages to Create
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.CreateDeliveryNotePackagePosting
        required: true
        x-bodyName: package
      responses:
        "201":
          description: Returns All packages that are created for the delivery note.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNotePackage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No delivery note order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - deliverynote.postpackagedatafordeliverynote
            - deliverynote.package
      x-sort: 200
  /deliveryNotes/{deliveryNoteId}/workflow/{workflowEventId}:
    post:
      tags:
        - deliverynote
      summary: Trigger Delivery Note Workflow
      description: Trigger a specific workflow event for a given delivery Note
      operationId: DeliveryNoteHeader_TriggerDeliveryNoteWorkflowAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: >-
            The id of the delivery Note for that the manual workflow event
            should be started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the Event for that the manual workflow event should be
            started.1=Created | 2=Deleted | 3=Shipped
          required: true
          schema:
            enum:
              - 1
              - 2
              - 3
            type: integer
            format: int32
          x-enumNames:
            - Created
            - Deleted
            - Shipped
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - deliverynote.triggerdeliverynoteworkflow
      x-sort: 5010
  /deliveryNotes/packages/{packageId}:
    patch:
      tags:
        - deliverynote
      summary: Patch Package Data
      description: Transmit Package Data
      operationId: DeliveryNoteHeader_PatchPackageDataAsync
      parameters:
        - name: packageId
          in: path
          description: The id of the package.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The Package to update
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.UpdateDeliveryNotePackagePosting
        required: true
        x-bodyName: package
      responses:
        "201":
          description: Returns the package that are created for the delivery note.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNotePackage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No delivery note order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - deliverynote.patchpackagedata
            - deliverynote.package
      x-sort: 200
  /feature:
    get:
      tags:
        - features
      summary: Get Features
      description: Returns the available feature sets with release state and API version
      operationId: FeaturesHeader_GetFeaturesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
      responses:
        "200":
          description: The available features with release state and API version.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Features.FeatureInfo
      x-sort: 0
  /info:
    get:
      tags:
        - info
      summary: Get Status
      description: Returns the status of the API
      operationId: InfoHeader_GetStatusAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
      responses:
        "200":
          description: Status of the API.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Info.Status
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      x-sort: 0
  /invoices:
    get:
      tags:
        - invoice
      summary: Query Invoices
      description: Query all Invoices
      operationId: InvoiceHeader_QueryInvoicesAsync
      parameters:
        - name: salesOrderNumber
          in: query
          description: Search for a specific sales order number.
          schema:
            type: string
        - name: externalOrderNumber
          in: query
          description: Search for a specific external order number.
          schema:
            type: string
        - name: invoiceNumber
          in: query
          description: Search for a specific invoice number.
          schema:
            type: string
        - name: itemId
          in: query
          description: Search for a specific item ID.
          schema:
            type: integer
            format: int32
        - name: customerId
          in: query
          description: Search for a specific customer ID.
          schema:
            type: integer
            format: int32
        - name: paymentStatus
          in: query
          description: >-
            Search for a specific payment status.0=UnPayed | 1=PartialPayed |
            2=Payed
          schema:
            enum:
              - 0
              - 1
              - 2
            type: integer
            format: int32
          x-enumNames:
            - UnPayed
            - PartialPayed
            - Payed
        - name: isExternalInvoice
          in: query
          description: Search only for external invoices
          schema:
            type: boolean
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all non-pending sales orders.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Invoice.Invoice]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - invoice.queryinvoices
            - all.read
      x-sort: 100
  /invoices/{invoiceId}:
    get:
      tags:
        - invoice
      summary: Get Invoice
      description: Get a specific invoice
      operationId: InvoiceHeader_GetInvoiceAsync
      parameters:
        - name: invoiceId
          in: path
          description: The ID of the invoice to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the invoice for the given ID.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.Invoice
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No invoice with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - invoice.getinvoice
            - all.read
      x-sort: 200
  /invoices/{invoiceId}/lineitems:
    get:
      tags:
        - invoice
      summary: Query Invoice Line Items
      description: Query all line items for a specific invoice
      operationId: InvoiceHeader_QueryInvoiceLineItemsAsync
      parameters:
        - name: invoiceId
          in: path
          description: The ID of the invoice that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested line items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceLineItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No invoice line items could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - invoice.queryinvoicelineitems
            - all.read
      x-sort: 300
  /invoices/{invoiceId}/output/mail:
    post:
      tags:
        - invoice
      summary: Mail Invoice
      description: Execute the mailing of a Invoice
      operationId: InvoiceHeader_MailInvoiceAsync
      parameters:
        - name: invoiceId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The MailJob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - invoice.mailinvoice
      x-sort: 5010
  /invoices/{invoiceId}/output/pdf:
    post:
      tags:
        - invoice
      summary: Pdf Invoice
      description: Execute the pdf creation of a Invoice
      operationId: InvoiceHeader_PdfInvoiceAsync
      parameters:
        - name: invoiceId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to creat pdf.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - invoice.pdfinvoice
      x-sort: 5010
  /invoices/{invoiceId}/output/print:
    post:
      tags:
        - invoice
      summary: Print Invoice
      description: Execute the printing of a Invoice
      operationId: InvoiceHeader_PrintInvoiceAsync
      parameters:
        - name: invoiceId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - invoice.printinvoice
      x-sort: 5010
  /invoices/{invoiceId}/workflow/{workflowEventId}:
    post:
      tags:
        - invoice
      summary: Trigger Invoice Workflow
      description: Trigger a specific workflow event for a given invoice
      operationId: InvoiceHeader_TriggerInvoiceWorkflowAsync
      parameters:
        - name: invoiceId
          in: path
          description: >-
            The ID of the invoice for which the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the Event for that the manual workflow event should be
            started.1=Created | 3=CompletePaid | 6=Canceled
          required: true
          schema:
            enum:
              - 1
              - 3
              - 6
            type: integer
            format: int32
          x-enumNames:
            - Created
            - CompletePaid
            - Canceled
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - invoice.triggerinvoiceworkflow
      x-sort: 5010
  /invoices/{invoiceId}/workflowEvents:
    post:
      tags:
        - invoice
      summary: Trigger Invoice Workflow Event
      description: Trigger a specific workflow event for a given invoice
      operationId: InvoiceHeader_TriggerInvoiceWorkflowEventAsync
      parameters:
        - name: invoiceId
          in: path
          description: >-
            The ID of the invoice for which the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The workflow event.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateWorkflowEvent
        required: true
        x-bodyName: workflowEvent
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - invoice.triggerinvoiceworkflowevent
      x-sort: 2100
  /invoices/cancellationReasons:
    get:
      tags:
        - cancellationreason
      summary: Query Invoice Cancellation Reasons
      description: Query all cancellation reasons for invoices
      operationId: InvoiceHeader_QueryInvoiceCancellationReasonsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all cancellation reasons for invoices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceCancellationReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - invoice.queryinvoicecancellationreasons
            - all.read
      x-sort: 0
  /invoices/workflowEvents:
    get:
      tags:
        - invoice
      summary: Query Invoice Workflow Events
      description: Query all available workflow events for invoices
      operationId: InvoiceHeader_QueryInvoiceWorkflowEventsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            All manual workflow events for invoices that could be used to
            trigger workflow events via REST API.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.WorkflowEvent
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No events could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - invoice.queryinvoiceworkflowevents
            - all.read
      x-sort: 2000
  /items:
    get:
      tags:
        - item
      summary: Query Items
      description: Query all items
      operationId: ItemHeader_QueryItemsAsync
      parameters:
        - name: searchKeyWord
          in: query
          description: >-
            A search key word which is using many important item identificators.
            For more info see documentation or the configuration in the search
            in items in JTL-Wawi.
          schema:
            type: string
        - name: categoryId
          in: query
          description: Id of the category.
          schema:
            type: integer
            format: int32
        - name: manufacturerId
          in: query
          description: Id of one of the item manufacturers.
          schema:
            type: integer
            format: int32
        - name: parentItemId
          in: query
          description: Id of one the parent item.
          schema:
            type: integer
            format: int32
        - name: changedSince
          in: query
          description: The date last changes were made to the item.
          schema:
            type: string
            format: date-time
        - name: isActiveOnSalesChannelId
          in: query
          description: The ID of the sales channel on which this item is active.
          schema:
            type: string
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all items, can be filtered by searchKeyWord and postalCode.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Item.Item]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.queryitems
            - all.read
      x-sort: 100
    post:
      tags:
        - item
      summary: Create Item
      description: Create a new item
      operationId: ItemHeader_CreateItemAsync
      parameters:
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItem
        required: true
        x-bodyName: item
      responses:
        "201":
          description: The created item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.Item"
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.createitem
      x-sort: 210
  /items/{itemId}:
    get:
      tags:
        - item
      summary: Get Item
      description: Get a specific item
      operationId: ItemHeader_GetItemAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the Item to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the Item for the given id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.Item"
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.getitem
            - all.read
      x-sort: 200
    patch:
      tags:
        - item
      summary: Update Item
      description: Update a specific item
      operationId: ItemHeader_UpdateItemAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the Item to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItem
        required: true
        x-bodyName: item
      responses:
        "201":
          description: The updated item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.Item"
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitem
      x-sort: 220
  /items/{itemId}/children/{childItemId}:
    post:
      tags:
        - item
      summary: Assign Child Item To Parent
      description: Assign child items to a specific parent
      operationId: ItemHeader_AssignChildItemToParentAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: childItemId
          in: path
          description: >-
            The unique id of the item that should be assigned as a variation
            child to the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: >-
          The unique IDs of the variation values from the parent that should be
          assigned to the child. This must be an exact match and no other child
          can have these exact variation values.
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
        x-bodyName: variationValueIds
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.assignchilditemtoparent
      x-sort: 1090
  /items/{itemId}/customerPrices:
    get:
      tags:
        - item
      summary: Query Item Customer Prices
      description: Query all customer prices for a specific item
      operationId: ItemHeader_QueryItemCustomerPricesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the customer specific price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item prices.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemCustomerPrice
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemcustomerprices
            - all.read
      x-sort: 1360
    post:
      tags:
        - item
      summary: Create Item Customer Price
      description: Create a new customer price for a specific item
      operationId: ItemHeader_CreateItemCustomerPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the customer specific price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item customer price to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemCustomerPrice
        required: true
        x-bodyName: itemCustomerPrice
      responses:
        "201":
          description: The created item price.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemCustomerPrice
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.createitemcustomerprice
      x-sort: 1370
  /items/{itemId}/customerPrices/{customerId}/{fromQuantity}:
    delete:
      tags:
        - item
      summary: Delete Item Customer Price
      description: Delete a specific customer price for a given item
      operationId: ItemHeader_DeleteItemCustomerPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the customer specific price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerId
          in: path
          description: >-
            The customer Id of the item that the customer specific price belongs
            to.
          required: true
          schema:
            type: integer
            format: int32
        - name: fromQuantity
          in: path
          description: The quantity for the bulk price
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.deleteitemcustomerprice
      x-sort: 1390
    patch:
      tags:
        - item
      summary: Update Item Customer Price
      description: Update a specific customer price for a given item
      operationId: ItemHeader_UpdateItemCustomerPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the customer specific price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerId
          in: path
          description: >-
            The customer Id of the item that the customer specific price belongs
            to.
          required: true
          schema:
            type: integer
            format: int32
        - name: fromQuantity
          in: path
          description: The quantity the customer must buy to find the sales price.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item customer price to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemCustomerPrice
        required: true
        x-bodyName: itemCustomerPrice
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitemcustomerprice
      x-sort: 1380
  /items/{itemId}/customfields:
    get:
      tags:
        - item
      summary: Query Item Custom Field Values
      description: Query all custom field values for a specific item
      operationId: ItemHeader_QueryItemCustomFieldValuesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields values for an item .
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomFieldValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemcustomfieldvalues
            - all.read
      x-sort: 1010
  /items/{itemId}/customfields/{customfieldId}:
    delete:
      tags:
        - item
      summary: Delete Item Custom Field
      description: Delete the value for a specific custom field for a given item
      operationId: ItemHeader_DeleteItemCustomFieldAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.deleteitemcustomfield
      x-sort: 1030
    patch:
      tags:
        - item
      summary: Update Item Custom Field
      description: Update the value of a specific custom field for a given item
      operationId: ItemHeader_UpdateItemCustomFieldAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The custom field value.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateCustomFieldValue
        required: true
        x-bodyName: customFieldValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitemcustomfield
      x-sort: 1020
  /items/{itemId}/descriptions:
    get:
      tags:
        - item
      summary: Query Item Descriptions
      description: Query all descriptions for a specific item
      operationId: ItemHeader_QueryItemDescriptionsAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item descriptions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemDescription
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemdescriptions
            - all.read
      x-sort: 400
    post:
      tags:
        - item
      summary: Create Item Description
      description: Create a new description for a specific item
      operationId: ItemHeader_CreateItemDescriptionAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The itemDescription to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemDescription
        required: true
        x-bodyName: itemDescription
      responses:
        "201":
          description: The created item description.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemDescription
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.createitemdescription
      x-sort: 410
  /items/{itemId}/descriptions/{salesChannelId}/{languageIso}:
    delete:
      tags:
        - item
      summary: Delete Item Description
      description: Delete a specific item description
      operationId: ItemHeader_DeleteItemDescriptionAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: The id of the sales channel that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.deleteitemdescription
      x-sort: 430
    patch:
      tags:
        - item
      summary: Update Item Description
      description: Update a specific description for a given item
      operationId: ItemHeader_UpdateItemDescriptionAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: The id of the sales channel that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemDescription
        required: true
        x-bodyName: itemDescription
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitemdescription
      x-sort: 420
  /items/{itemId}/images:
    get:
      tags:
        - item
      summary: Query Item Images
      description: Query all images for a specific item
      operationId: ItemHeader_QueryItemImagesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item images.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemImage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemimages
            - all.read
      x-sort: 600
    post:
      tags:
        - item
      summary: Create Item Image
      description: Create a new image for a specific item
      operationId: ItemHeader_CreateItemImageAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the image should belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemImage to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemImage
        required: true
        x-bodyName: itemImage
      responses:
        "201":
          description: The created item image.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemImage
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.createitemimage
      x-sort: 620
  /items/{itemId}/images/{imageId}:
    delete:
      tags:
        - item
      summary: Delete Item Image
      description: Delete a specific image for a given item
      operationId: ItemHeader_DeleteItemImageAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: imageId
          in: path
          description: The id of the image.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.deleteitemimage
      x-sort: 640
    patch:
      tags:
        - item
      summary: Update Item Image
      description: Update a specific image for a given item
      operationId: ItemHeader_UpdateItemImageAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: imageId
          in: path
          description: The id of the image.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The itemImage to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemImage
        required: true
        x-bodyName: itemImage
      responses:
        "201":
          description: The updated item image.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemImage
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitemimage
      x-sort: 630
  /items/{itemId}/properties:
    get:
      tags:
        - item
      summary: Query Item Properties
      description: Query all properties for a specific item
      operationId: ItemHeader_QueryItemPropertiesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested property values for the item.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemProperties
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemproperties
            - all.read
      x-sort: 1200
    post:
      tags:
        - item
      summary: Create Item Property
      description: Assign a property value to a specific item
      operationId: ItemHeader_CreateItemPropertyAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemPropertyValue to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemPropertyValue
        required: true
        x-bodyName: itemPropertyValue
      responses:
        "201":
          description: The created ItemPropertyValue.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemPropertyValue
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.createitemproperty
      x-sort: 1210
  /items/{itemId}/properties/{propertyValueId}:
    delete:
      tags:
        - item
      summary: Delete Item Property
      description: Delete properties from a specific item
      operationId: ItemHeader_DeleteItemPropertyAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The unique id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and property value with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.deleteitemproperty
      x-sort: 1220
  /items/{itemId}/salesChannelPrices:
    get:
      tags:
        - item
      summary: Query Item Sales Channel Price
      description: Query all sales channel prices for a specific item
      operationId: ItemHeader_QueryItemSalesChannelPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the sales channel prices belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item prices for sales channel.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSalesChannelPrice
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemsaleschannelprice
            - all.read
      x-sort: 1300
    post:
      tags:
        - item
      summary: Create Item Sales Channel Price
      description: Create new sales channel prices for a specific item
      operationId: ItemHeader_CreateItemSalesChannelPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the sales channel price belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The sales channel price for an item to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemSalesChannelPrice
        required: true
        x-bodyName: itemSalesChannelPrice
      responses:
        "201":
          description: The created item sales channel price.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSalesChannelPrice
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.createitemsaleschannelprice
      x-sort: 1310
  /items/{itemId}/salesChannelPrices/{salesChannelId}/{customerGroupId}/{fromQuantity}:
    delete:
      tags:
        - item
      summary: Delete Item Sales Channel Price
      description: DElete a specific sales channel price for a given item
      operationId: ItemHeader_DeleteItemSalesChannelPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The item Id of the item that the sales channel price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: >-
            The sales channel Id of the item that the sales channel price
            belongs to. Only online shops and JTL-POS are allowed.
          required: true
          schema:
            type: string
        - name: customerGroupId
          in: path
          description: >-
            The customer Group Id of the item that the sales channel price
            belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: fromQuantity
          in: path
          description: The quantity the customer must buy to find the sales price.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.deleteitemsaleschannelprice
      x-sort: 1330
    patch:
      tags:
        - item
      summary: Update Item Sales Channel Price
      description: Update a specific sales channel price for a given item
      operationId: ItemHeader_UpdateItemSalesChannelPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The item Id of the item that the sales channel price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: >-
            The sales channel Id of the item that the sales channel price
            belongs to. Only online shops and JTL-POS are allowed.
          required: true
          schema:
            type: string
        - name: customerGroupId
          in: path
          description: >-
            The customer Group Id of the item that the sales channel price
            belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: fromQuantity
          in: path
          description: The quantity the customer must buy to find the sales price.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item sales channel price to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSalesChannelPrice
        required: true
        x-bodyName: itemSalesChannelPrice
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitemsaleschannelprice
      x-sort: 1320
  /items/{itemId}/specialprices:
    get:
      tags:
        - item
      summary: Query Item Special Price
      description: Query the special prices for a specific item
      operationId: ItemHeader_QueryItemSpecialPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the special price details belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested special price details of the item .
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSpecialPrice
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemspecialprice
            - all.read
      x-sort: 1500
    patch:
      tags:
        - item
      summary: Update Item Special Price
      description: Update the  special prices for a specific item
      operationId: ItemHeader_UpdateItemSpecialPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the special price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The special price details of the item to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSpecialPrice
        required: true
        x-bodyName: itemSpecialPrice
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitemspecialprice
      x-sort: 1520
  /items/{itemId}/suppliers:
    get:
      tags:
        - item
      summary: Query Item Suppliers
      description: Query all suppliers for a specific item
      operationId: ItemHeader_QueryItemSuppliersAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the supplier belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item suppliers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSupplier
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemsuppliers
            - all.read
      x-sort: 700
    post:
      tags:
        - item
      summary: Create Item Supplier
      description: Assign a supplier to a specific item
      operationId: ItemHeader_CreateItemSupplierAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the supplier belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The itemSupplier to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemSupplier
        required: true
        x-bodyName: itemSupplier
      responses:
        "201":
          description: The created itemSupplier.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSupplier
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.createitemsupplier
      x-sort: 710
  /items/{itemId}/suppliers/{supplierId}:
    delete:
      tags:
        - item
      summary: Delete Item Supplier
      description: Delete the connection between a specific supplier and item
      operationId: ItemHeader_DeleteItemSupplierAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: supplierId
          in: path
          description: The unique id of the supplier.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and supplier with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.deleteitemsupplier
      x-sort: 730
    patch:
      tags:
        - item
      summary: Update Item Supplier
      description: Update the information for a specific supplier for a given item
      operationId: ItemHeader_UpdateItemSupplierAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: supplierId
          in: path
          description: The unique id of the supplier.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The itemSupplier to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSupplier
        required: true
        x-bodyName: itemSupplier
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and supplier with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitemsupplier
      x-sort: 720
  /items/{itemId}/variations:
    get:
      tags:
        - item
      summary: Query Item Variations
      description: Query all variations for a specific item
      operationId: ItemHeader_QueryItemVariationsAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the variations belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item variations.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemVariation
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemvariations
            - all.read
      x-sort: 1000
    post:
      tags:
        - item
      summary: Create Item Variation
      description: Create a new variation for a specific item
      operationId: ItemHeader_CreateItemVariationAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the supplier belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemVariation to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemVariation
        required: true
        x-bodyName: itemVariation
      responses:
        "201":
          description: The created ItemVariation.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemVariation
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.createitemvariation
      x-sort: 1010
  /items/{itemId}/variations/{variationId}:
    delete:
      tags:
        - item
      summary: Delete Item Variation
      description: Delete a specific variation for a given item
      operationId: ItemHeader_DeleteItemVariationAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and variation with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.deleteitemvariation
      x-sort: 1030
    patch:
      tags:
        - item
      summary: Update Item Variation
      description: Update a specific variation for a given item
      operationId: ItemHeader_UpdateItemVariationAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemVariation to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemVariation
        required: true
        x-bodyName: itemVariation
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and variation with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitemvariation
      x-sort: 1020
  /items/{itemId}/variations/{variationId}/values:
    get:
      tags:
        - item
      summary: Query Item Variation Values
      description: Query all values for a specific item variation
      operationId: ItemHeader_QueryItemVariationValuesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the variations belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested values for the item variation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemVariationValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemvariationvalues
            - all.read
      x-sort: 1040
    post:
      tags:
        - item
      summary: Create Item Variation Value
      description: Create new values for a specific item variation
      operationId: ItemHeader_CreateItemVariationValueAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the supplier belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemVariationValue to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemVariationValue
        required: true
        x-bodyName: itemVariationValue
      responses:
        "201":
          description: The created ItemVariationValue.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemVariationValue
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.createitemvariationvalue
      x-sort: 1050
  /items/{itemId}/variations/{variationId}/values/{variationValueId}:
    delete:
      tags:
        - item
      summary: Delete Item Variation Value
      description: Delete a specific value for a item variation
      operationId: ItemHeader_DeleteItemVariationValueAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationValueId
          in: path
          description: The unique id of the variation value.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and variation or variation value with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.deleteitemvariationvalue
      x-sort: 1070
    patch:
      tags:
        - item
      summary: Update Item Variation Value
      description: Update the value for a specific item variation
      operationId: ItemHeader_UpdateItemVariationValueAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationValueId
          in: path
          description: The unique id of the variation value.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemVariationValue to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemVariationValue
        required: true
        x-bodyName: itemVariationValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and variation or variation value with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.updateitemvariationvalue
      x-sort: 1060
  /items/{itemId}/workflow/{workflowEventId}:
    post:
      tags:
        - item
      summary: Trigger Item Workflow
      description: Trigger a specific workflow event for a given item
      operationId: ItemHeader_TriggerItemWorkflowAsync
      parameters:
        - name: itemId
          in: path
          description: >-
            The id of the item for that the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the event for that the manual workflow event should be
            started.1=Created | 2=Changed | 3=Deleted
          required: true
          schema:
            enum:
              - 1
              - 2
              - 3
            type: integer
            format: int32
          x-enumNames:
            - Created
            - Changed
            - Deleted
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.triggeritemworkflow
      x-sort: 5010
  /items/{itemId}/workflowEvents:
    post:
      tags:
        - item
      summary: Trigger Item Workflow Event
      description: Trigger a specific workflow event for a given item
      operationId: ItemHeader_TriggerItemWorkflowEventAsync
      parameters:
        - name: itemId
          in: path
          description: >-
            The id of the item for that the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The workflow event.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateWorkflowEvent
        required: true
        x-bodyName: workflowEvent
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - item.triggeritemworkflowevent
      x-sort: 5010
  /items/customfields:
    get:
      tags:
        - item
      summary: Query Item Custom Fields
      description: Query all custom fields for items
      operationId: ItemHeader_QueryItemCustomFieldsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields for items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomField
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemcustomfields
            - all.read
      x-sort: 1000
  /items/imagedata/{imageId}:
    get:
      tags:
        - item
      summary: Query Item Image Data
      description: Query the data for a specific item image
      operationId: ItemHeader_QueryItemImageDataAsync
      parameters:
        - name: imageId
          in: path
          description: The id of the image.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item data.
          content:
            application/json:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No image could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemimagedata
            - all.read
      x-sort: 610
  /items/workflowEvents:
    get:
      tags:
        - item
      summary: Query Item Workflow Events
      description: Query all workflow events for items
      operationId: ItemHeader_QueryItemWorkflowEventsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            All manual workflow events for items that could be used to trigger
            workflow events via REST-API.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.WorkflowEvent
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - item.queryitemworkflowevents
            - all.read
      x-sort: 5000
  /manufacturers:
    get:
      tags:
        - item
      summary: Query Manufacturers
      description: Query all manufacturers
      operationId: ManufacturerHeader_QueryManufacturersAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all manufacturers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Manufacturer.Manufacturer
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - manufacturer.querymanufacturers
            - all.read
      x-sort: 0
  /odata/$metadata:
    get:
      tags:
        - odata
      summary: "Retrieves the OData metadata for the configured EDM (Entity Data Model).\r\nThe metadata describes the structure and organization of data\r\nin accordance with the OData standard."
      operationId: Metadata_GetMetadata
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: object
      x-sort: 100
  /offer/{offerId}/output/mail:
    post:
      tags:
        - offer
      summary: Mail Offer
      description: Execute the mailing of a Offer
      operationId: OfferHeader_MailOfferAsync
      parameters:
        - name: offerId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The MailJob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - offer.mailoffer
      x-sort: 5010
  /offer/{offerId}/output/pdf:
    post:
      tags:
        - offer
      summary: Pdf Offer
      description: Execute the pdf creation of a Offer
      operationId: OfferHeader_PdfOfferAsync
      parameters:
        - name: offerId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to creat pdf.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - offer.pdfoffer
      x-sort: 5010
  /offer/{offerId}/output/print:
    post:
      tags:
        - offer
      summary: Print Offer
      description: Execute the printing of a Offer
      operationId: OfferHeader_PrintOfferAsync
      parameters:
        - name: offerId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - offer.printoffer
      x-sort: 5010
  /onHoldReasons:
    get:
      tags:
        - onholdreason
      summary: Query On Hold Reasons
      description: Query all on hold reasons for sales orders
      operationId: OnHoldReasonHeader_QueryOnHoldReasonsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all payment methods.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.OnHoldReason.OnHoldReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - onholdreason.queryonholdreasons
            - all.read
      x-sort: 0
  /paymentMethods:
    get:
      tags:
        - paymentmethod
      summary: Query Payment Methods
      description: Query all payment methods
      operationId: PaymentMethodHeader_QueryPaymentMethodsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all payment methods.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PaymentMethod.PaymentMethod
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - paymentmethod.querypaymentmethods
            - all.read
      x-sort: 0
  /printers:
    get:
      tags:
        - printer
      summary: Installed Printers
      description: Returns all Installed Printers
      operationId: PrintersHeader_InstalledPrintersAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all Installed Printers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - printers.installedprinters
            - all.read
      x-sort: 0
  /productGroups:
    get:
      tags:
        - item
      summary: Query Product Groups
      description: Query all product groups
      operationId: ProductGroupHeader_QueryProductGroupsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all product groups.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ProductGroup.ProductGroup
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - productgroup.queryproductgroups
            - all.read
      x-sort: 0
  /properties:
    get:
      tags:
        - property
      summary: Query Properties
      description: Query all properties for items
      operationId: PropertyHeader_QueryPropertiesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all properties.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Property.Property]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - property.queryproperties
            - all.read
      x-sort: 100
    post:
      tags:
        - property
      summary: Create Property
      description: Create a new property
      operationId: PropertyHeader_CreatePropertyAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The property to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.CreateProperty
        required: true
        x-bodyName: property
      responses:
        "201":
          description: The created property.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.Property
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - property.createproperty
      x-sort: 110
  /properties/{propertyId}/values:
    get:
      tags:
        - property
      summary: Query Property Values
      description: Query all velues for a specific property
      operationId: PropertyHeader_QueryPropertyValuesAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested property values of the property.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - property.querypropertyvalues
            - all.read
      x-sort: 300
    post:
      tags:
        - property
      summary: Create Property Value
      description: Create a new value for a specific property
      operationId: PropertyHeader_CreatePropertyValueAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The value of the property.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.CreatePropertyValue
        required: true
        x-bodyName: propertyValue
      responses:
        "201":
          description: The created property value.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyValue
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - property.createpropertyvalue
      x-sort: 310
  /properties/{propertyId}/values/{propertyValueId}:
    delete:
      tags:
        - property
      summary: Delete Property Value
      description: Delete a specific value for a given property
      operationId: PropertyHeader_DeletePropertyValueAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No property value or property with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - property.deletepropertyvalue
      x-sort: 330
    patch:
      tags:
        - property
      summary: Update Property Value
      description: Update the value of a specific property
      operationId: PropertyHeader_UpdatePropertyValueAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The value of the property.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.UpdatePropertyValue
        required: true
        x-bodyName: propertyValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No property value or property with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - property.updatepropertyvalue
      x-sort: 320
  /properties/{propertyId}/values/{propertyValueId}/descriptions:
    get:
      tags:
        - property
      summary: Query Property Value Descriptions
      description: Query all descriptions for a specific property value
      operationId: PropertyHeader_QueryPropertyValueDescriptionsAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested property value descriptions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyValueDescription
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - property.querypropertyvaluedescriptions
            - all.read
      x-sort: 400
    post:
      tags:
        - property
      summary: Create Property Value Description
      description: Create a new description for a specific property value
      operationId: PropertyHeader_CreatePropertyValueDescriptionAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The PropertyValueDescription to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.CreatePropertyValueDescription
        required: true
        x-bodyName: propertyValueDescription
      responses:
        "201":
          description: The created property value description.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyValueDescription
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - property.createpropertyvaluedescription
      x-sort: 410
  /properties/{propertyId}/values/{propertyValueId}/descriptions/{languageIso}:
    delete:
      tags:
        - property
      summary: Delete Property Value Description
      description: Delete the description for a specific property value and language
      operationId: PropertyHeader_DeletePropertyValueDescriptionAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given IDs exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - property.deletepropertyvaluedescription
      x-sort: 430
    patch:
      tags:
        - property
      summary: Update Property Value Description
      description: Update the description for a specific property value and language
      operationId: PropertyHeader_UpdatePropertyValueDescriptionAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The property value description to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.UpdatePropertyValueDescription
        required: true
        x-bodyName: propertyValueDescription
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given IDs exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - property.updatepropertyvaluedescription
      x-sort: 420
  /properties/groups:
    get:
      tags:
        - property
      summary: Query Property Groups
      description: Query all groups for properties
      operationId: PropertyHeader_QueryPropertyGroupsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all property groups.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Property.PropertyGroup]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - property.querypropertygroups
            - all.read
      x-sort: 200
    post:
      tags:
        - property
      summary: Create Property Group
      description: Create a new property group
      operationId: PropertyHeader_CreatePropertyGroupAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The property group to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.CreatePropertyGroup
        required: true
        x-bodyName: propertyGroup
      responses:
        "201":
          description: The created property group.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyGroup
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - property.createpropertygroup
      x-sort: 210
  /refunds/cancellationReasons:
    get:
      tags:
        - cancellationreason
      summary: Query Refund Cancellation Reasons
      description: Query all cancellation reasons for refunds
      operationId: RefundHeader_QueryRefundCancellationReasonsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all cancellation reasons for refunds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Refund.RefundCancellationReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - refund.queryrefundcancellationreasons
            - all.read
      x-sort: 0
  /responsiblePersons:
    get:
      tags:
        - item
      summary: Query Responsible Persons
      description: Query all ResponsiblePerson
      operationId: ResponsiblePersonHeader_QueryResponsiblePersonsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all ResponsiblePerson.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ResponsiblePerson.ResponsiblePerson
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - responsibleperson.queryresponsiblepersons
            - all.read
      x-sort: 0
  /returnReasons:
    get:
      tags:
        - returnreason
      summary: Query Return Reasons
      description: Query all return reasons
      operationId: ReturnReasonHeader_QueryReturnReasonsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all return reasons.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ReturnReason.ReturnReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - returnreason.queryreturnreasons
            - all.read
      x-sort: 0
  /returns:
    get:
      tags:
        - return
      summary: Query Returns
      description: Query all returns
      operationId: ReturnHeader_QueryReturnsAsync
      parameters:
        - name: returnNumber
          in: query
          description: Search for a specific return number.
          schema:
            type: string
        - name: customerId
          in: query
          description: Search for a specific customer Id.
          schema:
            type: integer
            format: int32
        - name: salesOrderId
          in: query
          description: Search for a specific sales order Id.
          schema:
            type: integer
            format: int32
        - name: returnStateId
          in: query
          description: Search for a specific return state.
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all non-pending returns.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Return.Return]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - return.queryreturns
            - all.read
      x-sort: 100
    post:
      tags:
        - return
      summary: Create Return
      description: Create a new return with associated items and packages.
      operationId: ReturnHeader_CreateReturnAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The details of the return to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.CreateReturn
        required: true
        x-bodyName: createReturn
      responses:
        "201":
          description: The created return.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.Return
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "500":
          description: An error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - return.createreturn
      x-sort: 400
  /returns/{returnId}:
    get:
      tags:
        - return
      summary: Get Return
      description: Get a specific return
      operationId: ReturnHeader_GetReturnAsync
      parameters:
        - name: returnId
          in: path
          description: The id of the return.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the return for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.Return
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No return with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - return.getreturn
            - all.read
      x-sort: 200
  /returns/{returnId}/lineitems:
    get:
      tags:
        - return
      summary: Query Return Line Items
      description: Query all line items for a specific return
      operationId: ReturnHeader_QueryReturnLineItemsAsync
      parameters:
        - name: returnId
          in: path
          description: The id of the return that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested line items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.ReturnLineItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - return.queryreturnlineitems
            - all.read
      x-sort: 300
  /returns/{returnId}/packages:
    get:
      tags:
        - return
      summary: Query Return Packages
      description: Query all packages for a specific return
      operationId: ReturnHeader_QueryReturnPackagesAsync
      parameters:
        - name: returnId
          in: path
          description: The id of the return that the packages belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested packages.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.ReturnPackage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - return.queryreturnpackages
            - all.read
      x-sort: 400
  /returnStates:
    get:
      tags:
        - returnstate
      summary: Query Return States
      description: Query all return states
      operationId: ReturnStateHeader_QueryReturnStatesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all return states.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ReturnState.ReturnState
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - returnstate.queryreturnstates
            - all.read
      x-sort: 0
  /salesChannels:
    get:
      tags:
        - saleschannel
      summary: Get Sales Channels
      description: Get all sales channels
      operationId: SalesChannelHeader_GetSalesChannelsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all sales channels with the available endpoints.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesChannel.SalesChannel
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - saleschannel.getsaleschannels
            - all.read
      x-sort: 0
  /salesOrders:
    get:
      tags:
        - salesorder
      summary: Query Sales Orders
      description: Query all sales orders
      operationId: SalesOrderHeader_QuerySalesOrdersAsync
      parameters:
        - name: salesOrderNumber
          in: query
          description: Search for a specific sales order number.
          schema:
            type: string
        - name: externalOrderNumber
          in: query
          description: Search for a specific external order number.
          schema:
            type: string
        - name: billingNumber
          in: query
          description: Search for a specific billing number.
          schema:
            type: string
        - name: itemId
          in: query
          description: Search for a specific item Id.
          schema:
            type: integer
            format: int32
        - name: customerId
          in: query
          description: Search for a specific customer Id.
          schema:
            type: integer
            format: int32
        - name: paymentStatus
          in: query
          description: >-
            Search for a specific payment status.0=UnPayed | 1=PartialPayed |
            2=Payed
          schema:
            enum:
              - 0
              - 1
              - 2
            type: integer
            format: int32
          x-enumNames:
            - UnPayed
            - PartialPayed
            - Payed
        - name: paymentMethodId
          in: query
          description: Search for a specific payment method Id.
          schema:
            type: integer
            format: int32
        - name: deliveryCompleteStatus
          in: query
          description: >-
            Search for a specific payment status.0=DeliveryNotComplete |
            1=DeliveryComplete | 2=DeliveryCompleteWithoutNote
          schema:
            enum:
              - 0
              - 1
              - 2
            type: integer
            format: int32
          x-enumNames:
            - DeliveryNotComplete
            - DeliveryComplete
            - DeliveryCompleteWithoutNote
        - name: createdUserId
          in: query
          description: Search for a specific user created Id.
          schema:
            type: integer
            format: int32
        - name: companyId
          in: query
          description: Search for sales orders created by a specific company.
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: query
          description: Search for a specific sales channel Id.
          schema:
            type: string
        - name: createdSince
          in: query
          description: Search for sales orders created after this date.
          schema:
            type: string
            format: date-time
        - name: createdUntil
          in: query
          description: Search for sales orders created before this date.
          schema:
            type: string
            format: date-time
        - name: colorId
          in: query
          description: Search for sales orders with a specific color.
          schema:
            type: integer
            format: int32
        - name: ebayUsername
          in: query
          description: Search for sales orders with a specific eBay username.
          schema:
            type: string
        - name: shippingMethodId
          in: query
          description: Search for sales orders with a specific shipping method.
          schema:
            type: integer
            format: int32
        - name: deliveredDate
          in: query
          description: Search for sales orders delivered on this date.
          schema:
            type: string
            format: date-time
        - name: isCancelled
          in: query
          description: Determines if the sales order is cancelled.
          schema:
            type: boolean
        - name: onHoldReasonId
          in: query
          description: Search for sales orders with a specific on hold reason.
          schema:
            type: integer
            format: int32
        - name: isExternalInvoice
          in: query
          description: Determines if the sales order is an external invoice.
          schema:
            type: boolean
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all non-pending sales orders.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.querysalesorders
            - all.read
      x-sort: 100
    post:
      tags:
        - salesorder
      summary: Create Sales Order
      description: Create a new sales order
      operationId: SalesOrderHeader_CreateSalesOrderAsync
      parameters:
        - name: renameSalesOrderNumberWhenAlreadyExists
          in: query
          description: >-
            If true, the sales order number will be renamed if it already
            exists.
          schema:
            type: boolean
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The sales order to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrder
        required: true
        x-bodyName: salesOrder
      responses:
        "201":
          description: The created sales order.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.createsalesorder
      x-sort: 210
  /salesOrders/{salesOrderId}:
    get:
      tags:
        - salesorder
      summary: Get Sales Order
      description: Get a specific sales order
      operationId: SalesOrderHeader_GetSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the order to return. Only non-pending orders are returned.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the sales order for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.getsalesorder
            - all.read
      x-sort: 200
    patch:
      tags:
        - salesorder
      summary: Update Sales Order
      description: Update a specific sales order
      operationId: SalesOrderHeader_UpdateSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: recalculateTax
          in: query
          description: >-
            0 - Keine Neuberechnung, auch wenn steuerrelevante Felder geändert
            wurden. 1 - Nettopreise beibehalten (Änderungen des
            Mehrwertsteuersatzes werden vom Kunden getragen). 2 - Bruttopreise
            beibehalten (Änderungen des Mehrwertsteuersatzes werden vom
            Einzelhändler getragen).
          schema:
            enum:
              - 0
              - 1
              - 2
            type: integer
            format: int32
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The sales order to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrder
        required: true
        x-bodyName: salesOrder
      responses:
        "201":
          description: The updated sales order.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.updatesalesorder
      x-sort: 220
  /salesOrders/{salesOrderId}/cancel:
    post:
      tags:
        - salesorder
      summary: Cancel Sales Order
      description: Cancel a specific sales order
      operationId: SalesOrderHeader_CancelSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The details for the cancellation to be performed.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderCancellationDetails
        required: true
        x-bodyName: cancellationDetails
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "406":
          description: The sales order cannot be cancelled.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.cancelsalesorder
      x-sort: 1000
  /salesOrders/{salesOrderId}/customfields:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Custom Field Values
      description: Query all custom fields and values for a specific sales order
      operationId: SalesOrderHeader_QuerySalesOrderCustomFieldValuesAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields values for a sales order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomFieldValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.querysalesordercustomfieldvalues
            - all.read
      x-sort: 710
  /salesOrders/{salesOrderId}/customfields/{customfieldId}:
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order Custom Field
      description: Delete the value of a specific custom field of a given sales order
      operationId: SalesOrderHeader_DeleteSalesOrderCustomFieldAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be deleted.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.deletesalesordercustomfield
      x-sort: 730
    patch:
      tags:
        - salesorder
      summary: Update Sales Order Custom Field
      description: Update the value of a specific sales order custom field
      operationId: SalesOrderHeader_UpdateSalesOrderCustomFieldAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The custom field value.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateCustomFieldValue
        required: true
        x-bodyName: customFieldValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.updatesalesordercustomfield
      x-sort: 720
  /salesOrders/{salesOrderId}/files:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Files
      description: Query all files for a specific sales order
      operationId: SalesOrderHeader_QuerySalesOrderFilesAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested files.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderFile
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.querysalesorderfiles
            - all.read
      x-sort: 500
    post:
      tags:
        - salesorder
      summary: Create Sales Order File
      description: Create a new file for a specific sales order
      operationId: SalesOrderHeader_CreateSalesOrderFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The file to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateFile
        required: true
        x-bodyName: file
      responses:
        "201":
          description: The created file.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderFile
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.createsalesorderfile
      x-sort: 520
  /salesOrders/{salesOrderId}/files/{salesOrderFileId}:
    get:
      tags:
        - salesorder
      summary: Query Sales Order File Data
      description: Query the data for a specific sales order file
      operationId: SalesOrderHeader_QuerySalesOrderFileDataAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderFileId
          in: path
          description: The unique identifier of the sales order file.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested file data.
          content:
            application/json:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.querysalesorderfiledata
            - all.read
      x-sort: 510
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order File
      description: Delete a specific file for a given sales order
      operationId: SalesOrderHeader_DeleteSalesOrderFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderFileId
          in: path
          description: The id of the sales order file.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.deletesalesorderfile
      x-sort: 530
    patch:
      tags:
        - salesorder
      summary: Update Sales Order File
      description: Update a file for a specific sales order
      operationId: SalesOrderHeader_UpdateSalesOrderFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderFileId
          in: path
          description: The id for a specific sales order file.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The file to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateFile
        required: true
        x-bodyName: file
      responses:
        "201":
          description: The updated sales order file.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderFile
        "400":
          description: The sent data is invalid.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.updatesalesorderfile
      x-sort: 525
  /salesOrders/{salesOrderId}/lineitems:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Line Items
      description: Query all line items for a specific sales order
      operationId: SalesOrderHeader_QuerySalesOrderLineItemsAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested line items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.querysalesorderlineitems
            - all.read
      x-sort: 300
    post:
      tags:
        - salesorder
      summary: Create Sales Order Line Item
      description: Create a new line item for a specific sales order
      operationId: SalesOrderHeader_CreateSalesOrderLineItemAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The line items to create.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderLineItem
        required: true
        x-bodyName: lineItems
      responses:
        "201":
          description: The created line items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItem
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.createsalesorderlineitem
      x-sort: 310
  /salesOrders/{salesOrderId}/lineitems/{salesOrderLineItemId}:
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order Line Item
      description: Delete a specific line item for a given sales order
      operationId: SalesOrderHeader_DeleteSalesOrderLineItemAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the line item that the belongs to the sales order.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "403":
          description: Deletion of position not allowed
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.deletesalesorderlineitem
      x-sort: 330
    patch:
      tags:
        - salesorder
      summary: Update Sales Order Line Item
      description: Update a line item for a specific sales order
      operationId: SalesOrderHeader_UpdateSalesOrderLineItemAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the line item that the belongs to the sales order.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderLineItem
        required: true
        x-bodyName: salesOrderLineItem
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No line item with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.updatesalesorderlineitem
      x-sort: 320
  /salesOrders/{salesOrderId}/lineitems/{salesOrderLineItemId}/files:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Line Item Files
      description: Query files for line items of a specific sales order
      operationId: SalesOrderHeader_QuerySalesOrderLineItemFilesAsync
      parameters:
        - name: salesOrderId
          in: path
          description: >-
            The id of the sales order for which line item files are being
            queried.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: >-
            The id of the sales order line item for which files are being
            queried.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The files for the line items of the specified sales order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItemFile
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No files found for the line items of the specified sales order.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.querysalesorderlineitemfiles
      x-sort: 540
    post:
      tags:
        - salesorder
      summary: Create Sales Order Line Item File
      description: Create a new file for a specific sales order line item
      operationId: SalesOrderHeader_CreateSalesOrderLineItemFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: Search for a specific sales order line item number.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The file to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateFile
        required: true
        x-bodyName: file
      responses:
        "201":
          description: The created file.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItemFile
        "400":
          description: The sent data is invalid.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.createsalesorderlineitemfile
      x-sort: 520
  /salesOrders/{salesOrderId}/lineitems/{salesOrderLineItemId}/files/{salesOrderLineItemFileId}:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Line Item File Data
      description: Query the data for a specific sales order file
      operationId: SalesOrderHeader_QuerySalesOrderLineItemFileDataAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the sales order line item that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemFileId
          in: path
          description: The unique identifier of the sales order line item file.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested file data.
          content:
            application/json:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.querysalesorderlineitemfiledata
            - all.read
      x-sort: 510
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order Line Item File
      description: Delete all line item files for a given sales order and line item
      operationId: SalesOrderHeader_DeleteSalesOrderLineItemFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the sales order line item that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemFileId
          in: path
          description: Delete a specific file.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.deletesalesorderlineitemfile
      x-sort: 530
    patch:
      tags:
        - salesorder
      summary: Update Sales Order Line Item File
      description: Update a file for a specific sales order line item
      operationId: SalesOrderHeader_UpdateSalesOrderLineItemFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the sales order line item that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemFileId
          in: path
          description: The id for a specific sales order line item file.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The file to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderLineItemFile
        required: true
        x-bodyName: file
      responses:
        "201":
          description: The updated sales order line item file.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItemFile
        "400":
          description: The sent data is invalid.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.updatesalesorderlineitemfile
      x-sort: 540
  /salesOrders/{salesOrderId}/notes:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Notes
      description: Query all notes for a specific sales order
      operationId: SalesOrderHeader_QuerySalesOrderNotesAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested notes of the sales order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.querysalesordernotes
            - all.read
      x-sort: 400
    post:
      tags:
        - salesorder
      summary: Create Sales Order Note
      description: Create a new note for a specific sales order
      operationId: SalesOrderHeader_CreateSalesOrderNoteAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The note of the sales order to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateNote
        required: true
        x-bodyName: note
      responses:
        "201":
          description: The created note of the sales order.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.createsalesordernote
      x-sort: 410
  /salesOrders/{salesOrderId}/notes/{noteId}:
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order Note
      description: Delete a specific note for a given sales order
      operationId: SalesOrderHeader_DeleteSalesOrderNoteAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the note.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer note with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.deletesalesordernote
      x-sort: 730
    patch:
      tags:
        - salesorder
      summary: Update Sales Order Note
      description: Update a specific note for a given sales order
      operationId: SalesOrderHeader_UpdateSalesOrderNoteAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the note.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The note to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateNote
        required: true
        x-bodyName: note
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No note with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.updatesalesordernote
      x-sort: 720
  /salesOrders/{salesOrderId}/output/mail:
    post:
      tags:
        - salesorder
      summary: Mail Sales Order
      description: Execute the mailing of a SalesOrder
      operationId: SalesOrderHeader_MailSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Mailjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.mailsalesorder
      x-sort: 5010
  /salesOrders/{salesOrderId}/output/pdf:
    post:
      tags:
        - salesorder
      summary: Pdf Sales Order
      description: Execute the pdf creation of a SalesOrder
      operationId: SalesOrderHeader_PdfSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to create pdf.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.pdfsalesorder
      x-sort: 5010
  /salesOrders/{salesOrderId}/output/print:
    post:
      tags:
        - salesorder
      summary: Print Sales Order
      description: Execute the printing of a SalesOrder
      operationId: SalesOrderHeader_PrintSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.printsalesorder
      x-sort: 5010
  /salesOrders/{salesOrderId}/workflow/{workflowEventId}:
    post:
      tags:
        - salesorder
      summary: Trigger Sales Order Workflow
      description: Trigger a specific workflow event for a given sales order
      operationId: SalesOrderHeader_TriggerSalesOrderWorkflowAsync
      parameters:
        - name: salesOrderId
          in: path
          description: >-
            The id of the sales order for that the manual workflow event should
            be started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the event for that the manual workflow event should be
            started.1=Created | 2=Deleted | 3=Changed | 4=Delievered |
            5=Canceled | 6=Joined | 7=Splittet | 9=WithOutShipping |
            10=CompletePaid
          required: true
          schema:
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 9
              - 10
            type: integer
            format: int32
          x-enumNames:
            - Created
            - Deleted
            - Changed
            - Delievered
            - Canceled
            - Joined
            - Splittet
            - WithOutShipping
            - CompletePaid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.triggersalesorderworkflow
      x-sort: 5010
  /salesOrders/{salesOrderId}/workflowEvents:
    post:
      tags:
        - salesorder
      summary: Trigger Sales Order Workflow Event
      description: Trigger a specific workflow event for a given sales order
      operationId: SalesOrderHeader_TriggerSalesOrderWorkflowEventAsync
      parameters:
        - name: salesOrderId
          in: path
          description: >-
            The id of the sales order for that the manual workflow event should
            be started.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The workflow event.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateWorkflowEvent
        required: true
        x-bodyName: workflowEvent
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.triggersalesorderworkflowevent
      x-sort: 2100
  /salesOrders/cancellationReasons:
    get:
      tags:
        - cancellationreason
      summary: Query Sales Order Cancellation Reasons
      description: Query all cancellation reasons for sales orders
      operationId: SalesOrderHeader_QuerySalesOrderCancellationReasonsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all cancellation reasons for sales orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderCancellationReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - salesorder.querysalesordercancellationreasons
            - all.read
      x-sort: 0
  /salesOrders/customfields:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Custom Fields
      description: Query all custom fields for a sales order
      operationId: SalesOrderHeader_QuerySalesOrderCustomFieldsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields for sales orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomField
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.querysalesordercustomfields
            - all.read
      x-sort: 700
  /salesOrders/workflowEvents:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Workflow Events
      description: Query all available workflow events for sales orders
      operationId: SalesOrderHeader_QuerySalesOrderWorkflowEventsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            All manual workflow events for sales orders that could be used to
            trigger workflow events via REST-API.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.WorkflowEvent
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - salesorder.querysalesorderworkflowevents
            - all.read
      x-sort: 2000
  /shippingClasses:
    get:
      tags:
        - item
      summary: Query Shipping Classes
      description: Query all shipping classes
      operationId: ShippingClassHeader_QueryShippingClassesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all shipping classes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ShippingClass.ShippingClass
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - shippingclass.queryshippingclasses
            - all.read
      x-sort: 0
  /shippingMethods:
    get:
      tags:
        - shippingmethod
      summary: Query Shipping Methods
      description: Query all shipping methods
      operationId: ShippingMethodHeader_QueryShippingMethodsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all shipping methods.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ShippingMethod.ShippingMethod
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - shippingmethod.queryshippingmethods
            - all.read
      x-sort: 0
  /stocks:
    get:
      tags:
        - stock
      summary: Query Stocks Per Item
      description: Query stocks for a specific item, warehouse or storage location
      operationId: StockHeader_QueryStocksPerItemAsync
      parameters:
        - name: itemId
          in: query
          description: The id of the item that the stock belong to.
          schema:
            type: integer
            format: int32
        - name: warehouseId
          in: query
          description: The id of the warehouse that the stock belong to.
          schema:
            type: integer
            format: int32
        - name: storageLocationId
          in: query
          description: The id of the storage location that the stock belong to.
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested stock information.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Stock.Stock]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - stock.querystocksperitem
            - all.read
      x-sort: 200
    post:
      tags:
        - stock
      summary: Stock Adjustment
      description: >-
        Adjust the stock of a specific item. Depending from the item and
        warehouse many more details must be given (f.e. storage location,
        batch,...).
      operationId: StockHeader_StockAdjustmentAsync
      parameters:
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The relevant information for the stock change.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Stock.CreateStock
        required: true
        x-bodyName: stock
      responses:
        "201":
          description: The created stock.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Stock.Stock
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - stock.stockadjustment
      x-sort: 400
  /stocks/changes:
    get:
      tags:
        - stock
      summary: Query Stock Changes
      description: Returns all stock changes for a specific item from a given start date
      operationId: StockHeader_QueryStockChangesAsync
      parameters:
        - name: itemId
          in: query
          description: The id of the item.
          schema:
            type: integer
            format: int32
        - name: startDate
          in: query
          description: >-
            The start date from which all stock Adjustments until now are
            returned.
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested stock changes.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Stock.StockChange]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - stock.querystockchanges
            - all.read
      x-sort: 300
  /stocks/serialnumbers:
    get:
      tags:
        - stock
      summary: Query Serial Number Per Warehouse
      description: Query the serial numbers for a specific item and warehouse
      operationId: StockHeader_QuerySerialNumberPerWarehouseAsync
      parameters:
        - name: itemId
          in: query
          description: The id of the item that the stock belong to.
          schema:
            type: integer
            format: int32
        - name: warehouseId
          in: query
          description: The id of the warehouse.
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested serial numbers for the item and warehouse.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Stock.SerialNumber]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - stock.queryserialnumberperwarehouse
            - all.read
      x-sort: 500
  /suppliers:
    get:
      tags:
        - supplier
      summary: Query Suppliers
      description: Query all suppliers
      operationId: SupplierHeader_QuerySuppliersAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all suppliers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Supplier.Supplier
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - supplier.querysuppliers
            - all.read
      x-sort: 0
  /tax/item/{itemId}/{companyId}/{departureCountryISO}/{shipmentCountryISO}:
    get:
      tags:
        - tax
      summary: Get Tax For Item
      description: Returns the Taxrate for the given Item
      operationId: TaxHeader_GetTaxForItemAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the Item to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: companyId
          in: path
          description: The id of the Company to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: departureCountryISO
          in: path
          description: Country ISO code of the source Country.
          required: true
          schema:
            type: string
        - name: shipmentCountryISO
          in: path
          description: Country ISO code of the target Country.
          required: true
          schema:
            type: string
        - name: taxNumber
          in: query
          description: The taxNumber of the Customer
          schema:
            type: string
        - name: invoiceCountryISO
          in: query
          description: The Country ISO Code of the Invoice
          schema:
            type: string
        - name: invoiceCountryStateISO
          in: query
          description: The State in the Country of the Invoice
          schema:
            type: string
        - name: shipmentCountryStateISO
          in: query
          description: The State in the target Country
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
      responses:
        "200":
          description: The TaxRate for the given Item.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Tax.TaxRate
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      x-sort: 0
  /tax/taxclass/{taxClassId}/{companyId}/{departureCountryISO}/{shipmentCountryISO}:
    get:
      tags:
        - tax
      summary: Get Tax For Tax Class
      description: Returns the Taxrate for the given Item
      operationId: TaxHeader_GetTaxForTaxClassAsync
      parameters:
        - name: taxClassId
          in: path
          description: The id of the TaxClass to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: companyId
          in: path
          description: The id of the Company to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: departureCountryISO
          in: path
          description: Country ISO code of the source Country.
          required: true
          schema:
            type: string
        - name: shipmentCountryISO
          in: path
          description: Country ISO code of the target Country.
          required: true
          schema:
            type: string
        - name: taxNumber
          in: query
          description: The taxNumber of the Customer
          schema:
            type: string
        - name: invoiceCountryISO
          in: query
          description: The Country ISO Code of the Invoice
          schema:
            type: string
        - name: invoiceCountryStateISO
          in: query
          description: The State in the Country of the Invoice
          schema:
            type: string
        - name: shipmentCountryStateISO
          in: query
          description: The State in the target Country
          schema:
            type: string
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
      responses:
        "200":
          description: The TaxRate for the given TaxClassId.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Tax.TaxRate
        "404":
          description: No TaxClass with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      x-sort: 0
  /taxClasses:
    get:
      tags:
        - item
      summary: Query Tax Classes
      description: Query all tax classes
      operationId: TaxClassHeader_QueryTaxClassesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all tax classes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.TaxClass.TaxClass
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - taxclass.querytaxclasses
            - all.read
      x-sort: 0
  /transactionStatuses:
    get:
      tags:
        - transactionStatus
      summary: Query Transaction Status
      description: Query all transaction status for sales order
      operationId: TransactionStatusHeader_QueryTransactionStatusAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all transaction status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.TransactionStatus.TransactionStatus
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - transactionstatus.querytransactionstatus
            - all.read
      x-sort: 0
  /v1/accountingData:
    get:
      tags:
        - accountingData
      summary: Query Accounting Data
      description: "DEPRECATED: Use Versioning with Header\r\nDelivers a paginated overview of finalized accounting transactions, including invoices, credits, and their cancellations and corrections."
      operationId: AccountingData_QueryAccountingDataAsync
      parameters:
        - name: from
          in: query
          description: Filters documents starting from a specific date and time
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: Filters documents up to a specific date and time
          schema:
            type: string
            format: date-time
        - name: companyId
          in: query
          description: Filters documents by a specific company ID
          schema:
            type: integer
            format: int32
        - name: type
          in: query
          description: >-
            Specifies the type of document. 0 = Invoice, 1 = Credit, 2 = Invoice
            correction, 3 = Invoice cancellation, 4 = credit cancellation, 5 =
            invoice correction cancellation0=Invoice | 1=Credit |
            2=InvoiceCorrection | 3=InvoiceCancellation | 4=CreditCancellation |
            5=InvoiceCorrectionCancellation | 6=Liquidation |
            7=LiquidationCancellation
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
            type: integer
            format: int32
          x-enumNames:
            - Invoice
            - Credit
            - InvoiceCorrection
            - InvoiceCancellation
            - CreditCancellation
            - InvoiceCorrectionCancellation
            - Liquidation
            - LiquidationCancellation
        - name: exportCurrencyInDepartureCountry
          in: query
          description: If true, exports total sums in the currency of the departure country
          schema:
            type: boolean
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            Provides a detailed overview of all non-pending sales orders,
            including invoices, credits, invoice corrections, invoice
            cancellations, credit cancellations, and invoice correction
            cancellations, along with their associated line items
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.AccountingData.AccountingData]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No registration request was found for the specified identifier
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - accountingdata.queryaccountingdata
            - all.read
      x-sort: 100
  /v1/authentication:
    post:
      tags:
        - appRegistration
      summary: Register App
      description: "DEPRECATED: Use Versioning with Header\r\nSend a registration request for an (external) application"
      operationId: Authentication_RegisterAppAsync
      parameters:
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Contains the registration request's data
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.CreateAppRegistrationRequest
        required: true
        x-bodyName: registrationRequest
      responses:
        "201":
          description: >-
            Status of the registration process (including the unique identifiers
            for application and registration request)
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.RegistrationRequestStatusInfo
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "403":
          description: >-
            There was no application service available to receive and handle the
            registration request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "409":
          description: An application with the specified unique id is already registered.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      x-sort: 0
  /v1/authentication/{registrationId}:
    get:
      tags:
        - appRegistration
      summary: Fetch Registration Status
      description: "DEPRECATED: Use Versioning with Header\r\nObtain information about a registration request"
      operationId: Authentication_FetchRegistrationStatusAsync
      parameters:
        - name: registrationId
          in: path
          description: Unique identifier of the registration request
          required: true
          schema:
            type: string
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: >-
            Registration information (containing the current status of the
            registration process)
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.RegistrationInformation
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No registration request was found for the specified identifier
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "410":
          description: >-
            The registration request for the specified identifier has already
            been processed and answered
          content:
            application/json: {}
      deprecated: true
      x-sort: 0
    post:
      tags:
        - appRegistration
      summary: Register Multi Instance App
      description: "DEPRECATED: Use Versioning with Header\r\nSends a registration request for another instance of the same application"
      operationId: Authentication_RegisterMultiInstanceAppAsync
      parameters:
        - name: registrationId
          in: path
          description: Unique identifier of the registration request
          required: true
          schema:
            type: string
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: >-
            Status of the registration process (including the unique identifiers
            of the application and registration request)
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.RegistrationRequestStatusInfo
        "400":
          description: The operation was not allowed in the given context.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "402":
          description: >-
            No licence available or the application has not been authorised by
            JTL.
          content:
            application/json: {}
        "403":
          description: >-
            There was no application service available to receive and handle the
            registration.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      x-sort: 0
  /v1/authentication/login:
    post:
      tags:
        - login
      summary: Login
      description: "DEPRECATED: Use Versioning with Header\r\nSends a request to log in the user / dynamically assign the WAWI user. Only use this request if your API uses SSL."
      operationId: Authentication_LoginAsync
      parameters:
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Contains the login information
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.CreateLogin
        required: true
        x-bodyName: loginRequest
      responses:
        "200":
          description: login success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.Login
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      x-sort: 0
  /v1/authentication/logout:
    post:
      tags:
        - logout
      summary: Logout
      description: "DEPRECATED: Use Versioning with Header\r\nSends a request to log out the user"
      operationId: Authentication_LogoutAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
        - name: x-challengecode
          in: header
          description: >-
            You can enter any custom value here. The X-ChallengeCode is used
            during app registration and must be the same for all registration
            requests. The maximum length is 30 characters.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: logout success
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - authentication.logout
      x-sort: 0
  /v1/availabilities:
    get:
      tags:
        - item
      summary: Query Availabilities
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all availabilites for items"
      operationId: Availability_QueryAvailabilitiesAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all availabilites for items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Availability.Availability
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - availability.queryavailabilities
            - all.read
      x-sort: 0
  /v1/cancellationReasons:
    get:
      tags:
        - cancellationreason
      summary: Query Cancellation Reasons
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all cancellation reasons for sales orders"
      operationId: CancellationReason_QueryCancellationReasonsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all cancellation reasons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CancellationReason.CancellationReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - cancellationreason.querycancellationreasons
            - all.read
      x-sort: 0
  /v1/categories:
    get:
      tags:
        - category
      summary: Query Categories
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all categories"
      operationId: Category_QueryCategoriesAsync
      parameters:
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all categories.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Category.Category]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - category.querycategories
            - all.read
      x-sort: 100
    post:
      tags:
        - category
      summary: Create Category
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new category"
      operationId: Category_CreateCategoryAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The category to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.CreateCategory
        required: true
        x-bodyName: category
      responses:
        "201":
          description: The created category.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.Category
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - category.createcategory
      x-sort: 210
  /v1/categories/{categoryId}:
    get:
      tags:
        - category
      summary: Get Category
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific category"
      operationId: Category_GetCategoryAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the category for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.Category
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - category.getcategory
            - all.read
      x-sort: 200
    patch:
      tags:
        - category
      summary: Update Category
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific category"
      operationId: Category_UpdateCategoryAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The category to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.UpdateCategory
        required: true
        x-bodyName: category
      responses:
        "201":
          description: The updated category.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.Category
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - category.updatecategory
      x-sort: 220
  /v1/categories/{categoryId}/descriptions:
    get:
      tags:
        - category
      summary: Query Category Descriptions
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all descriptions for a specific category"
      operationId: Category_QueryCategoryDescriptionsAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested category descriptions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.CategoryDescription
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - category.querycategorydescriptions
      x-sort: 300
    post:
      tags:
        - category
      summary: Create Category Description
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new description for a specific category"
      operationId: Category_CreateCategoryDescriptionAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The categoryDescription to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.CreateCategoryDescription
        required: true
        x-bodyName: categoryDescription
      responses:
        "201":
          description: The created category description.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.CategoryDescription
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - category.createcategorydescription
      x-sort: 310
  /v1/categories/{categoryId}/descriptions/{salesChannelId}/{languageIso}:
    delete:
      tags:
        - category
      summary: Delete Category Description
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a description for a specific category"
      operationId: Category_DeleteCategoryDescriptionAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: The id of the sales channel that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - category.deletecategorydescription
      x-sort: 330
    patch:
      tags:
        - category
      summary: Update Category Description
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a description for a specific category"
      operationId: Category_UpdateCategoryDescriptionAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: The id of the sales channel that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The category to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.UpdateCategoryDescription
        required: true
        x-bodyName: categoryDescription
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - category.updatecategorydescription
      x-sort: 320
  /v1/categories/{categoryId}/items:
    post:
      tags:
        - category
      summary: Add Category Items
      description: "DEPRECATED: Use Versioning with Header\r\nAdd items to a specific category"
      operationId: Category_AddCategoryItemsAsync
      parameters:
        - name: categoryId
          in: path
          description: The id of the category where the items should be assigned.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item Ids to be assigned to the category.
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
        x-bodyName: items
      responses:
        "201":
          description: The assigned item ids.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - category.addcategoryitems
      x-sort: 1000
  /v1/colorCodes:
    get:
      tags:
        - colorcodes
      summary: Query Color Codes
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all color codes for sales orders"
      operationId: ColorCode_QueryColorCodesAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all color codes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ColorCode.ColorCode
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - colorcode.querycolorcodes
            - all.read
      x-sort: 0
  /v1/companies:
    get:
      tags:
        - company
      summary: Query Companies
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all companies"
      operationId: Company_QueryCompaniesAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all companies.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Company.Company
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - company.querycompanies
            - all.read
      x-sort: 0
  /v1/conditions:
    get:
      tags:
        - item
      summary: Query Conditions
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all item conditions"
      operationId: Condition_QueryConditionsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all conditions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Condition.Condition
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - condition.queryconditions
            - all.read
      x-sort: 0
  /v1/creditNotes/{creditNoteId}/output/mail:
    post:
      tags:
        - creditnote
      summary: Mail Credit Note
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the mailing of a CreditNote"
      operationId: CreditNote_MailCreditNoteAsync
      parameters:
        - name: creditNoteId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The MailJob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - creditnote.mailcreditnote
      x-sort: 5010
  /v1/creditNotes/{creditNoteId}/output/pdf:
    post:
      tags:
        - creditnote
      summary: Pdf Credit Note
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the pdf creation of a CreditNote"
      operationId: CreditNote_PdfCreditNoteAsync
      parameters:
        - name: creditNoteId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to creat pdf.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - creditnote.pdfcreditnote
      x-sort: 5010
  /v1/creditNotes/{creditNoteId}/output/print:
    post:
      tags:
        - creditnote
      summary: Print Credit Note
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the printing of a CreditNote"
      operationId: CreditNote_PrintCreditNoteAsync
      parameters:
        - name: creditNoteId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - creditnote.printcreditnote
      x-sort: 5010
  /v1/customerCategories:
    get:
      tags:
        - customerCategory
      summary: Query Customer Categories
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all customer categories"
      operationId: CustomerCategory_QueryCustomerCategoriesAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all customer categories.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CustomerCategory
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customercategory.querycustomercategories
            - all.read
      x-sort: 0
    post:
      tags:
        - customerCategory
      summary: Create Customer Category
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new customer category"
      operationId: CustomerCategory_CreateCustomerCategoryAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer category to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CreateCustomerCategory
        required: true
        x-bodyName: customerCategory
      responses:
        "201":
          description: The created customer category.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CustomerCategory
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customercategory.createcustomercategory
      x-sort: 0
  /v1/customerCategories/{customercategoryId}:
    get:
      tags:
        - customerCategory
      summary: Get Customer Category
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific customercategory"
      operationId: CustomerCategory_GetCustomerCategoryAsync
      parameters:
        - name: customercategoryId
          in: path
          description: The id of the Customercategory to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customercategory for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CustomerCategory
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customercategory with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customercategory.getcustomercategory
            - all.read
      x-sort: 200
    delete:
      tags:
        - customerCategory
      summary: Delete Customer Category
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific customercategory"
      operationId: CustomerCategory_DeleteCustomerCategoryAsync
      parameters:
        - name: customercategoryId
          in: path
          description: The id of the Customercategory to delete.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customercategory with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customercategory.deletecustomercategory
      x-sort: 200
    patch:
      tags:
        - customerCategory
      summary: Update Customer Category
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific customer category"
      operationId: CustomerCategory_UpdateCustomerCategoryAsync
      parameters:
        - name: customercategoryId
          in: path
          description: The id of the Customer category to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer category to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.UpdateCustomerCategory
        required: true
        x-bodyName: customerCategory
      responses:
        "201":
          description: The updated customer category.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CustomerCategory
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customercategory.updatecustomercategory
      x-sort: 0
  /v1/customerGroups:
    get:
      tags:
        - customerGroup
      summary: Query Customer Groups
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all customer groups"
      operationId: CustomerGroup_QueryCustomerGroupsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all customer groups.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CustomerGroup
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customergroup.querycustomergroups
            - all.read
      x-sort: 0
    post:
      tags:
        - customerGroup
      summary: Create Customer Group
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new customer group"
      operationId: CustomerGroup_CreateCustomerGroupAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer group to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CreateCustomerGroup
        required: true
        x-bodyName: customerGroup
      responses:
        "201":
          description: The created customer group.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CustomerGroup
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customergroup.createcustomergroup
      x-sort: 0
  /v1/customerGroups/{customergroupId}:
    get:
      tags:
        - customerGroup
      summary: Get Customer Group
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific customergroup"
      operationId: CustomerGroup_GetCustomerGroupAsync
      parameters:
        - name: customergroupId
          in: path
          description: The id of the Customergroup to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customergroup for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CustomerGroup
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customergroup with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customergroup.getcustomergroup
            - all.read
      x-sort: 200
    delete:
      tags:
        - customerGroup
      summary: Delete Customer Group
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific customergroup"
      operationId: CustomerGroup_DeleteCustomerGroupAsync
      parameters:
        - name: customergroupId
          in: path
          description: The id of the customergroup to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customergroup with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customergroup.deletecustomergroup
      x-sort: 0
    patch:
      tags:
        - customerGroup
      summary: Update Customer Group
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific customer group"
      operationId: CustomerGroup_UpdateCustomerGroupAsync
      parameters:
        - name: customergroupId
          in: path
          description: The id of the Customer group to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.UpdateCustomerGroup
        required: true
        x-bodyName: customerGroup
      responses:
        "201":
          description: The updated customer group.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CustomerGroup
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer group with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customergroup.updatecustomergroup
      x-sort: 0
  /v1/customers:
    get:
      tags:
        - customer
      summary: Query Customers
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all customers"
      operationId: Customer_QueryCustomersAsync
      parameters:
        - name: searchKeyWord
          in: query
          description: >-
            All Search Keywords for the customer, like the number and the most
            important fields from the billing address.
          schema:
            type: string
        - name: number
          in: query
          description: Search for a specific customer number.
          schema:
            type: string
        - name: groupId
          in: query
          description: All customers withing the given customer group.
          schema:
            type: integer
            format: int32
        - name: categoryId
          in: query
          description: All customers withing the given customer category.
          schema:
            type: integer
            format: int32
        - name: lastChangeFrom
          in: query
          description: >-
            All customers where the last change happened after or equal the
            given time
          schema:
            type: string
            format: date-time
        - name: lastChangeTo
          in: query
          description: >-
            All customers where the last change happened before or equal the
            given time
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            Returns all customer, can be filtered by searchKeyWord or
            categoryId.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Customer.Customer]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customer.querycustomers
            - all.read
      x-sort: 100
    post:
      tags:
        - customer
      summary: Create Customer
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new customer"
      operationId: Customer_CreateCustomerAsync
      parameters:
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CreateCustomer
        required: true
        x-bodyName: customer
      responses:
        "201":
          description: The created customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.Customer
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customer.createcustomer
      x-sort: 210
  /v1/customers/{customerId}:
    get:
      tags:
        - customer
      summary: Get Customer
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific customer"
      operationId: Customer_GetCustomerAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the Customer to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.Customer
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.getcustomer
            - all.read
      x-sort: 200
    delete:
      tags:
        - customer
      summary: Delete Customer
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific customer"
      operationId: Customer_DeleteCustomerAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.deletecustomer
      x-sort: 230
    patch:
      tags:
        - customer
      summary: Update Customer
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific customer"
      operationId: Customer_UpdateCustomerAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the Customer to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.UpdateCustomer
        required: true
        x-bodyName: customer
      responses:
        "201":
          description: The updated customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.Customer
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.updatecustomer
      x-sort: 220
  /v1/customers/{customerId}/bankaccounts:
    get:
      tags:
        - customer
      summary: Query Customer Bank Accounts
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all bank accounts for a specific customer"
      operationId: Customer_QueryCustomerBankAccountsAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested bank account of the customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerBankAccount
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.querycustomerbankaccounts
      x-sort: 500
    post:
      tags:
        - customer
      summary: Create Customer Bank Account
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new bank account for a specific customer"
      operationId: Customer_CreateCustomerBankAccountAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The bank account of the customer to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CreateCustomerBankAccount
        required: true
        x-bodyName: customerBankAccount
      responses:
        "201":
          description: The created bank account of the customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerBankAccount
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customer.createcustomerbankaccount
      x-sort: 510
  /v1/customers/{customerId}/bankaccounts/{customerBankAccountId}:
    get:
      tags:
        - customer
      summary: Get Customer Bank Account
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific bank account"
      operationId: Customer_GetCustomerBankAccountAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerBankAccountId
          in: path
          description: The id of the customer bank account.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer bankaccount for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerBankAccount
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer bank account with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.getcustomerbankaccount
      x-sort: 505
    delete:
      tags:
        - customer
      summary: Delete Customer Bank Account
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific bank account"
      operationId: Customer_DeleteCustomerBankAccountAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerBankAccountId
          in: path
          description: The id of the customer bank account.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer bank account with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.deletecustomerbankaccount
      x-sort: 530
    patch:
      tags:
        - customer
      summary: Update Customer Bank Account
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific bank account"
      operationId: Customer_UpdateCustomerBankAccountAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the bank accounts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerBankAccountId
          in: path
          description: The id of the customer bank account.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer bank account to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.UpdateCustomerBankAccount
        required: true
        x-bodyName: customerBankAccount
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer bank account with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.updatecustomerbankaccount
      x-sort: 520
  /v1/customers/{customerId}/contacts:
    get:
      tags:
        - customer
      summary: Query Customer Contacts
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all contacts for a specific customer"
      operationId: Customer_QueryCustomerContactsAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the contacts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested contacts of the customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerContact
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.querycustomercontacts
      x-sort: 400
    post:
      tags:
        - customer
      summary: Create Customer Contact
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new customer contact"
      operationId: Customer_CreateCustomerContactAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the contacts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The contact of the customer to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CreateCustomerContact
        required: true
        x-bodyName: customerContact
      responses:
        "201":
          description: The created contact of the customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerContact
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customer.createcustomercontact
      x-sort: 410
  /v1/customers/{customerId}/contacts/{customerContactId}:
    get:
      tags:
        - customer
      summary: Get Customer Contact
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific contact from a customer"
      operationId: Customer_GetCustomerContactAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerContactId
          in: path
          description: The id of the customer contact.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer contact for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CustomerContact
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No concact with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.getcustomercontact
      x-sort: 405
    delete:
      tags:
        - customer
      summary: Delete Customer Contact
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific customer concact"
      operationId: Customer_DeleteCustomerContactAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the contacts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerContactId
          in: path
          description: The id of the customer contact.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer contact with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.deletecustomercontact
      x-sort: 430
    patch:
      tags:
        - customer
      summary: Update Customer Contact
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific customer contact"
      operationId: Customer_UpdateCustomerContactAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the contacts belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerContactId
          in: path
          description: The id of the customer contact.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The customer contact to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.UpdateCustomerContact
        required: true
        x-bodyName: customerContact
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer contact with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.updatecustomercontact
      x-sort: 420
  /v1/customers/{customerId}/customfields:
    get:
      tags:
        - customer
      summary: Query Customer Custom Field Values
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all custom fields and corresponding values for a specific customer"
      operationId: Customer_QueryCustomerCustomFieldValuesAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields values for a customer .
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomFieldValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.querycustomercustomfieldvalues
      x-sort: 710
  /v1/customers/{customerId}/customfields/{customfieldId}:
    delete:
      tags:
        - customer
      summary: Delete Customer Custom Field
      description: "DEPRECATED: Use Versioning with Header\r\nDelete the value for a specific customer field for a given customer"
      operationId: Customer_DeleteCustomerCustomFieldAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the custom field that should be deleted.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.deletecustomercustomfield
      x-sort: 730
    patch:
      tags:
        - customer
      summary: Update Customer Custom Field
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate the value of a specific custom field for a given customer"
      operationId: Customer_UpdateCustomerCustomFieldAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The custom field value.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateCustomFieldValue
        required: true
        x-bodyName: customFieldValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.updatecustomercustomfield
      x-sort: 720
  /v1/customers/{customerId}/lastChange:
    get:
      tags:
        - customer
      summary: Get Customer Last Change
      description: "DEPRECATED: Use Versioning with Header\r\nGet the date of the last change for a customer"
      operationId: Customer_GetCustomerLastChangeAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer's last change date for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.LastChange
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.getcustomerlastchange
      x-sort: 640
  /v1/customers/{customerId}/notes:
    get:
      tags:
        - customer
      summary: Query Customer Notes
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all notes for a specific customer"
      operationId: Customer_QueryCustomerNotesAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested notes of the customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.querycustomernotes
      x-sort: 600
    post:
      tags:
        - customer
      summary: Create Customer Note
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new note for a specific customer"
      operationId: Customer_CreateCustomerNoteAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The note of the customer to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateNote
        required: true
        x-bodyName: note
      responses:
        "201":
          description: The created note of the customer.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customer.createcustomernote
      x-sort: 610
  /v1/customers/{customerId}/notes/{noteId}:
    get:
      tags:
        - customer
      summary: Get Customer Note
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific note from a customer"
      operationId: Customer_GetCustomerNoteAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the customer note.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the customer for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No note with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.getcustomernote
      x-sort: 630
    delete:
      tags:
        - customer
      summary: Delete Customer Note
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific note for a customer"
      operationId: Customer_DeleteCustomerNoteAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the customer note.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No note with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.deletecustomernote
      x-sort: 630
    patch:
      tags:
        - customer
      summary: Update Customer Note
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific note for a customer"
      operationId: Customer_UpdateCustomerNoteAsync
      parameters:
        - name: customerId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the customer note.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The note to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateNote
        required: true
        x-bodyName: note
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No note with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.updatecustomernote
      x-sort: 620
  /v1/customers/{customerId}/workflow/{workflowEventId}:
    post:
      tags:
        - customer
      summary: Trigger Customer Workflow
      description: "DEPRECATED: Use Versioning with Header\r\nTrigger a specific workflow event for a given customer"
      operationId: Customer_TriggerCustomerWorkflowAsync
      parameters:
        - name: customerId
          in: path
          description: >-
            The id of the customer for that the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the Event for that the manual workflow event should be
            started.1=Created | 2=Changed
          required: true
          schema:
            enum:
              - 1
              - 2
            type: integer
            format: int32
          x-enumNames:
            - Created
            - Changed
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customer.triggercustomerworkflow
      x-sort: 5010
  /v1/customers/{customerId}/workflowEvents:
    post:
      tags:
        - customer
      summary: Trigger Customer Workflow Event
      description: "DEPRECATED: Use Versioning with Header\r\nTrigger a specific workflow event for a given customer"
      operationId: Customer_TriggerCustomerWorkflowEventAsync
      parameters:
        - name: customerId
          in: path
          description: >-
            The id of the customer for that the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The workflow event.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateWorkflowEvent
        required: true
        x-bodyName: workflowEvent
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - customer.triggercustomerworkflowevent
      x-sort: 2010
  /v1/customers/customfields:
    get:
      tags:
        - customer
      summary: Query Customer Custom Fields
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all custom fields available for a customer"
      operationId: Customer_QueryCustomerCustomFieldsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields for items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomField
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.querycustomercustomfields
      x-sort: 700
  /v1/customers/workflowEvents:
    get:
      tags:
        - customer
      summary: Query Customer Workflow Events
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all workflow events for customers"
      operationId: Customer_QueryCustomerWorkflowEventsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            All manual workflow events for customers that could be used to
            trigger workflow events via REST-API.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.WorkflowEvent
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - customer.querycustomerworkflowevents
      x-sort: 2000
  /v1/deliveryNotes:
    get:
      tags:
        - deliverynote
      summary: Query Delivery Notes
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all delivery notes"
      operationId: DeliveryNote_QueryDeliveryNotesAsync
      parameters:
        - name: salesOrderNumber
          in: query
          description: Search for a specific sales order number.
          schema:
            type: string
        - name: salesOrderNumberId
          in: query
          description: Search for a specific sales order.
          schema:
            type: integer
            format: int32
        - name: customerId
          in: query
          description: Search for a specific customer Id.
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all non-pending delivery notes.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNote]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - deliverynote.querydeliverynotes
            - all.read
      x-sort: 100
  /v1/deliveryNotes/{deliveryNoteId}:
    get:
      tags:
        - deliverynote
      summary: Get Delivery Note
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific delivery note"
      operationId: DeliveryNote_GetDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the delivery note.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the delivery note for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNote
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No delivery note order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - deliverynote.getdeliverynote
            - all.read
      x-sort: 200
  /v1/deliveryNotes/{deliveryNoteId}/output/mail:
    post:
      tags:
        - deliverynote
      summary: Mail Delivery Note
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the mailing of a DeliveryNote"
      operationId: DeliveryNote_MailDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The MailJob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - deliverynote.maildeliverynote
      x-sort: 5010
  /v1/deliveryNotes/{deliveryNoteId}/output/pdf:
    post:
      tags:
        - deliverynote
      summary: Pdf Delivery Note
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the pdf creation of a DeliveryNote"
      operationId: DeliveryNote_PdfDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to creat pdf.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - deliverynote.pdfdeliverynote
      x-sort: 5010
  /v1/deliveryNotes/{deliveryNoteId}/output/print:
    post:
      tags:
        - deliverynote
      summary: Print Delivery Note
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the printing of a DeliveryNote"
      operationId: DeliveryNote_PrintDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - deliverynote.printdeliverynote
      x-sort: 5010
  /v1/deliveryNotes/{deliveryNoteId}/packages:
    get:
      tags:
        - deliverynote
      summary: Get Delivery Note Packages
      description: "DEPRECATED: Use Versioning with Header\r\nGet all packages for a specific delivery note"
      operationId: DeliveryNote_GetDeliveryNotePackagesAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the delivery note.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the delivery note for the given id.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNotePackage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No delivery note order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - deliverynote.getdeliverynotepackages
            - all.read
      x-sort: 200
    post:
      tags:
        - deliverynote
      summary: Post Package Data For Delivery Note
      description: "DEPRECATED: Use Versioning with Header\r\nTransmit Package Data"
      operationId: DeliveryNote_PostPackageDataForDeliveryNoteAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: The id of the delivery note.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The Packages to Create
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.CreateDeliveryNotePackagePosting
        required: true
        x-bodyName: package
      responses:
        "201":
          description: Returns All packages that are created for the delivery note.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNotePackage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No delivery note order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - deliverynote.postpackagedatafordeliverynote
            - deliverynote.package
      x-sort: 200
  /v1/deliveryNotes/{deliveryNoteId}/workflow/{workflowEventId}:
    post:
      tags:
        - deliverynote
      summary: Trigger Delivery Note Workflow
      description: "DEPRECATED: Use Versioning with Header\r\nTrigger a specific workflow event for a given delivery Note"
      operationId: DeliveryNote_TriggerDeliveryNoteWorkflowAsync
      parameters:
        - name: deliveryNoteId
          in: path
          description: >-
            The id of the delivery Note for that the manual workflow event
            should be started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the Event for that the manual workflow event should be
            started.1=Created | 2=Deleted | 3=Shipped
          required: true
          schema:
            enum:
              - 1
              - 2
              - 3
            type: integer
            format: int32
          x-enumNames:
            - Created
            - Deleted
            - Shipped
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - deliverynote.triggerdeliverynoteworkflow
      x-sort: 5010
  /v1/deliveryNotes/packages/{packageId}:
    patch:
      tags:
        - deliverynote
      summary: Patch Package Data
      description: "DEPRECATED: Use Versioning with Header\r\nTransmit Package Data"
      operationId: DeliveryNote_PatchPackageDataAsync
      parameters:
        - name: packageId
          in: path
          description: The id of the package.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The Package to update
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.UpdateDeliveryNotePackagePosting
        required: true
        x-bodyName: package
      responses:
        "201":
          description: Returns the package that are created for the delivery note.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNotePackage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No delivery note order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - deliverynote.patchpackagedata
            - deliverynote.package
      x-sort: 200
  /v1/feature:
    get:
      tags:
        - features
      summary: Get Features
      description: "DEPRECATED: Use Versioning with Header\r\nReturns the available feature sets with release state and API version"
      operationId: Features_GetFeaturesAsync
      responses:
        "200":
          description: The available features with release state and API version.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Features.FeatureInfo
      deprecated: true
      x-sort: 0
  /v1/info:
    get:
      tags:
        - info
      summary: Get Status
      description: "DEPRECATED: Use Versioning with Header\r\nReturns the status of the API"
      operationId: Info_GetStatusAsync
      responses:
        "200":
          description: Status of the API.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Info.Status
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      x-sort: 0
  /v1/invoices:
    get:
      tags:
        - invoice
      summary: Query Invoices
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all Invoices"
      operationId: Invoice_QueryInvoicesAsync
      parameters:
        - name: salesOrderNumber
          in: query
          description: Search for a specific sales order number.
          schema:
            type: string
        - name: externalOrderNumber
          in: query
          description: Search for a specific external order number.
          schema:
            type: string
        - name: invoiceNumber
          in: query
          description: Search for a specific invoice number.
          schema:
            type: string
        - name: itemId
          in: query
          description: Search for a specific item ID.
          schema:
            type: integer
            format: int32
        - name: customerId
          in: query
          description: Search for a specific customer ID.
          schema:
            type: integer
            format: int32
        - name: paymentStatus
          in: query
          description: >-
            Search for a specific payment status.0=UnPayed | 1=PartialPayed |
            2=Payed
          schema:
            enum:
              - 0
              - 1
              - 2
            type: integer
            format: int32
          x-enumNames:
            - UnPayed
            - PartialPayed
            - Payed
        - name: isExternalInvoice
          in: query
          description: Search only for external invoices
          schema:
            type: boolean
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all non-pending sales orders.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Invoice.Invoice]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - invoice.queryinvoices
            - all.read
      x-sort: 100
  /v1/invoices/{invoiceId}:
    get:
      tags:
        - invoice
      summary: Get Invoice
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific invoice"
      operationId: Invoice_GetInvoiceAsync
      parameters:
        - name: invoiceId
          in: path
          description: The ID of the invoice to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the invoice for the given ID.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.Invoice
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No invoice with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - invoice.getinvoice
            - all.read
      x-sort: 200
  /v1/invoices/{invoiceId}/lineitems:
    get:
      tags:
        - invoice
      summary: Query Invoice Line Items
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all line items for a specific invoice"
      operationId: Invoice_QueryInvoiceLineItemsAsync
      parameters:
        - name: invoiceId
          in: path
          description: The ID of the invoice that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested line items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceLineItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No invoice line items could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - invoice.queryinvoicelineitems
            - all.read
      x-sort: 300
  /v1/invoices/{invoiceId}/output/mail:
    post:
      tags:
        - invoice
      summary: Mail Invoice
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the mailing of a Invoice"
      operationId: Invoice_MailInvoiceAsync
      parameters:
        - name: invoiceId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The MailJob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - invoice.mailinvoice
      x-sort: 5010
  /v1/invoices/{invoiceId}/output/pdf:
    post:
      tags:
        - invoice
      summary: Pdf Invoice
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the pdf creation of a Invoice"
      operationId: Invoice_PdfInvoiceAsync
      parameters:
        - name: invoiceId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to creat pdf.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - invoice.pdfinvoice
      x-sort: 5010
  /v1/invoices/{invoiceId}/output/print:
    post:
      tags:
        - invoice
      summary: Print Invoice
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the printing of a Invoice"
      operationId: Invoice_PrintInvoiceAsync
      parameters:
        - name: invoiceId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - invoice.printinvoice
      x-sort: 5010
  /v1/invoices/{invoiceId}/workflow/{workflowEventId}:
    post:
      tags:
        - invoice
      summary: Trigger Invoice Workflow
      description: "DEPRECATED: Use Versioning with Header\r\nTrigger a specific workflow event for a given invoice"
      operationId: Invoice_TriggerInvoiceWorkflowAsync
      parameters:
        - name: invoiceId
          in: path
          description: >-
            The ID of the invoice for which the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the Event for that the manual workflow event should be
            started.1=Created | 3=CompletePaid | 6=Canceled
          required: true
          schema:
            enum:
              - 1
              - 3
              - 6
            type: integer
            format: int32
          x-enumNames:
            - Created
            - CompletePaid
            - Canceled
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - invoice.triggerinvoiceworkflow
      x-sort: 5010
  /v1/invoices/{invoiceId}/workflowEvents:
    post:
      tags:
        - invoice
      summary: Trigger Invoice Workflow Event
      description: "DEPRECATED: Use Versioning with Header\r\nTrigger a specific workflow event for a given invoice"
      operationId: Invoice_TriggerInvoiceWorkflowEventAsync
      parameters:
        - name: invoiceId
          in: path
          description: >-
            The ID of the invoice for which the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The workflow event.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateWorkflowEvent
        required: true
        x-bodyName: workflowEvent
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - invoice.triggerinvoiceworkflowevent
      x-sort: 2100
  /v1/invoices/cancellationReasons:
    get:
      tags:
        - cancellationreason
      summary: Query Invoice Cancellation Reasons
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all cancellation reasons for invoices"
      operationId: Invoice_QueryInvoiceCancellationReasonsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all cancellation reasons for invoices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceCancellationReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - invoice.queryinvoicecancellationreasons
            - all.read
      x-sort: 0
  /v1/invoices/workflowEvents:
    get:
      tags:
        - invoice
      summary: Query Invoice Workflow Events
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all available workflow events for invoices"
      operationId: Invoice_QueryInvoiceWorkflowEventsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            All manual workflow events for invoices that could be used to
            trigger workflow events via REST API.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.WorkflowEvent
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No events could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - invoice.queryinvoiceworkflowevents
            - all.read
      x-sort: 2000
  /v1/items:
    get:
      tags:
        - item
      summary: Query Items
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all items"
      operationId: Item_QueryItemsAsync
      parameters:
        - name: searchKeyWord
          in: query
          description: >-
            A search key word which is using many important item identificators.
            For more info see documentation or the configuration in the search
            in items in JTL-Wawi.
          schema:
            type: string
        - name: categoryId
          in: query
          description: Id of the category.
          schema:
            type: integer
            format: int32
        - name: manufacturerId
          in: query
          description: Id of one of the item manufacturers.
          schema:
            type: integer
            format: int32
        - name: parentItemId
          in: query
          description: Id of one the parent item.
          schema:
            type: integer
            format: int32
        - name: changedSince
          in: query
          description: The date last changes were made to the item.
          schema:
            type: string
            format: date-time
        - name: isActiveOnSalesChannelId
          in: query
          description: The ID of the sales channel on which this item is active.
          schema:
            type: string
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all items, can be filtered by searchKeyWord and postalCode.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Item.Item]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.queryitems
            - all.read
      x-sort: 100
    post:
      tags:
        - item
      summary: Create Item
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new item"
      operationId: Item_CreateItemAsync
      parameters:
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItem
        required: true
        x-bodyName: item
      responses:
        "201":
          description: The created item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.Item"
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.createitem
      x-sort: 210
  /v1/items/{itemId}:
    get:
      tags:
        - item
      summary: Get Item
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific item"
      operationId: Item_GetItemAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the Item to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the Item for the given id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.Item"
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.getitem
            - all.read
      x-sort: 200
    patch:
      tags:
        - item
      summary: Update Item
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific item"
      operationId: Item_UpdateItemAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the Item to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItem
        required: true
        x-bodyName: item
      responses:
        "201":
          description: The updated item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.Item"
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitem
      x-sort: 220
  /v1/items/{itemId}/children/{childItemId}:
    post:
      tags:
        - item
      summary: Assign Child Item To Parent
      description: "DEPRECATED: Use Versioning with Header\r\nAssign child items to a specific parent"
      operationId: Item_AssignChildItemToParentAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: childItemId
          in: path
          description: >-
            The unique id of the item that should be assigned as a variation
            child to the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: >-
          The unique IDs of the variation values from the parent that should be
          assigned to the child. This must be an exact match and no other child
          can have these exact variation values.
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
        x-bodyName: variationValueIds
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.assignchilditemtoparent
      x-sort: 1090
  /v1/items/{itemId}/customerPrices:
    get:
      tags:
        - item
      summary: Query Item Customer Prices
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all customer prices for a specific item"
      operationId: Item_QueryItemCustomerPricesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the customer specific price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item prices.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemCustomerPrice
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemcustomerprices
            - all.read
      x-sort: 1360
    post:
      tags:
        - item
      summary: Create Item Customer Price
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new customer price for a specific item"
      operationId: Item_CreateItemCustomerPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the customer specific price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item customer price to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemCustomerPrice
        required: true
        x-bodyName: itemCustomerPrice
      responses:
        "201":
          description: The created item price.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemCustomerPrice
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.createitemcustomerprice
      x-sort: 1370
  /v1/items/{itemId}/customerPrices/{customerId}/{fromQuantity}:
    delete:
      tags:
        - item
      summary: Delete Item Customer Price
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific customer price for a given item"
      operationId: Item_DeleteItemCustomerPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the customer specific price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerId
          in: path
          description: >-
            The customer Id of the item that the customer specific price belongs
            to.
          required: true
          schema:
            type: integer
            format: int32
        - name: fromQuantity
          in: path
          description: The quantity for the bulk price
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.deleteitemcustomerprice
      x-sort: 1390
    patch:
      tags:
        - item
      summary: Update Item Customer Price
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific customer price for a given item"
      operationId: Item_UpdateItemCustomerPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the customer specific price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customerId
          in: path
          description: >-
            The customer Id of the item that the customer specific price belongs
            to.
          required: true
          schema:
            type: integer
            format: int32
        - name: fromQuantity
          in: path
          description: The quantity the customer must buy to find the sales price.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item customer price to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemCustomerPrice
        required: true
        x-bodyName: itemCustomerPrice
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitemcustomerprice
      x-sort: 1380
  /v1/items/{itemId}/customfields:
    get:
      tags:
        - item
      summary: Query Item Custom Field Values
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all custom field values for a specific item"
      operationId: Item_QueryItemCustomFieldValuesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields values for an item .
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomFieldValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemcustomfieldvalues
            - all.read
      x-sort: 1010
  /v1/items/{itemId}/customfields/{customfieldId}:
    delete:
      tags:
        - item
      summary: Delete Item Custom Field
      description: "DEPRECATED: Use Versioning with Header\r\nDelete the value for a specific custom field for a given item"
      operationId: Item_DeleteItemCustomFieldAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.deleteitemcustomfield
      x-sort: 1030
    patch:
      tags:
        - item
      summary: Update Item Custom Field
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate the value of a specific custom field for a given item"
      operationId: Item_UpdateItemCustomFieldAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The custom field value.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateCustomFieldValue
        required: true
        x-bodyName: customFieldValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitemcustomfield
      x-sort: 1020
  /v1/items/{itemId}/descriptions:
    get:
      tags:
        - item
      summary: Query Item Descriptions
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all descriptions for a specific item"
      operationId: Item_QueryItemDescriptionsAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item descriptions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemDescription
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemdescriptions
            - all.read
      x-sort: 400
    post:
      tags:
        - item
      summary: Create Item Description
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new description for a specific item"
      operationId: Item_CreateItemDescriptionAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The itemDescription to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemDescription
        required: true
        x-bodyName: itemDescription
      responses:
        "201":
          description: The created item description.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemDescription
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.createitemdescription
      x-sort: 410
  /v1/items/{itemId}/descriptions/{salesChannelId}/{languageIso}:
    delete:
      tags:
        - item
      summary: Delete Item Description
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific item description"
      operationId: Item_DeleteItemDescriptionAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: The id of the sales channel that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.deleteitemdescription
      x-sort: 430
    patch:
      tags:
        - item
      summary: Update Item Description
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific description for a given item"
      operationId: Item_UpdateItemDescriptionAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: The id of the sales channel that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemDescription
        required: true
        x-bodyName: itemDescription
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitemdescription
      x-sort: 420
  /v1/items/{itemId}/images:
    get:
      tags:
        - item
      summary: Query Item Images
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all images for a specific item"
      operationId: Item_QueryItemImagesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item images.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemImage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemimages
            - all.read
      x-sort: 600
    post:
      tags:
        - item
      summary: Create Item Image
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new image for a specific item"
      operationId: Item_CreateItemImageAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the image should belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemImage to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemImage
        required: true
        x-bodyName: itemImage
      responses:
        "201":
          description: The created item image.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemImage
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.createitemimage
      x-sort: 620
  /v1/items/{itemId}/images/{imageId}:
    delete:
      tags:
        - item
      summary: Delete Item Image
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific image for a given item"
      operationId: Item_DeleteItemImageAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: imageId
          in: path
          description: The id of the image.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.deleteitemimage
      x-sort: 640
    patch:
      tags:
        - item
      summary: Update Item Image
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific image for a given item"
      operationId: Item_UpdateItemImageAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the descriptions belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: imageId
          in: path
          description: The id of the image.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The itemImage to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemImage
        required: true
        x-bodyName: itemImage
      responses:
        "201":
          description: The updated item image.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemImage
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitemimage
      x-sort: 630
  /v1/items/{itemId}/properties:
    get:
      tags:
        - item
      summary: Query Item Properties
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all properties for a specific item"
      operationId: Item_QueryItemPropertiesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested property values for the item.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemProperties
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemproperties
            - all.read
      x-sort: 1200
    post:
      tags:
        - item
      summary: Create Item Property
      description: "DEPRECATED: Use Versioning with Header\r\nAssign a property value to a specific item"
      operationId: Item_CreateItemPropertyAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemPropertyValue to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemPropertyValue
        required: true
        x-bodyName: itemPropertyValue
      responses:
        "201":
          description: The created ItemPropertyValue.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemPropertyValue
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.createitemproperty
      x-sort: 1210
  /v1/items/{itemId}/properties/{propertyValueId}:
    delete:
      tags:
        - item
      summary: Delete Item Property
      description: "DEPRECATED: Use Versioning with Header\r\nDelete properties from a specific item"
      operationId: Item_DeleteItemPropertyAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The unique id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and property value with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.deleteitemproperty
      x-sort: 1220
  /v1/items/{itemId}/salesChannelPrices:
    get:
      tags:
        - item
      summary: Query Item Sales Channel Price
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all sales channel prices for a specific item"
      operationId: Item_QueryItemSalesChannelPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the sales channel prices belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item prices for sales channel.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSalesChannelPrice
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemsaleschannelprice
            - all.read
      x-sort: 1300
    post:
      tags:
        - item
      summary: Create Item Sales Channel Price
      description: "DEPRECATED: Use Versioning with Header\r\nCreate new sales channel prices for a specific item"
      operationId: Item_CreateItemSalesChannelPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the sales channel price belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The sales channel price for an item to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemSalesChannelPrice
        required: true
        x-bodyName: itemSalesChannelPrice
      responses:
        "201":
          description: The created item sales channel price.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSalesChannelPrice
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.createitemsaleschannelprice
      x-sort: 1310
  /v1/items/{itemId}/salesChannelPrices/{salesChannelId}/{customerGroupId}/{fromQuantity}:
    delete:
      tags:
        - item
      summary: Delete Item Sales Channel Price
      description: "DEPRECATED: Use Versioning with Header\r\nDElete a specific sales channel price for a given item"
      operationId: Item_DeleteItemSalesChannelPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The item Id of the item that the sales channel price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: >-
            The sales channel Id of the item that the sales channel price
            belongs to. Only online shops and JTL-POS are allowed.
          required: true
          schema:
            type: string
        - name: customerGroupId
          in: path
          description: >-
            The customer Group Id of the item that the sales channel price
            belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: fromQuantity
          in: path
          description: The quantity the customer must buy to find the sales price.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.deleteitemsaleschannelprice
      x-sort: 1330
    patch:
      tags:
        - item
      summary: Update Item Sales Channel Price
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific sales channel price for a given item"
      operationId: Item_UpdateItemSalesChannelPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The item Id of the item that the sales channel price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: path
          description: >-
            The sales channel Id of the item that the sales channel price
            belongs to. Only online shops and JTL-POS are allowed.
          required: true
          schema:
            type: string
        - name: customerGroupId
          in: path
          description: >-
            The customer Group Id of the item that the sales channel price
            belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: fromQuantity
          in: path
          description: The quantity the customer must buy to find the sales price.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item sales channel price to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSalesChannelPrice
        required: true
        x-bodyName: itemSalesChannelPrice
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitemsaleschannelprice
      x-sort: 1320
  /v1/items/{itemId}/specialprices:
    get:
      tags:
        - item
      summary: Query Item Special Price
      description: "DEPRECATED: Use Versioning with Header\r\nQuery the special prices for a specific item"
      operationId: Item_QueryItemSpecialPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the special price details belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested special price details of the item .
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSpecialPrice
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemspecialprice
            - all.read
      x-sort: 1500
    patch:
      tags:
        - item
      summary: Update Item Special Price
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate the  special prices for a specific item"
      operationId: Item_UpdateItemSpecialPriceAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the special price belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The special price details of the item to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSpecialPrice
        required: true
        x-bodyName: itemSpecialPrice
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitemspecialprice
      x-sort: 1520
  /v1/items/{itemId}/suppliers:
    get:
      tags:
        - item
      summary: Query Item Suppliers
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all suppliers for a specific item"
      operationId: Item_QueryItemSuppliersAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the supplier belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item suppliers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSupplier
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemsuppliers
            - all.read
      x-sort: 700
    post:
      tags:
        - item
      summary: Create Item Supplier
      description: "DEPRECATED: Use Versioning with Header\r\nAssign a supplier to a specific item"
      operationId: Item_CreateItemSupplierAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the supplier belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The itemSupplier to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemSupplier
        required: true
        x-bodyName: itemSupplier
      responses:
        "201":
          description: The created itemSupplier.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemSupplier
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.createitemsupplier
      x-sort: 710
  /v1/items/{itemId}/suppliers/{supplierId}:
    delete:
      tags:
        - item
      summary: Delete Item Supplier
      description: "DEPRECATED: Use Versioning with Header\r\nDelete the connection between a specific supplier and item"
      operationId: Item_DeleteItemSupplierAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: supplierId
          in: path
          description: The unique id of the supplier.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and supplier with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.deleteitemsupplier
      x-sort: 730
    patch:
      tags:
        - item
      summary: Update Item Supplier
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate the information for a specific supplier for a given item"
      operationId: Item_UpdateItemSupplierAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: supplierId
          in: path
          description: The unique id of the supplier.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The itemSupplier to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSupplier
        required: true
        x-bodyName: itemSupplier
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and supplier with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitemsupplier
      x-sort: 720
  /v1/items/{itemId}/variations:
    get:
      tags:
        - item
      summary: Query Item Variations
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all variations for a specific item"
      operationId: Item_QueryItemVariationsAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the variations belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item variations.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemVariation
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemvariations
            - all.read
      x-sort: 1000
    post:
      tags:
        - item
      summary: Create Item Variation
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new variation for a specific item"
      operationId: Item_CreateItemVariationAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the supplier belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemVariation to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemVariation
        required: true
        x-bodyName: itemVariation
      responses:
        "201":
          description: The created ItemVariation.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemVariation
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.createitemvariation
      x-sort: 1010
  /v1/items/{itemId}/variations/{variationId}:
    delete:
      tags:
        - item
      summary: Delete Item Variation
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific variation for a given item"
      operationId: Item_DeleteItemVariationAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and variation with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.deleteitemvariation
      x-sort: 1030
    patch:
      tags:
        - item
      summary: Update Item Variation
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific variation for a given item"
      operationId: Item_UpdateItemVariationAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemVariation to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemVariation
        required: true
        x-bodyName: itemVariation
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and variation with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitemvariation
      x-sort: 1020
  /v1/items/{itemId}/variations/{variationId}/values:
    get:
      tags:
        - item
      summary: Query Item Variation Values
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all values for a specific item variation"
      operationId: Item_QueryItemVariationValuesAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the variations belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested values for the item variation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemVariationValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemvariationvalues
            - all.read
      x-sort: 1040
    post:
      tags:
        - item
      summary: Create Item Variation Value
      description: "DEPRECATED: Use Versioning with Header\r\nCreate new values for a specific item variation"
      operationId: Item_CreateItemVariationValueAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the item that the supplier belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemVariationValue to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemVariationValue
        required: true
        x-bodyName: itemVariationValue
      responses:
        "201":
          description: The created ItemVariationValue.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemVariationValue
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.createitemvariationvalue
      x-sort: 1050
  /v1/items/{itemId}/variations/{variationId}/values/{variationValueId}:
    delete:
      tags:
        - item
      summary: Delete Item Variation Value
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific value for a item variation"
      operationId: Item_DeleteItemVariationValueAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationValueId
          in: path
          description: The unique id of the variation value.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and variation or variation value with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.deleteitemvariationvalue
      x-sort: 1070
    patch:
      tags:
        - item
      summary: Update Item Variation Value
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate the value for a specific item variation"
      operationId: Item_UpdateItemVariationValueAsync
      parameters:
        - name: itemId
          in: path
          description: The unique id of the item.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationId
          in: path
          description: The unique id of the variation.
          required: true
          schema:
            type: integer
            format: int32
        - name: variationValueId
          in: path
          description: The unique id of the variation value.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The ItemVariationValue to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemVariationValue
        required: true
        x-bodyName: itemVariationValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item and variation or variation value with the given Ids exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.updateitemvariationvalue
      x-sort: 1060
  /v1/items/{itemId}/workflow/{workflowEventId}:
    post:
      tags:
        - item
      summary: Trigger Item Workflow
      description: "DEPRECATED: Use Versioning with Header\r\nTrigger a specific workflow event for a given item"
      operationId: Item_TriggerItemWorkflowAsync
      parameters:
        - name: itemId
          in: path
          description: >-
            The id of the item for that the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the event for that the manual workflow event should be
            started.1=Created | 2=Changed | 3=Deleted
          required: true
          schema:
            enum:
              - 1
              - 2
              - 3
            type: integer
            format: int32
          x-enumNames:
            - Created
            - Changed
            - Deleted
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.triggeritemworkflow
      x-sort: 5010
  /v1/items/{itemId}/workflowEvents:
    post:
      tags:
        - item
      summary: Trigger Item Workflow Event
      description: "DEPRECATED: Use Versioning with Header\r\nTrigger a specific workflow event for a given item"
      operationId: Item_TriggerItemWorkflowEventAsync
      parameters:
        - name: itemId
          in: path
          description: >-
            The id of the item for that the manual workflow event should be
            started.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The workflow event.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateWorkflowEvent
        required: true
        x-bodyName: workflowEvent
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - item.triggeritemworkflowevent
      x-sort: 5010
  /v1/items/customfields:
    get:
      tags:
        - item
      summary: Query Item Custom Fields
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all custom fields for items"
      operationId: Item_QueryItemCustomFieldsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields for items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomField
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemcustomfields
            - all.read
      x-sort: 1000
  /v1/items/imagedata/{imageId}:
    get:
      tags:
        - item
      summary: Query Item Image Data
      description: "DEPRECATED: Use Versioning with Header\r\nQuery the data for a specific item image"
      operationId: Item_QueryItemImageDataAsync
      parameters:
        - name: imageId
          in: path
          description: The id of the image.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested item data.
          content:
            application/json:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No image could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemimagedata
            - all.read
      x-sort: 610
  /v1/items/workflowEvents:
    get:
      tags:
        - item
      summary: Query Item Workflow Events
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all workflow events for items"
      operationId: Item_QueryItemWorkflowEventsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            All manual workflow events for items that could be used to trigger
            workflow events via REST-API.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.WorkflowEvent
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - item.queryitemworkflowevents
            - all.read
      x-sort: 5000
  /v1/manufacturers:
    get:
      tags:
        - item
      summary: Query Manufacturers
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all manufacturers"
      operationId: Manufacturer_QueryManufacturersAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all manufacturers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Manufacturer.Manufacturer
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - manufacturer.querymanufacturers
            - all.read
      x-sort: 0
  /v1/offer/{offerId}/output/mail:
    post:
      tags:
        - offer
      summary: Mail Offer
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the mailing of a Offer"
      operationId: Offer_MailOfferAsync
      parameters:
        - name: offerId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The MailJob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - offer.mailoffer
      x-sort: 5010
  /v1/offer/{offerId}/output/pdf:
    post:
      tags:
        - offer
      summary: Pdf Offer
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the pdf creation of a Offer"
      operationId: Offer_PdfOfferAsync
      parameters:
        - name: offerId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to creat pdf.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - offer.pdfoffer
      x-sort: 5010
  /v1/offer/{offerId}/output/print:
    post:
      tags:
        - offer
      summary: Print Offer
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the printing of a Offer"
      operationId: Offer_PrintOfferAsync
      parameters:
        - name: offerId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - offer.printoffer
      x-sort: 5010
  /v1/onHoldReasons:
    get:
      tags:
        - onholdreason
      summary: Query On Hold Reasons
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all on hold reasons for sales orders"
      operationId: OnHoldReason_QueryOnHoldReasonsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all payment methods.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.OnHoldReason.OnHoldReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - onholdreason.queryonholdreasons
            - all.read
      x-sort: 0
  /v1/paymentMethods:
    get:
      tags:
        - paymentmethod
      summary: Query Payment Methods
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all payment methods"
      operationId: PaymentMethod_QueryPaymentMethodsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all payment methods.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PaymentMethod.PaymentMethod
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - paymentmethod.querypaymentmethods
            - all.read
      x-sort: 0
  /v1/printers:
    get:
      tags:
        - printer
      summary: Installed Printers
      description: "DEPRECATED: Use Versioning with Header\r\nReturns all Installed Printers"
      operationId: Printers_InstalledPrintersAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all Installed Printers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - printers.installedprinters
            - all.read
      x-sort: 0
  /v1/productGroups:
    get:
      tags:
        - item
      summary: Query Product Groups
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all product groups"
      operationId: ProductGroup_QueryProductGroupsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all product groups.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ProductGroup.ProductGroup
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - productgroup.queryproductgroups
            - all.read
      x-sort: 0
  /v1/properties:
    get:
      tags:
        - property
      summary: Query Properties
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all properties for items"
      operationId: Property_QueryPropertiesAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all properties.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Property.Property]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - property.queryproperties
            - all.read
      x-sort: 100
    post:
      tags:
        - property
      summary: Create Property
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new property"
      operationId: Property_CreatePropertyAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The property to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.CreateProperty
        required: true
        x-bodyName: property
      responses:
        "201":
          description: The created property.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.Property
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - property.createproperty
      x-sort: 110
  /v1/properties/{propertyId}/values:
    get:
      tags:
        - property
      summary: Query Property Values
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all velues for a specific property"
      operationId: Property_QueryPropertyValuesAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested property values of the property.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - property.querypropertyvalues
            - all.read
      x-sort: 300
    post:
      tags:
        - property
      summary: Create Property Value
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new value for a specific property"
      operationId: Property_CreatePropertyValueAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The value of the property.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.CreatePropertyValue
        required: true
        x-bodyName: propertyValue
      responses:
        "201":
          description: The created property value.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyValue
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - property.createpropertyvalue
      x-sort: 310
  /v1/properties/{propertyId}/values/{propertyValueId}:
    delete:
      tags:
        - property
      summary: Delete Property Value
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific value for a given property"
      operationId: Property_DeletePropertyValueAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No property value or property with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - property.deletepropertyvalue
      x-sort: 330
    patch:
      tags:
        - property
      summary: Update Property Value
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate the value of a specific property"
      operationId: Property_UpdatePropertyValueAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property that the property values belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The value of the property.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.UpdatePropertyValue
        required: true
        x-bodyName: propertyValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No property value or property with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - property.updatepropertyvalue
      x-sort: 320
  /v1/properties/{propertyId}/values/{propertyValueId}/descriptions:
    get:
      tags:
        - property
      summary: Query Property Value Descriptions
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all descriptions for a specific property value"
      operationId: Property_QueryPropertyValueDescriptionsAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested property value descriptions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyValueDescription
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - property.querypropertyvaluedescriptions
            - all.read
      x-sort: 400
    post:
      tags:
        - property
      summary: Create Property Value Description
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new description for a specific property value"
      operationId: Property_CreatePropertyValueDescriptionAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The PropertyValueDescription to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.CreatePropertyValueDescription
        required: true
        x-bodyName: propertyValueDescription
      responses:
        "201":
          description: The created property value description.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyValueDescription
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - property.createpropertyvaluedescription
      x-sort: 410
  /v1/properties/{propertyId}/values/{propertyValueId}/descriptions/{languageIso}:
    delete:
      tags:
        - property
      summary: Delete Property Value Description
      description: "DEPRECATED: Use Versioning with Header\r\nDelete the description for a specific property value and language"
      operationId: Property_DeletePropertyValueDescriptionAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given IDs exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - property.deletepropertyvaluedescription
      x-sort: 430
    patch:
      tags:
        - property
      summary: Update Property Value Description
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate the description for a specific property value and language"
      operationId: Property_UpdatePropertyValueDescriptionAsync
      parameters:
        - name: propertyId
          in: path
          description: The id of the property.
          required: true
          schema:
            type: integer
            format: int32
        - name: propertyValueId
          in: path
          description: The id of the property value.
          required: true
          schema:
            type: integer
            format: int32
        - name: languageIso
          in: path
          description: The iso code of the language that the descriptions belong to.
          required: true
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The property value description to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.UpdatePropertyValueDescription
        required: true
        x-bodyName: propertyValueDescription
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data with the given IDs exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - property.updatepropertyvaluedescription
      x-sort: 420
  /v1/properties/groups:
    get:
      tags:
        - property
      summary: Query Property Groups
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all groups for properties"
      operationId: Property_QueryPropertyGroupsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all property groups.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Property.PropertyGroup]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - property.querypropertygroups
            - all.read
      x-sort: 200
    post:
      tags:
        - property
      summary: Create Property Group
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new property group"
      operationId: Property_CreatePropertyGroupAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The property group to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.CreatePropertyGroup
        required: true
        x-bodyName: propertyGroup
      responses:
        "201":
          description: The created property group.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyGroup
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - property.createpropertygroup
      x-sort: 210
  /v1/refunds/cancellationReasons:
    get:
      tags:
        - cancellationreason
      summary: Query Refund Cancellation Reasons
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all cancellation reasons for refunds"
      operationId: Refund_QueryRefundCancellationReasonsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all cancellation reasons for refunds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Refund.RefundCancellationReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - refund.queryrefundcancellationreasons
            - all.read
      x-sort: 0
  /v1/responsiblePersons:
    get:
      tags:
        - item
      summary: Query Responsible Persons
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all ResponsiblePerson"
      operationId: ResponsiblePerson_QueryResponsiblePersonsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all ResponsiblePerson.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ResponsiblePerson.ResponsiblePerson
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - responsibleperson.queryresponsiblepersons
            - all.read
      x-sort: 0
  /v1/returnReasons:
    get:
      tags:
        - returnreason
      summary: Query Return Reasons
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all return reasons"
      operationId: ReturnReason_QueryReturnReasonsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all return reasons.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ReturnReason.ReturnReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - returnreason.queryreturnreasons
            - all.read
      x-sort: 0
  /v1/returns:
    get:
      tags:
        - return
      summary: Query Returns
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all returns"
      operationId: Return_QueryReturnsAsync
      parameters:
        - name: returnNumber
          in: query
          description: Search for a specific return number.
          schema:
            type: string
        - name: customerId
          in: query
          description: Search for a specific customer Id.
          schema:
            type: integer
            format: int32
        - name: salesOrderId
          in: query
          description: Search for a specific sales order Id.
          schema:
            type: integer
            format: int32
        - name: returnStateId
          in: query
          description: Search for a specific return state.
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all non-pending returns.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Return.Return]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - return.queryreturns
            - all.read
      x-sort: 100
    post:
      tags:
        - return
      summary: Create Return
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new return with associated items and packages."
      operationId: Return_CreateReturnAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The details of the return to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.CreateReturn
        required: true
        x-bodyName: createReturn
      responses:
        "201":
          description: The created return.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.Return
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "500":
          description: An error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - return.createreturn
      x-sort: 400
  /v1/returns/{returnId}:
    get:
      tags:
        - return
      summary: Get Return
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific return"
      operationId: Return_GetReturnAsync
      parameters:
        - name: returnId
          in: path
          description: The id of the return.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the return for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.Return
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No return with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - return.getreturn
            - all.read
      x-sort: 200
  /v1/returns/{returnId}/lineitems:
    get:
      tags:
        - return
      summary: Query Return Line Items
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all line items for a specific return"
      operationId: Return_QueryReturnLineItemsAsync
      parameters:
        - name: returnId
          in: path
          description: The id of the return that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested line items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.ReturnLineItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - return.queryreturnlineitems
            - all.read
      x-sort: 300
  /v1/returns/{returnId}/packages:
    get:
      tags:
        - return
      summary: Query Return Packages
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all packages for a specific return"
      operationId: Return_QueryReturnPackagesAsync
      parameters:
        - name: returnId
          in: path
          description: The id of the return that the packages belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested packages.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.ReturnPackage
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - return.queryreturnpackages
            - all.read
      x-sort: 400
  /v1/returnStates:
    get:
      tags:
        - returnstate
      summary: Query Return States
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all return states"
      operationId: ReturnState_QueryReturnStatesAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all return states.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ReturnState.ReturnState
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - returnstate.queryreturnstates
            - all.read
      x-sort: 0
  /v1/salesChannels:
    get:
      tags:
        - saleschannel
      summary: Get Sales Channels
      description: "DEPRECATED: Use Versioning with Header\r\nGet all sales channels"
      operationId: SalesChannel_GetSalesChannelsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all sales channels with the available endpoints.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesChannel.SalesChannel
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - saleschannel.getsaleschannels
            - all.read
      x-sort: 0
  /v1/salesOrders:
    get:
      tags:
        - salesorder
      summary: Query Sales Orders
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all sales orders"
      operationId: SalesOrder_QuerySalesOrdersAsync
      parameters:
        - name: salesOrderNumber
          in: query
          description: Search for a specific sales order number.
          schema:
            type: string
        - name: externalOrderNumber
          in: query
          description: Search for a specific external order number.
          schema:
            type: string
        - name: billingNumber
          in: query
          description: Search for a specific billing number.
          schema:
            type: string
        - name: itemId
          in: query
          description: Search for a specific item Id.
          schema:
            type: integer
            format: int32
        - name: customerId
          in: query
          description: Search for a specific customer Id.
          schema:
            type: integer
            format: int32
        - name: paymentStatus
          in: query
          description: >-
            Search for a specific payment status.0=UnPayed | 1=PartialPayed |
            2=Payed
          schema:
            enum:
              - 0
              - 1
              - 2
            type: integer
            format: int32
          x-enumNames:
            - UnPayed
            - PartialPayed
            - Payed
        - name: paymentMethodId
          in: query
          description: Search for a specific payment method Id.
          schema:
            type: integer
            format: int32
        - name: deliveryCompleteStatus
          in: query
          description: >-
            Search for a specific payment status.0=DeliveryNotComplete |
            1=DeliveryComplete | 2=DeliveryCompleteWithoutNote
          schema:
            enum:
              - 0
              - 1
              - 2
            type: integer
            format: int32
          x-enumNames:
            - DeliveryNotComplete
            - DeliveryComplete
            - DeliveryCompleteWithoutNote
        - name: createdUserId
          in: query
          description: Search for a specific user created Id.
          schema:
            type: integer
            format: int32
        - name: companyId
          in: query
          description: Search for sales orders created by a specific company.
          schema:
            type: integer
            format: int32
        - name: salesChannelId
          in: query
          description: Search for a specific sales channel Id.
          schema:
            type: string
        - name: createdSince
          in: query
          description: Search for sales orders created after this date.
          schema:
            type: string
            format: date-time
        - name: createdUntil
          in: query
          description: Search for sales orders created before this date.
          schema:
            type: string
            format: date-time
        - name: colorId
          in: query
          description: Search for sales orders with a specific color.
          schema:
            type: integer
            format: int32
        - name: ebayUsername
          in: query
          description: Search for sales orders with a specific eBay username.
          schema:
            type: string
        - name: shippingMethodId
          in: query
          description: Search for sales orders with a specific shipping method.
          schema:
            type: integer
            format: int32
        - name: deliveredDate
          in: query
          description: Search for sales orders delivered on this date.
          schema:
            type: string
            format: date-time
        - name: isCancelled
          in: query
          description: Determines if the sales order is cancelled.
          schema:
            type: boolean
        - name: onHoldReasonId
          in: query
          description: Search for sales orders with a specific on hold reason.
          schema:
            type: integer
            format: int32
        - name: isExternalInvoice
          in: query
          description: Determines if the sales order is an external invoice.
          schema:
            type: boolean
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all non-pending sales orders.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesorders
            - all.read
      x-sort: 100
    post:
      tags:
        - salesorder
      summary: Create Sales Order
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new sales order"
      operationId: SalesOrder_CreateSalesOrderAsync
      parameters:
        - name: renameSalesOrderNumberWhenAlreadyExists
          in: query
          description: >-
            If true, the sales order number will be renamed if it already
            exists.
          schema:
            type: boolean
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The sales order to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrder
        required: true
        x-bodyName: salesOrder
      responses:
        "201":
          description: The created sales order.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.createsalesorder
      x-sort: 210
  /v1/salesOrders/{salesOrderId}:
    get:
      tags:
        - salesorder
      summary: Get Sales Order
      description: "DEPRECATED: Use Versioning with Header\r\nGet a specific sales order"
      operationId: SalesOrder_GetSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the order to return. Only non-pending orders are returned.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns the sales order for the given id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.getsalesorder
            - all.read
      x-sort: 200
    patch:
      tags:
        - salesorder
      summary: Update Sales Order
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific sales order"
      operationId: SalesOrder_UpdateSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: recalculateTax
          in: query
          description: >-
            0 - Keine Neuberechnung, auch wenn steuerrelevante Felder geändert
            wurden. 1 - Nettopreise beibehalten (Änderungen des
            Mehrwertsteuersatzes werden vom Kunden getragen). 2 - Bruttopreise
            beibehalten (Änderungen des Mehrwertsteuersatzes werden vom
            Einzelhändler getragen).
          schema:
            enum:
              - 0
              - 1
              - 2
            type: integer
            format: int32
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The sales order to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrder
        required: true
        x-bodyName: salesOrder
      responses:
        "201":
          description: The updated sales order.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.updatesalesorder
      x-sort: 220
  /v1/salesOrders/{salesOrderId}/cancel:
    post:
      tags:
        - salesorder
      summary: Cancel Sales Order
      description: "DEPRECATED: Use Versioning with Header\r\nCancel a specific sales order"
      operationId: SalesOrder_CancelSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The details for the cancellation to be performed.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderCancellationDetails
        required: true
        x-bodyName: cancellationDetails
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "406":
          description: The sales order cannot be cancelled.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.cancelsalesorder
      x-sort: 1000
  /v1/salesOrders/{salesOrderId}/customfields:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Custom Field Values
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all custom fields and values for a specific sales order"
      operationId: SalesOrder_QuerySalesOrderCustomFieldValuesAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields values for a sales order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomFieldValue
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesordercustomfieldvalues
            - all.read
      x-sort: 710
  /v1/salesOrders/{salesOrderId}/customfields/{customfieldId}:
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order Custom Field
      description: "DEPRECATED: Use Versioning with Header\r\nDelete the value of a specific custom field of a given sales order"
      operationId: SalesOrder_DeleteSalesOrderCustomFieldAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be deleted.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.deletesalesordercustomfield
      x-sort: 730
    patch:
      tags:
        - salesorder
      summary: Update Sales Order Custom Field
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate the value of a specific sales order custom field"
      operationId: SalesOrder_UpdateSalesOrderCustomFieldAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the custom field belongs to.
          required: true
          schema:
            type: integer
            format: int32
        - name: customfieldId
          in: path
          description: The id of the customfield that should be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The custom field value.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateCustomFieldValue
        required: true
        x-bodyName: customFieldValue
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.updatesalesordercustomfield
      x-sort: 720
  /v1/salesOrders/{salesOrderId}/files:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Files
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all files for a specific sales order"
      operationId: SalesOrder_QuerySalesOrderFilesAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested files.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderFile
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesorderfiles
            - all.read
      x-sort: 500
    post:
      tags:
        - salesorder
      summary: Create Sales Order File
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new file for a specific sales order"
      operationId: SalesOrder_CreateSalesOrderFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The file to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateFile
        required: true
        x-bodyName: file
      responses:
        "201":
          description: The created file.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderFile
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.createsalesorderfile
      x-sort: 520
  /v1/salesOrders/{salesOrderId}/files/{salesOrderFileId}:
    get:
      tags:
        - salesorder
      summary: Query Sales Order File Data
      description: "DEPRECATED: Use Versioning with Header\r\nQuery the data for a specific sales order file"
      operationId: SalesOrder_QuerySalesOrderFileDataAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderFileId
          in: path
          description: The unique identifier of the sales order file.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested file data.
          content:
            application/json:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesorderfiledata
            - all.read
      x-sort: 510
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order File
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific file for a given sales order"
      operationId: SalesOrder_DeleteSalesOrderFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderFileId
          in: path
          description: The id of the sales order file.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.deletesalesorderfile
      x-sort: 530
    patch:
      tags:
        - salesorder
      summary: Update Sales Order File
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a file for a specific sales order"
      operationId: SalesOrder_UpdateSalesOrderFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderFileId
          in: path
          description: The id for a specific sales order file.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The file to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateFile
        required: true
        x-bodyName: file
      responses:
        "201":
          description: The updated sales order file.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderFile
        "400":
          description: The sent data is invalid.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.updatesalesorderfile
      x-sort: 525
  /v1/salesOrders/{salesOrderId}/lineitems:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Line Items
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all line items for a specific sales order"
      operationId: SalesOrder_QuerySalesOrderLineItemsAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested line items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesorderlineitems
            - all.read
      x-sort: 300
    post:
      tags:
        - salesorder
      summary: Create Sales Order Line Item
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new line item for a specific sales order"
      operationId: SalesOrder_CreateSalesOrderLineItemAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The line items to create.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderLineItem
        required: true
        x-bodyName: lineItems
      responses:
        "201":
          description: The created line items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItem
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.createsalesorderlineitem
      x-sort: 310
  /v1/salesOrders/{salesOrderId}/lineitems/{salesOrderLineItemId}:
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order Line Item
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific line item for a given sales order"
      operationId: SalesOrder_DeleteSalesOrderLineItemAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the line item that the belongs to the sales order.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "403":
          description: Deletion of position not allowed
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.deletesalesorderlineitem
      x-sort: 330
    patch:
      tags:
        - salesorder
      summary: Update Sales Order Line Item
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a line item for a specific sales order"
      operationId: SalesOrder_UpdateSalesOrderLineItemAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the line items belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the line item that the belongs to the sales order.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The item to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderLineItem
        required: true
        x-bodyName: salesOrderLineItem
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No line item with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.updatesalesorderlineitem
      x-sort: 320
  /v1/salesOrders/{salesOrderId}/lineitems/{salesOrderLineItemId}/files:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Line Item Files
      description: "DEPRECATED: Use Versioning with Header\r\nQuery files for line items of a specific sales order"
      operationId: SalesOrder_QuerySalesOrderLineItemFilesAsync
      parameters:
        - name: salesOrderId
          in: path
          description: >-
            The id of the sales order for which line item files are being
            queried.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: >-
            The id of the sales order line item for which files are being
            queried.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The files for the line items of the specified sales order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItemFile
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No files found for the line items of the specified sales order.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesorderlineitemfiles
      x-sort: 540
    post:
      tags:
        - salesorder
      summary: Create Sales Order Line Item File
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new file for a specific sales order line item"
      operationId: SalesOrder_CreateSalesOrderLineItemFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: Search for a specific sales order line item number.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The file to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateFile
        required: true
        x-bodyName: file
      responses:
        "201":
          description: The created file.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItemFile
        "400":
          description: The sent data is invalid.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.createsalesorderlineitemfile
      x-sort: 520
  /v1/salesOrders/{salesOrderId}/lineitems/{salesOrderLineItemId}/files/{salesOrderLineItemFileId}:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Line Item File Data
      description: "DEPRECATED: Use Versioning with Header\r\nQuery the data for a specific sales order file"
      operationId: SalesOrder_QuerySalesOrderLineItemFileDataAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the sales order line item that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemFileId
          in: path
          description: The unique identifier of the sales order line item file.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested file data.
          content:
            application/json:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesorderlineitemfiledata
            - all.read
      x-sort: 510
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order Line Item File
      description: "DEPRECATED: Use Versioning with Header\r\nDelete all line item files for a given sales order and line item"
      operationId: SalesOrder_DeleteSalesOrderLineItemFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the sales order line item that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemFileId
          in: path
          description: Delete a specific file.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.deletesalesorderlineitemfile
      x-sort: 530
    patch:
      tags:
        - salesorder
      summary: Update Sales Order Line Item File
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a file for a specific sales order line item"
      operationId: SalesOrder_UpdateSalesOrderLineItemFileAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemId
          in: path
          description: The id of the sales order line item that the file belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: salesOrderLineItemFileId
          in: path
          description: The id for a specific sales order line item file.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The file to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderLineItemFile
        required: true
        x-bodyName: file
      responses:
        "201":
          description: The updated sales order line item file.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItemFile
        "400":
          description: The sent data is invalid.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No sales order with the given ID exists.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.updatesalesorderlineitemfile
      x-sort: 540
  /v1/salesOrders/{salesOrderId}/notes:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Notes
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all notes for a specific sales order"
      operationId: SalesOrder_QuerySalesOrderNotesAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested notes of the sales order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No data could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesordernotes
            - all.read
      x-sort: 400
    post:
      tags:
        - salesorder
      summary: Create Sales Order Note
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new note for a specific sales order"
      operationId: SalesOrder_CreateSalesOrderNoteAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The note of the sales order to create.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateNote
        required: true
        x-bodyName: note
      responses:
        "201":
          description: The created note of the sales order.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Note
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.createsalesordernote
      x-sort: 410
  /v1/salesOrders/{salesOrderId}/notes/{noteId}:
    delete:
      tags:
        - salesorder
      summary: Delete Sales Order Note
      description: "DEPRECATED: Use Versioning with Header\r\nDelete a specific note for a given sales order"
      operationId: SalesOrder_DeleteSalesOrderNoteAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the customer that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the note.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No customer note with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.deletesalesordernote
      x-sort: 730
    patch:
      tags:
        - salesorder
      summary: Update Sales Order Note
      description: "DEPRECATED: Use Versioning with Header\r\nUpdate a specific note for a given sales order"
      operationId: SalesOrder_UpdateSalesOrderNoteAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order that the notes belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: The id of the note.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The note to update.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateNote
        required: true
        x-bodyName: note
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No note with the given ID exists
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.updatesalesordernote
      x-sort: 720
  /v1/salesOrders/{salesOrderId}/output/mail:
    post:
      tags:
        - salesorder
      summary: Mail Sales Order
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the mailing of a SalesOrder"
      operationId: SalesOrder_MailSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order for that the mail to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to mail.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Mailjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.mailsalesorder
      x-sort: 5010
  /v1/salesOrders/{salesOrderId}/output/pdf:
    post:
      tags:
        - salesorder
      summary: Pdf Sales Order
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the pdf creation of a SalesOrder"
      operationId: SalesOrder_PdfSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order for that the creation of a pdf to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to create pdf.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Filestream of the Created PDF
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.pdfsalesorder
      x-sort: 5010
  /v1/salesOrders/{salesOrderId}/output/print:
    post:
      tags:
        - salesorder
      summary: Print Sales Order
      description: "DEPRECATED: Use Versioning with Header\r\nExecute the printing of a SalesOrder"
      operationId: SalesOrder_PrintSalesOrderAsync
      parameters:
        - name: salesOrderId
          in: path
          description: The id of the sales order for that the print to start.
          required: true
          schema:
            type: integer
            format: int32
        - name: formId
          in: query
          description: The optional key of a Form to Print.
          schema:
            type: integer
            format: int32
        - name: printer
          in: query
          description: >-
            The target printer to print. The printer is Mandatory, if no User
            with Own Printer Configuration Available.
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: The Printjob is created
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.printsalesorder
      x-sort: 5010
  /v1/salesOrders/{salesOrderId}/workflow/{workflowEventId}:
    post:
      tags:
        - salesorder
      summary: Trigger Sales Order Workflow
      description: "DEPRECATED: Use Versioning with Header\r\nTrigger a specific workflow event for a given sales order"
      operationId: SalesOrder_TriggerSalesOrderWorkflowAsync
      parameters:
        - name: salesOrderId
          in: path
          description: >-
            The id of the sales order for that the manual workflow event should
            be started.
          required: true
          schema:
            type: integer
            format: int32
        - name: workflowEventId
          in: path
          description: >-
            The id of the event for that the manual workflow event should be
            started.1=Created | 2=Deleted | 3=Changed | 4=Delievered |
            5=Canceled | 6=Joined | 7=Splittet | 9=WithOutShipping |
            10=CompletePaid
          required: true
          schema:
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 9
              - 10
            type: integer
            format: int32
          x-enumNames:
            - Created
            - Deleted
            - Changed
            - Delievered
            - Canceled
            - Joined
            - Splittet
            - WithOutShipping
            - CompletePaid
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.triggersalesorderworkflow
      x-sort: 5010
  /v1/salesOrders/{salesOrderId}/workflowEvents:
    post:
      tags:
        - salesorder
      summary: Trigger Sales Order Workflow Event
      description: "DEPRECATED: Use Versioning with Header\r\nTrigger a specific workflow event for a given sales order"
      operationId: SalesOrder_TriggerSalesOrderWorkflowEventAsync
      parameters:
        - name: salesOrderId
          in: path
          description: >-
            The id of the sales order for that the manual workflow event should
            be started.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The workflow event.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateWorkflowEvent
        required: true
        x-bodyName: workflowEvent
      responses:
        "204":
          description: ""
          content:
            application/json: {}
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.triggersalesorderworkflowevent
      x-sort: 2100
  /v1/salesOrders/cancellationReasons:
    get:
      tags:
        - cancellationreason
      summary: Query Sales Order Cancellation Reasons
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all cancellation reasons for sales orders"
      operationId: SalesOrder_QuerySalesOrderCancellationReasonsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all cancellation reasons for sales orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderCancellationReason
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesordercancellationreasons
            - all.read
      x-sort: 0
  /v1/salesOrders/customfields:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Custom Fields
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all custom fields for a sales order"
      operationId: SalesOrder_QuerySalesOrderCustomFieldsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested custom fields for sales orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CustomField
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesordercustomfields
            - all.read
      x-sort: 700
  /v1/salesOrders/workflowEvents:
    get:
      tags:
        - salesorder
      summary: Query Sales Order Workflow Events
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all available workflow events for sales orders"
      operationId: SalesOrder_QuerySalesOrderWorkflowEventsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            All manual workflow events for sales orders that could be used to
            trigger workflow events via REST-API.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.WorkflowEvent
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - salesorder.querysalesorderworkflowevents
            - all.read
      x-sort: 2000
  /v1/shippingClasses:
    get:
      tags:
        - item
      summary: Query Shipping Classes
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all shipping classes"
      operationId: ShippingClass_QueryShippingClassesAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all shipping classes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ShippingClass.ShippingClass
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - shippingclass.queryshippingclasses
            - all.read
      x-sort: 0
  /v1/shippingMethods:
    get:
      tags:
        - shippingmethod
      summary: Query Shipping Methods
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all shipping methods"
      operationId: ShippingMethod_QueryShippingMethodsAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all shipping methods.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.ShippingMethod.ShippingMethod
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - shippingmethod.queryshippingmethods
            - all.read
      x-sort: 0
  /v1/stocks:
    get:
      tags:
        - stock
      summary: Query Stocks Per Item
      description: "DEPRECATED: Use Versioning with Header\r\nQuery stocks for a specific item, warehouse or storage location"
      operationId: Stock_QueryStocksPerItemAsync
      parameters:
        - name: itemId
          in: query
          description: The id of the item that the stock belong to.
          schema:
            type: integer
            format: int32
        - name: warehouseId
          in: query
          description: The id of the warehouse that the stock belong to.
          schema:
            type: integer
            format: int32
        - name: storageLocationId
          in: query
          description: The id of the storage location that the stock belong to.
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested stock information.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Stock.Stock]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - stock.querystocksperitem
            - all.read
      x-sort: 200
    post:
      tags:
        - stock
      summary: Stock Adjustment
      description: "DEPRECATED: Use Versioning with Header\r\nAdjust the stock of a specific item. Depending from the item and warehouse many more details must be given (f.e. storage location, batch,...)."
      operationId: Stock_StockAdjustmentAsync
      parameters:
        - name: disableAutomaticWorkflows
          in: query
          description: If true, the workflows do not trigger automatic.
          schema:
            type: boolean
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The relevant information for the stock change.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Stock.CreateStock
        required: true
        x-bodyName: stock
      responses:
        "201":
          description: The created stock.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Stock.Stock
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No category with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - stock.stockadjustment
      x-sort: 400
  /v1/stocks/changes:
    get:
      tags:
        - stock
      summary: Query Stock Changes
      description: "DEPRECATED: Use Versioning with Header\r\nReturns all stock changes for a specific item from a given start date"
      operationId: Stock_QueryStockChangesAsync
      parameters:
        - name: itemId
          in: query
          description: The id of the item.
          schema:
            type: integer
            format: int32
        - name: startDate
          in: query
          description: >-
            The start date from which all stock Adjustments until now are
            returned.
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested stock changes.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Stock.StockChange]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - stock.querystockchanges
            - all.read
      x-sort: 300
  /v1/stocks/serialnumbers:
    get:
      tags:
        - stock
      summary: Query Serial Number Per Warehouse
      description: "DEPRECATED: Use Versioning with Header\r\nQuery the serial numbers for a specific item and warehouse"
      operationId: Stock_QuerySerialNumberPerWarehouseAsync
      parameters:
        - name: itemId
          in: query
          description: The id of the item that the stock belong to.
          schema:
            type: integer
            format: int32
        - name: warehouseId
          in: query
          description: The id of the warehouse.
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The requested serial numbers for the item and warehouse.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Stock.SerialNumber]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - stock.queryserialnumberperwarehouse
            - all.read
      x-sort: 500
  /v1/suppliers:
    get:
      tags:
        - supplier
      summary: Query Suppliers
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all suppliers"
      operationId: Supplier_QuerySuppliersAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all suppliers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Supplier.Supplier
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - supplier.querysuppliers
            - all.read
      x-sort: 0
  /v1/tax/item/{itemId}/{companyId}/{departureCountryISO}/{shipmentCountryISO}:
    get:
      tags:
        - tax
      summary: Get Tax For Item
      description: "DEPRECATED: Use Versioning with Header\r\nReturns the Taxrate for the given Item"
      operationId: Tax_GetTaxForItemAsync
      parameters:
        - name: itemId
          in: path
          description: The id of the Item to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: companyId
          in: path
          description: The id of the Company to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: departureCountryISO
          in: path
          description: Country ISO code of the source Country.
          required: true
          schema:
            type: string
        - name: shipmentCountryISO
          in: path
          description: Country ISO code of the target Country.
          required: true
          schema:
            type: string
        - name: taxNumber
          in: query
          description: The taxNumber of the Customer
          schema:
            type: string
        - name: invoiceCountryISO
          in: query
          description: The Country ISO Code of the Invoice
          schema:
            type: string
        - name: invoiceCountryStateISO
          in: query
          description: The State in the Country of the Invoice
          schema:
            type: string
        - name: shipmentCountryStateISO
          in: query
          description: The State in the target Country
          schema:
            type: string
      responses:
        "200":
          description: The TaxRate for the given Item.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Tax.TaxRate
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      x-sort: 0
  /v1/tax/taxclass/{taxClassId}/{companyId}/{departureCountryISO}/{shipmentCountryISO}:
    get:
      tags:
        - tax
      summary: Get Tax For Tax Class
      description: "DEPRECATED: Use Versioning with Header\r\nReturns the Taxrate for the given Item"
      operationId: Tax_GetTaxForTaxClassAsync
      parameters:
        - name: taxClassId
          in: path
          description: The id of the TaxClass to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: companyId
          in: path
          description: The id of the Company to return.
          required: true
          schema:
            type: integer
            format: int32
        - name: departureCountryISO
          in: path
          description: Country ISO code of the source Country.
          required: true
          schema:
            type: string
        - name: shipmentCountryISO
          in: path
          description: Country ISO code of the target Country.
          required: true
          schema:
            type: string
        - name: taxNumber
          in: query
          description: The taxNumber of the Customer
          schema:
            type: string
        - name: invoiceCountryISO
          in: query
          description: The Country ISO Code of the Invoice
          schema:
            type: string
        - name: invoiceCountryStateISO
          in: query
          description: The State in the Country of the Invoice
          schema:
            type: string
        - name: shipmentCountryStateISO
          in: query
          description: The State in the target Country
          schema:
            type: string
      responses:
        "200":
          description: The TaxRate for the given TaxClassId.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Tax.TaxRate
        "404":
          description: No TaxClass with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      x-sort: 0
  /v1/taxClasses:
    get:
      tags:
        - item
      summary: Query Tax Classes
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all tax classes"
      operationId: TaxClass_QueryTaxClassesAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all tax classes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.TaxClass.TaxClass
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No fields could be found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - taxclass.querytaxclasses
            - all.read
      x-sort: 0
  /v1/transactionStatuses:
    get:
      tags:
        - transactionStatus
      summary: Query Transaction Status
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all transaction status for sales order"
      operationId: TransactionStatus_QueryTransactionStatusAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all transaction status.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.TransactionStatus.TransactionStatus
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - transactionstatus.querytransactionstatus
            - all.read
      x-sort: 0
  /v1/warehouses:
    get:
      tags:
        - warehouse
      summary: Query Warehouses
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all warehouses"
      operationId: Warehouse_QueryWarehousesAsync
      parameters:
        - name: isActive
          in: query
          description: Search for active or inactive warehouses.
          schema:
            type: boolean
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all warehouses.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Warehouse.Warehouse]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - warehouse.querywarehouses
            - all.read
      x-sort: 100
  /v1/warehouses/{warehouseId}/storagelocations:
    get:
      tags:
        - warehouse
      summary: Query Storage Locations
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all storage locations for a given warehouse"
      operationId: Warehouse_QueryStorageLocationsAsync
      parameters:
        - name: warehouseId
          in: path
          description: The id of the warehouse that the storage locations belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all storage locations of the warehouse.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Warehouse.StorageLocation]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No warehouse with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - warehouse.querystoragelocations
            - all.read
      x-sort: 110
  /v1/warehouses/storagelocationtypes:
    get:
      tags:
        - warehouse
      summary: Query Storage Location Type
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all storage location types"
      operationId: Warehouse_QueryStorageLocationTypeAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all storage location types.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Warehouse.StorageLocationType
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - warehouse.querystoragelocationtype
            - all.read
      x-sort: 110
  /v1/warehouses/types:
    get:
      tags:
        - warehouse
      summary: Query Warehouse Types
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all warehouse types"
      operationId: Warehouse_QueryWarehouseTypesAsync
      parameters:
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all warehouse types.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Warehouse.WarehouseType
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - warehouse.querywarehousetypes
            - all.read
      x-sort: 110
  /v1/wms/{warehouseId}/picklists:
    get:
      tags:
        - wms
      summary: Query Pick List
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all pick lists for a specific wms warehouse that are not completed."
      operationId: WMS_QueryPickListAsync
      parameters:
        - name: warehouseId
          in: path
          description: The id of the wms warehouse that the pick list belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            Returns all pick lists for a given wms warehouse that are not
            completed.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.WMS.PickList]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No wms warehouse with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - wms.querypicklist
            - all.read
      x-sort: 300
    post:
      tags:
        - wms
      summary: Create Pick List
      description: "DEPRECATED: Use Versioning with Header\r\nCreate a new pick list for a specific wms warehouse"
      operationId: WMS_CreatePickListAsync
      parameters:
        - name: warehouseId
          in: path
          description: The id of the wms warehouse where the pick list should be created.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The relevant information to create a picking list.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.WMS.CreatePickList
        required: true
        x-bodyName: pickList
      responses:
        "201":
          description: Returns the created pick list.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.WMS.PickList
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No wms warehouse or pick list template with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - wms.createpicklist
      x-sort: 320
  /v1/wms/{warehouseId}/picklists/{picklistId}:
    get:
      tags:
        - wms
      summary: Query Pick List Position
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all positions for a given pick list"
      operationId: WMS_QueryPickListPositionAsync
      parameters:
        - name: warehouseId
          in: path
          description: The id of the wms warehouse that the pick list belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: picklistId
          in: path
          description: The id of the pick list.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all pick lists positions for an given pick list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.WMS.PickListPosition
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No wms warehouse or pick list with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      deprecated: true
      security:
        - Wawi:
            - wms.querypicklistposition
            - all.read
      x-sort: 310
  /v1/wms/picklisttemplates:
    get:
      tags:
        - wms
      summary: Query Pick List Template
      description: "DEPRECATED: Use Versioning with Header\r\nQuery all pick list templates. A pick list template is used for creating a new pick list."
      operationId: WMS_QueryPickListTemplateAsync
      parameters:
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all pick lists templates.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.WMS.PickListTemplate]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      deprecated: true
      security:
        - Wawi:
            - wms.querypicklisttemplate
            - all.read
      x-sort: 350
  /warehouses:
    get:
      tags:
        - warehouse
      summary: Query Warehouses
      description: Query all warehouses
      operationId: WarehouseHeader_QueryWarehousesAsync
      parameters:
        - name: isActive
          in: query
          description: Search for active or inactive warehouses.
          schema:
            type: boolean
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all warehouses.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Warehouse.Warehouse]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - warehouse.querywarehouses
            - all.read
      x-sort: 100
  /warehouses/{warehouseId}/storagelocations:
    get:
      tags:
        - warehouse
      summary: Query Storage Locations
      description: Query all storage locations for a given warehouse
      operationId: WarehouseHeader_QueryStorageLocationsAsync
      parameters:
        - name: warehouseId
          in: path
          description: The id of the warehouse that the storage locations belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all storage locations of the warehouse.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Warehouse.StorageLocation]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No warehouse with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - warehouse.querystoragelocations
            - all.read
      x-sort: 110
  /warehouses/storagelocationtypes:
    get:
      tags:
        - warehouse
      summary: Query Storage Location Type
      description: Query all storage location types
      operationId: WarehouseHeader_QueryStorageLocationTypeAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all storage location types.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Warehouse.StorageLocationType
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - warehouse.querystoragelocationtype
            - all.read
      x-sort: 110
  /warehouses/types:
    get:
      tags:
        - warehouse
      summary: Query Warehouse Types
      description: Query all warehouse types
      operationId: WarehouseHeader_QueryWarehouseTypesAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all warehouse types.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Warehouse.WarehouseType
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - warehouse.querywarehousetypes
            - all.read
      x-sort: 110
  /wms/{warehouseId}/picklists:
    get:
      tags:
        - wms
      summary: Query Pick List
      description: >-
        Query all pick lists for a specific wms warehouse that are not
        completed.
      operationId: WMSHeader_QueryPickListAsync
      parameters:
        - name: warehouseId
          in: path
          description: The id of the wms warehouse that the pick list belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: >-
            Returns all pick lists for a given wms warehouse that are not
            completed.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.WMS.PickList]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No wms warehouse with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - wms.querypicklist
            - all.read
      x-sort: 300
    post:
      tags:
        - wms
      summary: Create Pick List
      description: Create a new pick list for a specific wms warehouse
      operationId: WMSHeader_CreatePickListAsync
      parameters:
        - name: warehouseId
          in: path
          description: The id of the wms warehouse where the pick list should be created.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The relevant information to create a picking list.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.WMS.CreatePickList
        required: true
        x-bodyName: pickList
      responses:
        "201":
          description: Returns the created pick list.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.WMS.PickList
        "400":
          description: The sent data is invalid.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No wms warehouse or pick list template with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - wms.createpicklist
      x-sort: 320
  /wms/{warehouseId}/picklists/{picklistId}:
    get:
      tags:
        - wms
      summary: Query Pick List Position
      description: Query all positions for a given pick list
      operationId: WMSHeader_QueryPickListPositionAsync
      parameters:
        - name: warehouseId
          in: path
          description: The id of the wms warehouse that the pick list belong to.
          required: true
          schema:
            type: integer
            format: int32
        - name: picklistId
          in: path
          description: The id of the pick list.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all pick lists positions for an given pick list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.WMS.PickListPosition
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No wms warehouse or pick list with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - wms.querypicklistposition
            - all.read
      x-sort: 310
  /wms/picklisttemplates:
    get:
      tags:
        - wms
      summary: Query Pick List Template
      description: >-
        Query all pick list templates. A pick list template is used for creating
        a new pick list.
      operationId: WMSHeader_QueryPickListTemplateAsync
      parameters:
        - name: pageNumber
          in: query
          description: Number of the page of items to fetch.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Size of the page that is specified by `pageNumber`.
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Returns all pick lists templates.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.WMS.PickListTemplate]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
      security:
        - Wawi:
            - wms.querypicklisttemplate
            - all.read
      x-sort: 350
  /worker:
    get:
      tags:
        - worker
      summary: Get Worker Syncs
      description: Returns the Available Syncs of the Worker
      operationId: WorkerHeader_GetWorkerSyncsAsync
      parameters:
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The TaxRate for the given Item.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Worker.WorkerSyncItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - worker.getworkersyncs
            - all.read
      x-sort: 0
  /worker/{syncId}:
    put:
      tags:
        - worker
      summary: Sync Control
      description: Control the Sync Processes
      operationId: WorkerHeader_SyncControlAsync
      parameters:
        - name: syncId
          in: path
          description: The id of the job to Restart
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The Information to Control the Sync
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Worker.PutWorkerSyncAction
        required: true
        x-bodyName: action
      responses:
        "204":
          description: The Action is Invoked
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - worker.synccontrol
      x-sort: 0
    post:
      tags:
        - worker
      summary: Configure Sync
      description: Restart the Worker
      operationId: WorkerHeader_ConfigureSyncAsync
      parameters:
        - name: syncId
          in: path
          description: The id of the job to Configure
          required: true
          schema:
            type: string
            format: uuid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      requestBody:
        description: The relevant Information of the Sync Item
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Worker.CreateWorkerSyncConfiguration
        required: true
        x-bodyName: syncItem
      responses:
        "200":
          description: The changed Worker Configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Worker.WorkerSyncItem
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - worker.configuresync
      x-sort: 0
  /worker/status:
    get:
      tags:
        - worker
      summary: Get Worker Status
      description: Returns the Status of the Worker
      operationId: WorkerHeader_GetWorkerStatusAsync
      parameters:
        - name: syncId
          in: query
          description: The Id of a special Sync to get the Status
          schema:
            type: string
            format: uuid
        - name: api-version
          in: header
          description: The requested API version
          schema:
            type: string
        - name: x-appid
          in: header
          description: >-
            This is the name of your application, in this case "MyApp/1.0.0". It
            is used to identify your application.
          required: true
          schema:
            type: string
        - name: x-appversion
          in: header
          description: >-
            This is where the version number of your application is entered, in
            this case "1.0.0".
          required: true
          schema:
            type: string
        - name: x-runas
          in: header
          description: >-
            The User-Id as int or uuid to run the Request, a JTL-Wawi user can
            be specified to perform an API call on their behalf (more details in
            the documentation, Optional). To use the Header, you must have the
            needed Scope 'Application.RunAs'
          schema:
            type: string
        - name: X-SessionId
          in: header
          description: The id of a Session, in wich we call would be executed
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: The Status Elements of the Worker
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Worker.WorkerSyncStatus
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: No licence available or the app has not been authorised by JTL.
          content:
            application/json: {}
        "404":
          description: No item with the given ID exists.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse
      security:
        - Wawi:
            - worker.getworkerstatus
            - all.read
      x-sort: 0
components:
  schemas:
    System.Threading.CancellationToken:
      type: object
      properties:
        IsCancellationRequested:
          type: boolean
          readOnly: true
        CanBeCanceled:
          type: boolean
          readOnly: true
        WaitHandle:
          $ref: "#/components/schemas/System.Threading.WaitHandle"
    System.Threading.WaitHandle:
      type: object
      properties:
        Handle:
          type: object
        SafeWaitHandle:
          $ref: "#/components/schemas/Microsoft.Win32.SafeHandles.SafeWaitHandle"
    Microsoft.Win32.SafeHandles.SafeWaitHandle:
      type: object
      properties:
        IsInvalid:
          type: boolean
          readOnly: true
        IsClosed:
          type: boolean
          readOnly: true
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.AccountingData.AccountingData]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.AccountingData.AccountingData
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.AccountingData.Country:
      required:
        - CountryISO
        - StateISO
      type: object
      properties:
        CountryISO:
          type: string
          description: ISO code of the country.
          example: DE
        StateISO:
          type: string
          description: ISO code of the state within the country.
          example: PA
      description: "Model Class: Country"
    JTL.Wawi.Rest.Contracts.Models.AccountingData.AccountingDataLineItem:
      required:
        - ItemId
        - Type
        - Name
        - TaxClassId
        - GeneralLedgerAccount
        - Quantity
        - VatRate
        - VatAmount
        - TotalDiscountGrossAmount
        - TotalDiscountNetAmount
        - TotalGrossAmount
        - TotalNetAmount
        - SortOrder
      type: object
      properties:
        ItemId:
          type: integer
          description: The identifier of the item
          format: int32
          example: 1
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
          type: integer
          description: >-
            The type of line item0=CustomLineItem | 1=Item | 2=ShippingItem |
            3=Coupon | 4=Voucher | 5=PaymentMethod | 6=ShippingSurcharge |
            7=NewCustomerCoupon | 8=CashOnDeliveryFee | 9=ItemShippingSurcharge
            | 10=GiftWrapping | 11=FreeGift | 12=TrustedShopsFee |
            13=InterestSurcharge | 14=HandlingFee | 15=CardboardBoxes |
            16=Return | 17=MultiPurposeVoucher | 18=MultiPurposeDigitalVoucher |
            19=SinglePurposeVoucher | 20=SinglePurposeDigitalVoucher |
            21=SinglePurposeVoucherRedemption
          format: int32
          example: 5
          x-enumNames:
            - CustomLineItem
            - Item
            - ShippingItem
            - Coupon
            - Voucher
            - PaymentMethod
            - ShippingSurcharge
            - NewCustomerCoupon
            - CashOnDeliveryFee
            - ItemShippingSurcharge
            - GiftWrapping
            - FreeGift
            - TrustedShopsFee
            - InterestSurcharge
            - HandlingFee
            - CardboardBoxes
            - Return
            - MultiPurposeVoucher
            - MultiPurposeDigitalVoucher
            - SinglePurposeVoucher
            - SinglePurposeDigitalVoucher
            - SinglePurposeVoucherRedemption
        Name:
          type: string
          description: The description of the line item
          example: USB Headset
        TaxClassId:
          type: integer
          description: The identifier of the tax class
          format: int32
          example: 1
        GeneralLedgerAccount:
          type: string
          description: >-
            An account or record used to sort, store and summarize a company's
            transactions
          example: "4300"
        Quantity:
          type: number
          description: The number of items
          format: decimal
          example: 1
        VatRate:
          type: number
          description: Applicable VAT rate in percentage
          format: decimal
          example: 19
        VatAmount:
          type: number
          description: Total VAT charged for this item
          format: decimal
          example: 24.99
        TotalDiscountGrossAmount:
          type: number
          description: Total discount amount including VAT
          format: decimal
          example: 3
        TotalDiscountNetAmount:
          type: number
          description: Total discount amount excluding VAT
          format: decimal
          example: 2.43
        TotalGrossAmount:
          type: number
          description: Total item price including VAT
          format: decimal
          example: 19.99
        TotalNetAmount:
          type: number
          description: Total item price excluding VAT
          format: decimal
          example: 16.19
        SortOrder:
          type: integer
          description: The order in which the line item appears in the document
          format: int32
          example: 1
      description: "Model Class: AccountingDataLineItem"
    JTL.Wawi.Rest.Contracts.Models.Common.Address:
      required:
        - Id
        - Company
        - Company2
        - FormOfAddress
        - Title
        - FirstName
        - LastName
        - Street
        - Address2
        - PostalCode
        - City
        - State
        - CountryIso
        - VatID
        - PhoneNumber
        - MobilePhoneNumber
        - EmailAddress
        - Fax
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify an address
          format: int32
          example: 100
        Company:
          type: string
          description: Description of the Company.
          example: Sportbedarf Sommer
        Company2:
          type: string
          description: Additional company information
          example: Innovation Division
        FormOfAddress:
          type: string
          description: Customer form of address
          example: Mr.
        Title:
          type: string
          description: Official title
          example: Dr.
        FirstName:
          type: string
          description: Customer first name
          example: John
        LastName:
          type: string
          description: Customer last name
          example: Doe
        Street:
          type: string
          description: Street name in the customer's address
          example: Main St. 123
        Address2:
          type: string
          description: Additional address information
          example: Floor 5, Apt 302
        PostalCode:
          type: string
          description: Postal code of the customer's address
          example: "12345"
        City:
          type: string
          description: Name of city in the customer's address
          example: Example City
        State:
          type: string
          description: Name of state in the customer's address
          example: Example State
        CountryIso:
          type: string
          description: Country ISO code
          example: DE
        VatID:
          type: string
          description: Supplier VAT ID number
          example: DE123456789
        PhoneNumber:
          type: string
          description: Landline phone number
          example: +49 1234 445556661
        MobilePhoneNumber:
          type: string
          description: Mobile phone number
          example: +49 160 123 4567
        EmailAddress:
          type: string
          description: Email address
          example: example@email.com
        Fax:
          type: string
          description: Fax number
          example: +49 1234 4455566615
      description: "Model Class: Address"
    JTL.Wawi.Rest.Contracts.Models.AccountingData.AccountingData:
      required:
        - DocumentNumber
        - DocumentId
        - DocumentDate
        - SalesOrderNumber
        - SalesOrderId
        - ExternalSalesOrderNumber
        - DepartureCountry
        - ShipmentCountry
        - BillingAddress
        - ShipmentAddress
        - CurrencyIso
        - Type
        - CompanyId
        - CompanyVatId
        - CustomerVatId
        - SalesChannelId
        - IsCancelled
        - AccountDataLineItems
      type: object
      properties:
        DocumentNumber:
          type: string
          description: The number of the document.
          example: A1004465
        DocumentId:
          type: integer
          description: The identifier of the document.
          format: int32
          example: 1
        DocumentDate:
          type: string
          description: The date and time when the document was created.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        SalesOrderNumber:
          type: string
          description: The internal number of the sales order.
          example: D456-64894-132
        SalesOrderId:
          type: integer
          description: The identifier of the sales order.
          format: int32
          example: 1
        ExternalSalesOrderNumber:
          type: string
          description: The external number of the sales order.
          example: B342-46456-4234
        DepartureCountry:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.AccountingData.Country
        ShipmentCountry:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.AccountingData.Country
        BillingAddress:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        ShipmentAddress:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        CurrencyIso:
          type: string
          description: ISO code of the currency of the departure country.
          example: EUR
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
          type: integer
          description: >-
            0 = Invoice, 1 = Credit, 2 = Invoice correction, 3 = Invoice
            cancellation, 4 = credit cancellation, 5 = invoice correction
            cancellation0=Invoice | 1=Credit | 2=InvoiceCorrection |
            3=InvoiceCancellation | 4=CreditCancellation |
            5=InvoiceCorrectionCancellation | 6=Liquidation |
            7=LiquidationCancellation
          format: int32
          example: 0
          x-enumNames:
            - Invoice
            - Credit
            - InvoiceCorrection
            - InvoiceCancellation
            - CreditCancellation
            - InvoiceCorrectionCancellation
            - Liquidation
            - LiquidationCancellation
        CompanyId:
          type: integer
          description: The identifier of the company.
          format: int32
          example: 1
        CompanyVatId:
          type: string
          description: The VAT Id of the Company
          example: DE123456789
        CustomerVatId:
          type: string
          description: The VAT ID of the customer, if applicable.
          example: DE123456789
        SalesChannelId:
          type: string
          description: Identifier for the sales channel through which the order was placed.
          example: 1-1-1
        IsCancelled:
          type: boolean
          description: Indicates if the document has been cancelled.
          example: false
        AccountDataLineItems:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.AccountingData.AccountingDataLineItem
          description: Detailed list of items included in the document.
      description: "Model Class: AccountingData"
    JTL.Wawi.Rest.Abstraction.Exceptions.ErrorResponse:
      type: object
      properties:
        ErrorCode:
          type: string
        ValidationErrors:
          type: object
          additionalProperties:
            type: string
        ErrorMessage:
          type: string
        Stacktrace:
          type: string
    JTL.Wawi.Rest.Contracts.Models.Authentication.RegistrationInformation:
      required:
        - RequestStatusInfo
      type: object
      properties:
        RequestStatusInfo:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.RegistrationRequestStatusInfo
        Token:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Authentication.AppToken
        GrantedScopes:
          type: array
          items:
            type: string
          description: API scopes (both mandatory and optional) granted to the application
          example: ""
      description: "Model Class: RegistrationInformation"
    JTL.Wawi.Rest.Contracts.Models.Authentication.RegistrationRequestStatusInfo:
      required:
        - AppId
        - RegistrationRequestId
        - Status
      type: object
      properties:
        AppId:
          type: string
          description: Unique identifier of the application
          example: myApp/V3
        RegistrationRequestId:
          type: string
          description: Unique identifier of the registration request
          example: 295C196B-CBB0-4E76-9050-ECEC3356DDA6
        Status:
          enum:
            - 0
            - 1
            - 2
          type: integer
          description: >-
            Status of the registration process0=Pending | 1=Rejected |
            2=Accepted
          format: int32
          example: Pending
          x-enumNames:
            - Pending
            - Rejected
            - Accepted
      description: "Model Class: RegistrationRequestStatusInfo"
    JTL.Wawi.Rest.Contracts.Models.Authentication.AppToken:
      required:
        - ApiKey
      type: object
      properties:
        ApiKey:
          type: string
          description: Generated unique API key of the token
          example: FB622234-98A7-46FA-A01B-06C9D0971AAF
      description: "Model Class: AppToken"
    JTL.Wawi.Rest.Contracts.Models.Common.CreateTranslation:
      required:
        - LanguageIso
        - Name
      type: object
      properties:
        LanguageIso:
          type: string
          description: The language ISO code
          example: DE
        Name:
          type: string
          description: The word in the corresponding language
          example: German
      description: "Model Class: CreateTranslation"
    JTL.Wawi.Rest.Contracts.Models.Authentication.CreateAppRegistrationRequest:
      required:
        - AppId
        - DisplayName
        - Description
        - Version
        - ProviderName
        - ProviderWebsite
        - MandatoryApiScopes
        - AppIcon
      type: object
      properties:
        AppId:
          type: string
          description: Unique identifier of the application
          example: myApp/v1
        DisplayName:
          type: string
          description: Default display name of the application
          example: My App
        Description:
          type: string
          description: Default description of the application
          example: Demo app for testing purposes
        LocalizedDisplayNames:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateTranslation
          description: Localized display names of the application
        LocalizedDescriptions:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateTranslation
          description: Localized descriptions of the application
        Version:
          type: string
          description: Version of the application to be registered
          example: 1.0.0
        ProviderName:
          type: string
          description: Name of the application's provider
          example: JTL-Software-GmbH
        ProviderWebsite:
          type: string
          description: Website of the application's provider
          example: https://www.jtl-software.de
        MandatoryApiScopes:
          type: array
          items:
            type: string
          description: Mandatory required API scopes for the application to work
          example: ""
        OptionalApiScopes:
          type: array
          items:
            type: string
          description: Optional (recommended) API scopes for the application
          example: ""
        AppIcon:
          type: string
          description: Base64 encoded data of an image.
          format: byte
        RegistrationType:
          enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
          description: >-
            multiple instances of the application possible0=OneInstance |
            1=MultiInstance | 2=PerUserInstance | 3=PerUserLoginInstance
          format: int32
          example: 0
          x-enumNames:
            - OneInstance
            - MultiInstance
            - PerUserInstance
            - PerUserLoginInstance
        Signature:
          type: string
          description: >-
            The Signature of the App, it combines AppId.SignatureData like
            myApp/v1.2025-08-03T25:48:00 in UTC Time
          format: byte
        SignatureData:
          type: string
          description: >-
            The Data as DateTimeOffset must be in a range from 10 Minutes
            equals, and is base for the Signature and must be in UTC Time
          format: date-time
          example: "2025-03-20T08:57:00.0000000+01:00"
      description: "Model Class: CreateAppRegistrationRequest"
    JTL.Wawi.Rest.Contracts.Models.Authentication.CreateLogin:
      required:
        - UserName
        - Password
      type: object
      properties:
        UserName:
          type: string
          description: Username of the WAWI user
          example: admin
        Password:
          type: string
          description: Password of the WAWI user
          example: pass
      description: "Model Class: CreateLogin"
    JTL.Wawi.Rest.Contracts.Models.Authentication.Login:
      required:
        - SessionId
      type: object
      properties:
        SessionId:
          type: string
          description: Unique identifier of the current session
          example: B459108F-94D5-4B0D-B968-16807799B03C
      description: "Model Class: Login"
    JTL.Wawi.Rest.Contracts.Models.Common.UpdateTranslation:
      required:
        - LanguageIso
        - Name
      type: object
      properties:
        LanguageIso:
          type: string
          description: The language ISO code
          example: DE
        Name:
          type: string
          description: The word in the corresponding language
          example: German
      description: "Model Class: UpdateTranslation"
    JTL.Wawi.Rest.Contracts.Models.Authentication.UpdateAppRegistrationRequest:
      type: object
      properties:
        AppId:
          type: string
          description: Unique identifier of the application
          example: myApp/v1
        DisplayName:
          type: string
          description: Default display name of the application
          example: My App
        Description:
          type: string
          description: Default description of the application
          example: Demo app for testing purposes
        LocalizedDisplayNames:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateTranslation
          description: Localized display names of the application
        LocalizedDescriptions:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateTranslation
          description: Localized descriptions of the application
        Version:
          type: string
          description: Version of the application to be registered
          example: 1.0.0
        ProviderName:
          type: string
          description: Name of the application's provider
          example: JTL-Software-GmbH
        ProviderWebsite:
          type: string
          description: Website of the application's provider
          example: https://www.jtl-software.de
        MandatoryApiScopes:
          type: array
          items:
            type: string
          description: Mandatory required API scopes for the application to work
          example: ""
        OptionalApiScopes:
          type: array
          items:
            type: string
          description: Optional (recommended) API scopes for the application
          example: ""
        AppIcon:
          type: string
          description: Base64 encoded data of an image.
          format: byte
        RegistrationType:
          enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
          description: >-
            multiple instances of the application possible0=OneInstance |
            1=MultiInstance | 2=PerUserInstance | 3=PerUserLoginInstance
          format: int32
          example: 0
          x-enumNames:
            - OneInstance
            - MultiInstance
            - PerUserInstance
            - PerUserLoginInstance
        Signature:
          type: string
          description: >-
            The Signature of the App, it combines AppId.SignatureData like
            myApp/v1.2025-08-03T25:48:00 in UTC Time
          format: byte
        SignatureData:
          type: string
          description: >-
            The Data as DateTimeOffset must be in a range from 10 Minutes
            equals, and is base for the Signature and must be in UTC Time
          format: date-time
          example: "2025-03-20T08:57:00.0000000+01:00"
      description: "Model Class: UpdateAppRegistrationRequest"
    JTL.Wawi.Rest.Contracts.Models.Availability.Availability:
      required:
        - Id
        - Name
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify the availability state of an item.
          format: int32
          example: 1
        Name:
          type: string
          description: The name of the availability state.
          example: In Stock
      description: "Model Class: Availability"
    JTL.Wawi.Rest.Contracts.Models.CancellationReason.CancellationReason:
      required:
        - Id
        - Name
        - IsCommentRequired
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a cancellation reason
          format: int32
          example: 5
        Name:
          type: string
          description: Name of the cancellation reason
          example: Change of mind
        IsCommentRequired:
          type: boolean
          description: >-
            Indicates if a comment is required when this cancellation reason is
            used
          example: false
      description: "Model Class: CancellationReason"
    JTL.Wawi.Rest.Contracts.Models.Category.Category:
      required:
        - Id
        - Name
        - Description
        - ParentCategoryId
        - Level
        - SortNumber
        - ActiveSalesChannels
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a category.
          format: int32
          example: 13
        Name:
          type: string
          description: Name of the category in the default language of JTL-Wawi.
          example: Binoculars
        Description:
          type: string
          description: Category description in the default language of JTL-Wawi.
          example: Best Binoculars
        ParentCategoryId:
          type: integer
          description: ID of the parent category, if the category is a child category.
          format: int32
          example: 5
        Level:
          type: integer
          description: >-
            Returns the category level number within its category tree. A root
            category without a parent has a level 1.
          format: int32
          example: 2
        SortNumber:
          type: integer
          description: >-
            The category sort number used in some sales channels for arranging
            the categories.
          format: int32
          example: 1
        ActiveSalesChannels:
          type: string
          description: >-
            The list of active sales channels for this category. The items must
            be activated individually. Only online shops and JTL-POS are
            allowed. Sales channels removed from this list will be deactivated
            for this category.
          example: 1-1-1
      description: "Model Class: Category"
    JTL.Wawi.Rest.Contracts.Models.Category.UpdateCategory:
      type: object
      properties:
        Name:
          type: string
          description: Name of the category in the default language of JTL-Wawi.
          example: Binoculars
        Description:
          type: string
          description: Category description in the default language of JTL-Wawi.
          example: Best Binoculars
        ParentCategoryId:
          type: integer
          description: ID of the parent category, if the category is a child category.
          format: int32
          example: 5
        SortNumber:
          type: integer
          description: >-
            The category sort number used in some sales channels for arranging
            the categories.
          format: int32
          example: 1
        ActiveSalesChannels:
          type: string
          description: >-
            The list of active sales channels for this category. The items must
            be activated individually. Only online shops and JTL-POS are
            allowed. Sales channels removed from this list will be deactivated
            for this category.
          example: 1-1-1
      description: "Model Class: UpdateCategory"
    JTL.Wawi.Rest.Contracts.Models.Category.CategoryDescription:
      required:
        - CategoryId
        - Name
        - Description
        - SeoPath
        - SeoMetaDescription
        - SeoTitleTag
        - SeoMetaKeywords
        - LanguageIso
        - SalesChannelId
      type: object
      properties:
        CategoryId:
          type: integer
          description: Unique ID to identify a category.
          format: int32
          example: 13
        Name:
          type: string
          description: >-
            The category name in the given language and sales channel. The name
            in JTL-Wawi and the default language is the default name of the
            category.
          example: Binoculars
        Description:
          type: string
          description: The category description in the given language and sales channel.
          example: Best Binoculars
        SeoPath:
          type: string
          description: The SEO path in the given language and sales channel.
          example: binoculars
        SeoMetaDescription:
          type: string
          description: The SEO metadescription in the given language and sales channel.
          example: Best Binoculars
        SeoTitleTag:
          type: string
          description: The title tag (SEO) in the given language and sales channel.
          example: Best Binoculars
        SeoMetaKeywords:
          type: string
          description: The meta keywords in the given language and sales channel.
          example: Best, Binoculars
        LanguageIso:
          type: string
          description: The ISO code of the language of the description.
          example: DE
        SalesChannelId:
          type: string
          description: >-
            The sales channel ID of the description. Only specific sales
            channels are allowed for this operation and are specified in the
            sales channel endpoint(GET).
          example: 1-1-0
      description: "Model Class: CategoryDescription"
    JTL.Wawi.Rest.Contracts.Models.Category.CreateCategoryDescription:
      required:
        - Name
        - LanguageIso
        - SalesChannelId
      type: object
      properties:
        Name:
          type: string
          description: >-
            The category name in the given language and sales channel. The name
            in JTL-Wawi and the default language is the default name of the
            category.
          example: Binoculars
        Description:
          type: string
          description: The category description in the given language and sales channel.
          example: Best Binoculars
        SeoPath:
          type: string
          description: The SEO path in the given language and sales channel.
          example: binoculars
        SeoMetaDescription:
          type: string
          description: The SEO metadescription in the given language and sales channel.
          example: Best Binoculars
        SeoTitleTag:
          type: string
          description: The title tag (SEO) in the given language and sales channel.
          example: Best Binoculars
        SeoMetaKeywords:
          type: string
          description: The meta keywords in the given language and sales channel.
          example: Best, Binoculars
        LanguageIso:
          type: string
          description: The ISO code of the language of the description.
          example: DE
        SalesChannelId:
          type: string
          description: >-
            The sales channel ID of the description. Only specific sales
            channels are allowed for this operation and are specified in the
            sales channel endpoint(GET).
          example: 1-1-0
      description: "Model Class: CreateCategoryDescription"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Category.Category]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Category.Category
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Category.CreateCategory:
      required:
        - Name
      type: object
      properties:
        Name:
          type: string
          description: Name of the category in the default language of JTL-Wawi.
          example: Binoculars
        Description:
          type: string
          description: Category description in the default language of JTL-Wawi.
          example: Best Binoculars
        ParentCategoryId:
          type: integer
          description: ID of the parent category, if the category is a child category.
          format: int32
          example: 5
        SortNumber:
          type: integer
          description: >-
            The category sort number used in some sales channels for arranging
            the categories.
          format: int32
          example: 1
        ActiveSalesChannels:
          type: string
          description: >-
            The list of active sales channels for this category. The items must
            be activated individually. Only online shops and JTL-POS are
            allowed. Sales channels removed from this list will be deactivated
            for this category.
          example: 1-1-1
      description: "Model Class: CreateCategory"
    JTL.Wawi.Rest.Contracts.Models.Category.UpdateCategoryDescription:
      type: object
      properties:
        Name:
          type: string
          description: >-
            The category name in the given language and sales channel. The name
            in JTL-Wawi and the default language is the default name of the
            category.
          example: Binoculars
        Description:
          type: string
          description: The category description in the given language and sales channel.
          example: Best Binoculars
        SeoPath:
          type: string
          description: The SEO path in the given language and sales channel.
          example: binoculars
        SeoMetaDescription:
          type: string
          description: The SEO metadescription in the given language and sales channel.
          example: Best Binoculars
        SeoTitleTag:
          type: string
          description: The title tag (SEO) in the given language and sales channel.
          example: Best Binoculars
        SeoMetaKeywords:
          type: string
          description: The meta keywords in the given language and sales channel.
          example: Best, Binoculars
      description: "Model Class: UpdateCategoryDescription"
    JTL.Wawi.Rest.Contracts.Models.ColorCode.ColorCode:
      required:
        - Id
        - Name
        - Code
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a colour code.
          format: int32
          example: 1
        Name:
          type: string
          description: Name of the colour code.
          example: green
        Code:
          type: string
          description: Hexadecimal color code (e.g., "#00FF00" for green).
          example: "#00FF00"
      description: "Model Class: ColorCode"
    JTL.Wawi.Rest.Contracts.Models.Company.Company:
      required:
        - Id
        - Identifier
        - Name
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a company.
          format: int32
          example: 1
        Identifier:
          type: string
          description: Global Unique ID to identify a company.
          format: uuid
          example: 1ECC3D7F-6636-4D91-B236-000001000000
        Name:
          type: string
          description: Name of the company.
          example: My Company Name
      description: "Model Class: Company"
    JTL.Wawi.Rest.Contracts.Models.Condition.ConditionNames:
      required:
        - Name
        - LanguageIso
      type: object
      properties:
        Name:
          type: string
          description: Name of a condition.
          example: New
        LanguageIso:
          type: string
          description: ISO code of the language of a condition.
          example: DE
      description: "Model Class: ConditionNames"
    JTL.Wawi.Rest.Contracts.Models.Condition.Condition:
      required:
        - Id
        - Names
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a condition.
          format: int32
          example: 1
        Names:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Condition.ConditionNames
          description: The list of the condition names.
      description: "Model Class: Condition"
    JTL.Wawi.Rest.Contracts.Models.Common.CustomField:
      required:
        - CustomFieldId
        - GroupName
        - Name
        - Type
        - PossibleValues
      type: object
      properties:
        Attribut:
          type: object
        CustomFieldId:
          type: integer
          description: Unique ID to identify a custom field.
          format: int32
          example: 9
        GroupName:
          type: string
          description: The group name for this custom field.
          example: Example Group
        Name:
          type: string
          description: The custom field name.
          example: Technical Data
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
          type: integer
          description: >-
            The custom field type.0=None | 1=Integer | 2=Decimal | 3=Text |
            4=Checkbox | 5=List | 6=Url | 7=Email | 8=PhoneNumber | 9=CountryIso
            | 10=Price | 11=Date | 12=ShortText
          format: int32
          example: 3
          x-enumNames:
            - None
            - Integer
            - Decimal
            - Text
            - Checkbox
            - List
            - Url
            - Email
            - PhoneNumber
            - CountryIso
            - Price
            - Date
            - ShortText
        PossibleValues:
          type: array
          items:
            type: string
          description: The possible values, when the custom field is a list.
          example: ""
      description: "Model Class: CustomField"
    JTL.Wawi.Rest.Contracts.Models.Customer.OtherAddresses:
      required:
        - OtherBillingAddresses
        - OtherShippingAddresses
        - OtherCustomerAddresses
      type: object
      properties:
        OtherBillingAddresses:
          type: array
          items:
            $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
          description: All other non-default billing addresses of the customer.
        OtherShippingAddresses:
          type: array
          items:
            $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
          description: All other non-default shipping addresses of the customer.
        OtherCustomerAddresses:
          type: array
          items:
            $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
          description: All other non-billing and non-shipping addresses of the customer.
      description: "Model Class: OtherAddresses"
    JTL.Wawi.Rest.Contracts.Models.Customer.PaymentSettings:
      required:
        - PaymentMethodId
        - Discount
        - PaymentTarget
        - CreditLimit
        - StopPaymentRequest
      type: object
      properties:
        PaymentMethodId:
          type: integer
          description: The unique ID to identify a payment method.
          format: int32
          example: 123
        Discount:
          type: number
          description: The indicated discount, if any.
          format: decimal
          example: 5
        PaymentTarget:
          type: integer
          description: The payment target in days.
          format: int32
          example: 3
        CreditLimit:
          type: integer
          description: The customer's credit limit.
          format: int32
          example: 100
        StopPaymentRequest:
          type: boolean
          description: Option to stop payment requests.
          example: false
      description: "Model Class: PaymentSettings"
    JTL.Wawi.Rest.Contracts.Models.Customer.Customer:
      required:
        - Id
        - Number
        - CustomerGroupId
        - BillingAddress
        - Shipmentaddress
        - CustomAddress
        - OtherAddresses
        - PaymentSettings
        - CustomerSince
        - LastChange
        - LanguageIso
        - InternalCompanyId
        - CustomerCategoryId
        - TaxIdentificationNumber
        - AccountsReceivableNumber
        - CommercialRegisterNumber
        - Website
        - InitialContact
        - EbayUsername
        - Birthday
        - IsLocked
        - IsCashRegisterBased
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a customer.
          format: int32
          example: 123
        Number:
          type: string
          description: The customer's number.
          example: C1005486
        CustomerGroupId:
          type: integer
          description: The customer group ID.
          format: int32
          example: 0
        BillingAddress:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        Shipmentaddress:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        CustomAddress:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        OtherAddresses:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.OtherAddresses
        PaymentSettings:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.PaymentSettings
        CustomerSince:
          type: string
          description: Date since they have been a customer.
          format: date-time
          example: "2023-02-01T13:30:00.0000000+00:00"
        LastChange:
          type: string
          description: Date of the last customer's data change.
          format: date-time
          example: "2023-02-01T13:30:00.0000000+00:00"
        LanguageIso:
          type: string
          description: The customer's language.
          example: DE
        InternalCompanyId:
          type: integer
          description: >-
            The internal ID of the company associated with the customer. This is
            configured in the company and email settings in JTL-Wawi
          format: int32
          example: 1
        CustomerCategoryId:
          type: integer
          description: The customer category ID.
          format: int32
          example: 12
        TaxIdentificationNumber:
          type: string
          description: The customer's tax identification number.
          example: 123/123/12345
        AccountsReceivableNumber:
          type: integer
          description: The customer's accounts receivable number.
          format: int32
          example: 10000
        CommercialRegisterNumber:
          type: string
          description: The customer's commercial register number.
          example: HRB 1234
        Website:
          type: string
          description: The customer's website.
          example: https://mywebsite.com
        InitialContact:
          type: string
          description: >-
            The source of initial contact. This could be for example a specific
            sales channel, a convention or a marketing campaign.
          example: Amazon
        EbayUsername:
          type: string
          description: The customer's eBay username.
          example: eBaybuyer123
        Birthday:
          type: string
          description: The customer's date of birth.
          format: date-time
          example: 1985-01-01T
        IsLocked:
          type: boolean
          description: The customer's locked status for online shop sales channels.
          example: false
        IsCashRegisterBased:
          type: boolean
          description: >-
            States if a customer is from a cash-register or point of sale and if
            their data should be synchronized with JTL-POS, for example.
          example: false
      description: "Model Class: Customer"
    JTL.Wawi.Rest.Contracts.Models.Customer.UpdatePaymentSettings:
      type: object
      properties:
        PaymentMethodId:
          type: integer
          description: The unique ID to identify a payment method.
          format: int32
          example: 123
        Discount:
          type: number
          description: The indicated discount, if any.
          format: decimal
          example: 5
        PaymentTarget:
          type: integer
          description: The payment target in days.
          format: int32
          example: 3
        CreditLimit:
          type: integer
          description: The customer's credit limit.
          format: int32
          example: 100
        StopPaymentRequest:
          type: boolean
          description: Option to stop payment requests.
          example: false
      description: "Model Class: UpdatePaymentSettings"
    JTL.Wawi.Rest.Contracts.Models.Customer.UpdateOtherAddresses:
      type: object
      properties:
        OtherBillingAddresses:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateAddress
          description: All other non-default billing addresses of the customer.
        OtherShippingAddresses:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateAddress
          description: All other non-default shipping addresses of the customer.
        OtherCustomerAddresses:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateAddress
          description: All other non-billing and non-shipping addresses of the customer.
      description: "Model Class: UpdateOtherAddresses"
    JTL.Wawi.Rest.Contracts.Models.Common.UpdateAddress:
      type: object
      properties:
        Company:
          type: string
          description: Description of the Company.
          example: Sportbedarf Sommer
        Company2:
          type: string
          description: Additional company information
          example: Innovation Division
        FormOfAddress:
          type: string
          description: Customer form of address
          example: Mr.
        Title:
          type: string
          description: Official title
          example: Dr.
        FirstName:
          type: string
          description: Customer first name
          example: John
        LastName:
          type: string
          description: Customer last name
          example: Doe
        Street:
          type: string
          description: Street name in the customer's address
          example: Main St. 123
        Address2:
          type: string
          description: Additional address information
          example: Floor 5, Apt 302
        PostalCode:
          type: string
          description: Postal code of the customer's address
          example: "12345"
        City:
          type: string
          description: Name of city in the customer's address
          example: Example City
        State:
          type: string
          description: Name of state in the customer's address
          example: Example State
        CountryIso:
          type: string
          description: Country ISO code
          example: DE
        VatID:
          type: string
          description: Supplier VAT ID number
          example: DE123456789
        PhoneNumber:
          type: string
          description: Landline phone number
          example: +49 1234 445556661
        MobilePhoneNumber:
          type: string
          description: Mobile phone number
          example: +49 160 123 4567
        EmailAddress:
          type: string
          description: Email address
          example: example@email.com
        Fax:
          type: string
          description: Fax number
          example: +49 1234 4455566615
      description: "Model Class: UpdateAddress"
    JTL.Wawi.Rest.Contracts.Models.Customer.UpdateCustomer:
      type: object
      properties:
        Number:
          type: string
          description: The customer's number.
          example: C1005486
        CustomerGroupId:
          type: integer
          description: The customer group ID.
          format: int32
          example: 0
        BillingAddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateAddress
        Shipmentaddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateAddress
        CustomAddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateAddress
        OtherAddresses:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.UpdateOtherAddresses
        PaymentSettings:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.UpdatePaymentSettings
        CustomerSince:
          type: string
          description: Date since they have been a customer.
          format: date-time
          example: "2023-02-01T13:30:00.0000000+00:00"
        LastChange:
          type: string
          description: Date of the last customer's data change.
          format: date-time
          example: "2023-02-01T13:30:00.0000000+00:00"
        LanguageIso:
          type: string
          description: The customer's language.
          example: DE
        InternalCompanyId:
          type: integer
          description: >-
            The internal ID of the company associated with the customer. This is
            configured in the company and email settings in JTL-Wawi
          format: int32
          example: 1
        CustomerCategoryId:
          type: integer
          description: The customer category ID.
          format: int32
          example: 12
        TaxIdentificationNumber:
          type: string
          description: The customer's tax identification number.
          example: 123/123/12345
        AccountsReceivableNumber:
          type: integer
          description: The customer's accounts receivable number.
          format: int32
          example: 10000
        CommercialRegisterNumber:
          type: string
          description: The customer's commercial register number.
          example: HRB 1234
        Website:
          type: string
          description: The customer's website.
          example: https://mywebsite.com
        InitialContact:
          type: string
          description: >-
            The source of initial contact. This could be for example a specific
            sales channel, a convention or a marketing campaign.
          example: Amazon
        EbayUsername:
          type: string
          description: The customer's eBay username.
          example: eBaybuyer123
        Birthday:
          type: string
          description: The customer's date of birth.
          format: date-time
          example: 1985-01-01T
        IsLocked:
          type: boolean
          description: The customer's locked status for online shop sales channels.
          example: false
        IsCashRegisterBased:
          type: boolean
          description: >-
            States if a customer is from a cash-register or point of sale and if
            their data should be synchronized with JTL-POS, for example.
          example: false
      description: "Model Class: UpdateCustomer"
    JTL.Wawi.Rest.Contracts.Models.Common.WorkflowEvent:
      required:
        - Id
        - Name
      type: object
      properties:
        Id:
          type: integer
          description: ID of the workflow event
          format: int32
          example: 1
        Name:
          type: string
          description: Name of the workflow event
          example: Wawi workflow name
      description: "Model Class: WorkflowEvent"
    JTL.Wawi.Rest.Contracts.Models.Common.Note:
      required:
        - NoteId
        - NoteBody
      type: object
      properties:
        NoteId:
          type: integer
          description: >-
            Unique ID to identify a customer note. A customer note always has a
            customer reference and may have a sales order reference as well.
          format: int32
          example: 12
        NoteBody:
          type: string
          description: The text in the customer note.
          example: This is a customer note.
      description: "Model Class: Note"
    JTL.Wawi.Rest.Contracts.Models.Common.CreateNote:
      required:
        - NoteBody
      type: object
      properties:
        NoteBody:
          type: string
          description: The text in the customer note.
          example: This is a customer note.
      description: "Model Class: CreateNote"
    JTL.Wawi.Rest.Contracts.Models.Customer.CustomerContact:
      required:
        - Id
        - Department
        - Honorific
        - FirstName
        - LastName
        - PhoneNumber
        - MobilePhoneNumber
        - EmailAddress
        - Fax
      type: object
      properties:
        Id:
          type: integer
          description: The unique ID to identify a customer's main contact person.
          format: int32
          example: 321
        Department:
          type: string
          description: The contact person's department.
          example: Management
        Honorific:
          type: string
          description: The contact person's form of address.
          example: Herr
        FirstName:
          type: string
          description: The contact person's first name.
          example: John
        LastName:
          type: string
          description: The contact person's last name.
          example: Smith
        PhoneNumber:
          type: string
          description: The contact person's landline phone number.
          example: 01234 / 123456-0
        MobilePhoneNumber:
          type: string
          description: The contact person's mobile number.
          example: 0162 / 1234567
        EmailAddress:
          type: string
          description: The contact person's email address.
          example: john.smith@somemail.com
        Fax:
          type: string
          description: The contact person's fax number.
          example: 01234 / 123456-13
      description: "Model Class: CustomerContact"
    JTL.Wawi.Rest.Contracts.Models.Customer.CreateCustomerContact:
      type: object
      properties:
        Department:
          type: string
          description: The contact person's department.
          example: Management
        Honorific:
          type: string
          description: The contact person's form of address.
          example: Herr
        FirstName:
          type: string
          description: The contact person's first name.
          example: John
        LastName:
          type: string
          description: The contact person's last name.
          example: Smith
        PhoneNumber:
          type: string
          description: The contact person's landline phone number.
          example: 01234 / 123456-0
        MobilePhoneNumber:
          type: string
          description: The contact person's mobile number.
          example: 0162 / 1234567
        EmailAddress:
          type: string
          description: The contact person's email address.
          example: john.smith@somemail.com
        Fax:
          type: string
          description: The contact person's fax number.
          example: 01234 / 123456-13
      description: "Model Class: CreateCustomerContact"
    JTL.Wawi.Rest.Contracts.Models.Customer.LastChange:
      required:
        - Id
        - LastChangeDate
      type: object
      properties:
        Id:
          type: integer
          description: Unique internal ID of the customer.
          format: int32
          example: 13
        LastChangeDate:
          type: string
          description: Length
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
      description: "Model Class: LastChange"
    JTL.Wawi.Rest.Contracts.Models.Customer.CustomerBankAccount:
      required:
        - Id
        - AccountHolder
        - BankName
        - AccountNumber
        - BankCode
        - IBAN
        - BIC
      type: object
      properties:
        Id:
          type: integer
          description: The unique ID to identify a customer's bank account.
          format: int32
          example: 321
        AccountHolder:
          type: string
          description: Name of the account holder of the customer's bank account.
          example: John Smith
        BankName:
          type: string
          description: Name of the bank.
          example: Sparkasse
        AccountNumber:
          type: string
          description: Account number of the customer's bank account.
          example: "1234567890"
        BankCode:
          type: string
          description: Bank code of the customer bank's account.
          example: "44550045"
        IBAN:
          type: string
          description: International bank account number of the customer's bank account.
          example: DE123456789123456
        BIC:
          type: string
          description: Bank identification code of the customer's bank account.
          example: WELADED1ISL
      description: "Model Class: CustomerBankAccount"
    JTL.Wawi.Rest.Contracts.Models.Customer.CreateCustomerBankAccount:
      required:
        - AccountHolder
      type: object
      properties:
        AccountHolder:
          maxLength: 255
          minLength: 1
          type: string
          description: Name of the account holder of the customer's bank account.
          example: John Smith
        BankName:
          type: string
          description: Name of the bank.
          example: Sparkasse
        AccountNumber:
          type: string
          description: Account number of the customer's bank account.
          example: "1234567890"
        BankCode:
          type: string
          description: Bank code of the customer bank's account.
          example: "44550045"
        IBAN:
          type: string
          description: International bank account number of the customer's bank account.
          example: DE123456789123456
        BIC:
          type: string
          description: Bank identification code of the customer's bank account.
          example: WELADED1ISL
      description: "Model Class: CreateCustomerBankAccount"
    JTL.Wawi.Rest.Contracts.Models.Common.CustomFieldValue:
      required:
        - CustomFieldId
        - Value
      type: object
      properties:
        CustomFieldId:
          type: integer
          description: Unique ID to identifify a custom field.
          format: int32
          example: 15
        Value:
          type: object
          description: >-
            The custom field value. The object should match the custom field
            type.
          example: Some text about technical data
      description: "Model Class: CustomFieldValue"
    JTL.Wawi.Rest.Contracts.Models.Common.UpdateNote:
      required:
        - NoteBody
      type: object
      properties:
        NoteBody:
          type: string
          description: The text in the customer note.
          example: This is a customer note.
      description: "Model Class: UpdateNote"
    JTL.Wawi.Rest.Contracts.Models.Customer.UpdateCustomerContact:
      type: object
      properties:
        Department:
          type: string
          description: The contact person's department.
          example: Management
        Honorific:
          type: string
          description: The contact person's form of address.
          example: Herr
        FirstName:
          type: string
          description: The contact person's first name.
          example: John
        LastName:
          type: string
          description: The contact person's last name.
          example: Smith
        PhoneNumber:
          type: string
          description: The contact person's landline phone number.
          example: 01234 / 123456-0
        MobilePhoneNumber:
          type: string
          description: The contact person's mobile number.
          example: 0162 / 1234567
        EmailAddress:
          type: string
          description: The contact person's email address.
          example: john.smith@somemail.com
        Fax:
          type: string
          description: The contact person's fax number.
          example: 01234 / 123456-13
      description: "Model Class: UpdateCustomerContact"
    JTL.Wawi.Rest.Contracts.Models.Customer.UpdateCustomerBankAccount:
      type: object
      properties:
        AccountHolder:
          type: string
          description: Name of the account holder of the customer's bank account.
          example: John Smith
        BankName:
          type: string
          description: Name of the bank.
          example: Sparkasse
        AccountNumber:
          type: string
          description: Account number of the customer's bank account.
          example: "1234567890"
        BankCode:
          type: string
          description: Bank code of the customer bank's account.
          example: "44550045"
        IBAN:
          type: string
          description: International bank account number of the customer's bank account.
          example: DE123456789123456
        BIC:
          type: string
          description: Bank identification code of the customer's bank account.
          example: WELADED1ISL
      description: "Model Class: UpdateCustomerBankAccount"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Customer.Customer]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.Customer
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Customer.CreatePaymentSettings:
      type: object
      properties:
        PaymentMethodId:
          type: integer
          description: The unique ID to identify a payment method.
          format: int32
          example: 123
        Discount:
          type: number
          description: The indicated discount, if any.
          format: decimal
          example: 5
        PaymentTarget:
          type: integer
          description: The payment target in days.
          format: int32
          example: 3
        CreditLimit:
          type: integer
          description: The customer's credit limit.
          format: int32
          example: 100
        StopPaymentRequest:
          type: boolean
          description: Option to stop payment requests.
          example: false
      description: "Model Class: CreatePaymentSettings"
    JTL.Wawi.Rest.Contracts.Models.Customer.CreateOtherAddresses:
      type: object
      properties:
        OtherBillingAddresses:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateAddress
          description: All other non-default billing addresses of the customer.
        OtherShippingAddresses:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateAddress
          description: All other non-default shipping addresses of the customer.
        OtherCustomerAddresses:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateAddress
          description: All other non-billing and non-shipping addresses of the customer.
      description: "Model Class: CreateOtherAddresses"
    JTL.Wawi.Rest.Contracts.Models.Common.CreateAddress:
      required:
        - City
        - CountryIso
      type: object
      properties:
        Company:
          type: string
          description: Description of the Company.
          example: Sportbedarf Sommer
        Company2:
          type: string
          description: Additional company information
          example: Innovation Division
        FormOfAddress:
          type: string
          description: Customer form of address
          example: Mr.
        Title:
          type: string
          description: Official title
          example: Dr.
        FirstName:
          type: string
          description: Customer first name
          example: John
        LastName:
          type: string
          description: Customer last name
          example: Doe
        Street:
          type: string
          description: Street name in the customer's address
          example: Main St. 123
        Address2:
          type: string
          description: Additional address information
          example: Floor 5, Apt 302
        PostalCode:
          type: string
          description: Postal code of the customer's address
          example: "12345"
        City:
          maxLength: 255
          minLength: 1
          type: string
          description: Name of city in the customer's address
          example: Example City
        State:
          type: string
          description: Name of state in the customer's address
          example: Example State
        CountryIso:
          maxLength: 5
          minLength: 1
          type: string
          description: Country ISO code
          example: DE
        VatID:
          type: string
          description: Supplier VAT ID number
          example: DE123456789
        PhoneNumber:
          type: string
          description: Landline phone number
          example: +49 1234 445556661
        MobilePhoneNumber:
          type: string
          description: Mobile phone number
          example: +49 160 123 4567
        EmailAddress:
          type: string
          description: Email address
          example: example@email.com
        Fax:
          type: string
          description: Fax number
          example: +49 1234 4455566615
      description: "Model Class: CreateAddress"
    JTL.Wawi.Rest.Contracts.Models.Customer.CreateCustomer:
      required:
        - CustomerGroupId
        - BillingAddress
        - LanguageIso
        - InternalCompanyId
      type: object
      properties:
        Number:
          type: string
          description: The customer's number.
          example: C1005486
        CustomerGroupId:
          type: integer
          description: The customer group ID.
          format: int32
          example: 0
        BillingAddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateAddress
        Shipmentaddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateAddress
        CustomAddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateAddress
        OtherAddresses:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CreateOtherAddresses
        PaymentSettings:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Customer.CreatePaymentSettings
        CustomerSince:
          type: string
          description: Date since they have been a customer.
          format: date-time
          example: "2023-02-01T13:30:00.0000000+00:00"
        LastChange:
          type: string
          description: Date of the last customer's data change.
          format: date-time
          example: "2023-02-01T13:30:00.0000000+00:00"
        LanguageIso:
          type: string
          description: The customer's language.
          example: DE
        InternalCompanyId:
          type: integer
          description: >-
            The internal ID of the company associated with the customer. This is
            configured in the company and email settings in JTL-Wawi
          format: int32
          example: 1
        CustomerCategoryId:
          type: integer
          description: The customer category ID.
          format: int32
          example: 12
        TaxIdentificationNumber:
          type: string
          description: The customer's tax identification number.
          example: 123/123/12345
        AccountsReceivableNumber:
          type: integer
          description: The customer's accounts receivable number.
          format: int32
          example: 10000
        CommercialRegisterNumber:
          type: string
          description: The customer's commercial register number.
          example: HRB 1234
        Website:
          type: string
          description: The customer's website.
          example: https://mywebsite.com
        InitialContact:
          type: string
          description: >-
            The source of initial contact. This could be for example a specific
            sales channel, a convention or a marketing campaign.
          example: Amazon
        EbayUsername:
          type: string
          description: The customer's eBay username.
          example: eBaybuyer123
        Birthday:
          type: string
          description: The customer's date of birth.
          format: date-time
          example: 1985-01-01T
        IsLocked:
          type: boolean
          description: The customer's locked status for online shop sales channels.
          example: false
        IsCashRegisterBased:
          type: boolean
          description: >-
            States if a customer is from a cash-register or point of sale and if
            their data should be synchronized with JTL-POS, for example.
          example: false
      description: "Model Class: CreateCustomer"
    JTL.Wawi.Rest.Contracts.Models.Common.CreateWorkflowEvent:
      required:
        - Id
      type: object
      properties:
        Id:
          type: integer
          description: ID of the workflow event
          format: int32
          example: 1
      description: "Model Class: CreateWorkflowEvent"
    JTL.Wawi.Rest.Contracts.Models.Common.UpdateCustomFieldValue:
      required:
        - Value
      type: object
      properties:
        Value:
          type: object
          description: >-
            The custom field value. The object should match the custom field
            type.
          example: Some text about technical data
      description: "Model Class: UpdateCustomFieldValue"
    JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CustomerCategory:
      required:
        - Id
        - Name
      type: object
      properties:
        Id:
          type: integer
          description: Unique internal ID of the customer category.
          format: int32
          example: 13
        Name:
          type: string
          description: The customer category name.
          example: Newsletter Customers
      description: "Model Class: CustomerCategory"
    JTL.Wawi.Rest.Contracts.Models.CustomerCategory.CreateCustomerCategory:
      required:
        - Name
      type: object
      properties:
        Name:
          maxLength: 128
          minLength: 1
          type: string
          description: The customer category name.
          example: Newsletter Customers
      description: "Model Class: CreateCustomerCategory"
    JTL.Wawi.Rest.Contracts.Models.CustomerCategory.UpdateCustomerCategory:
      type: object
      properties:
        Name:
          type: string
          description: The customer category name.
          example: Newsletter Customers
      description: "Model Class: UpdateCustomerCategory"
    JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CustomerGroup:
      required:
        - Id
        - Name
        - IsDefault
        - Discount
        - IsNetPrice
      type: object
      properties:
        Id:
          type: integer
          description: Unique internal ID of the customer group.
          format: int32
          example: 1
        Name:
          type: string
          description: The name of the customer group.
          example: B2C
        IsDefault:
          type: boolean
          description: >-
            Indicates if the customer group is the default group. Only one group
            can be selected as the default group.
          example: false
        Discount:
          type: number
          description: The discounted percentage for the customer group.
          format: decimal
          example: 5
        IsNetPrice:
          type: boolean
          description: >-
            Indicates if the customer group sees the net price in the online
            shop.
          example: false
      description: "Model Class: CustomerGroup"
    JTL.Wawi.Rest.Contracts.Models.CustomerGroup.CreateCustomerGroup:
      required:
        - Name
      type: object
      properties:
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the customer group.
          example: B2C
        IsDefault:
          type: boolean
          description: >-
            Indicates if the customer group is the default group. Only one group
            can be selected as the default group.
          example: false
        Discount:
          type: number
          description: The discounted percentage for the customer group.
          format: decimal
          example: 5
        IsNetPrice:
          type: boolean
          description: >-
            Indicates if the customer group sees the net price in the online
            shop.
          example: false
      description: "Model Class: CreateCustomerGroup"
    JTL.Wawi.Rest.Contracts.Models.CustomerGroup.UpdateCustomerGroup:
      type: object
      properties:
        Name:
          type: string
          description: The name of the customer group.
          example: B2C
        IsDefault:
          type: boolean
          description: >-
            Indicates if the customer group is the default group. Only one group
            can be selected as the default group.
          example: false
        Discount:
          type: number
          description: The discounted percentage for the customer group.
          format: decimal
          example: 5
        IsNetPrice:
          type: boolean
          description: >-
            Indicates if the customer group sees the net price in the online
            shop.
          example: false
      description: "Model Class: UpdateCustomerGroup"
    JTL.Wawi.Rest.Contracts.Models.Delivery.CreateReserveRequest:
      required:
        - SalesOrders
        - DeliverySources
        - PicklistReserveOptions
      type: object
      properties:
        SalesOrders:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.CreateSalesOrder
          description: List of sales orders
        DeliverySources:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.CreateDeliverySource
          description: List of preferred warehouses and suppliers
        PicklistReserveOptions:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.CreatePicklistReserveOptions
      description: "Model Class: CreateReserveRequest"
    JTL.Wawi.Rest.Contracts.Models.Delivery.CreateSalesOrder:
      required:
        - SalesOrderId
        - Priority
      type: object
      properties:
        SalesOrderId:
          type: integer
          description: Sales order ID
          format: int32
        Priority:
          type: integer
          description: Priority order
          format: int32
      description: "Model Class: CreateSalesOrder"
    JTL.Wawi.Rest.Contracts.Models.Delivery.CreatePicklistReserveOptions:
      required:
        - PicklistPerOrder
        - PrereserveLots
        - BomCorrection
      type: object
      properties:
        PicklistPerOrder:
          type: boolean
          description: Pick list per order
        PrereserveLots:
          type: boolean
          description: Enable lot prereservation
        BomCorrection:
          type: boolean
          description: Enable BOM correction
      description: "Model Class: CreatePicklistReserveOptions"
    JTL.Wawi.Rest.Contracts.Models.Delivery.CreateDeliverySource:
      required:
        - Type
        - Priority
      type: object
      properties:
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          type: integer
          description: >-
            Type of the Delivery source (Warehouse, Supplier, Cheapest Supplier,
            Fastest Supplier, Standard Supplier0=Warehouse | 1=Supplier |
            2=CheapestSupplier | 3=FastestSupplier | 4=StandardSupplier
          format: int32
          x-enumNames:
            - Warehouse
            - Supplier
            - CheapestSupplier
            - FastestSupplier
            - StandardSupplier
        Id:
          type: integer
          description: Id of the Delivery Source
          format: int32
        ContactPersonId:
          type: integer
          description: Id of the Contact Person for the Supplier
          format: int32
        Priority:
          type: integer
          description: Priority of the DeliverySource
          format: int32
      description: Delivery Source Object
    JTL.Wawi.Rest.Contracts.Models.Delivery.ReserveResponse:
      required:
        - Picklists
        - OrderReservations
      type: object
      properties:
        Picklists:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.Picklist
          description: Generated pick lists
        OrderReservations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.OrderReservation
          description: Reservation results
      description: "Model Class: ReserveResponse"
    JTL.Wawi.Rest.Contracts.Models.Delivery.Picklist:
      required:
        - PicklistId
      type: object
      properties:
        PicklistId:
          type: integer
          description: ID of the pick list
          format: int32
      description: "Model Class: Picklist"
    JTL.Wawi.Rest.Contracts.Models.Delivery.OrderReservation:
      required:
        - SalesOrderId
        - CompletelyReserved
        - Reservations
      type: object
      properties:
        SalesOrderId:
          type: integer
          description: Sales order ID
          format: int32
        CompletelyReserved:
          type: boolean
          description: True if fully reserved
        Reservations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.Reservation
          description: Assigned reservations
      description: "Model Class: OrderReservation"
    JTL.Wawi.Rest.Contracts.Models.Delivery.Reservation:
      required:
        - SalesOrderPositionId
        - WarehouseId
        - Amount
        - SupplierId
        - ContactPersonId
      type: object
      properties:
        SalesOrderPositionId:
          type: integer
          description: Position ID
          format: int32
        WarehouseId:
          type: integer
          description: Warehouse ID
          format: int32
        Amount:
          type: number
          description: Reserved quantity
          format: decimal
        SupplierId:
          type: integer
          description: Supplier Id
          format: int32
        ContactPersonId:
          type: integer
          description: Contact Person Id
          format: int32
      description: "Model Class: Reservation"
    JTL.Wawi.Rest.Contracts.Models.Delivery.CreateReassignRequest:
      required:
        - DeliverySources
        - SalesOrderPositions
      type: object
      properties:
        DeliverySources:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.CreateDeliverySource
          description: DeliverySource to consider
        SalesOrderPositions:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.CreateSalesOrderPosition
          description: Positions to reassign
      description: "Model Class: CreateReassignRequest"
    JTL.Wawi.Rest.Contracts.Models.Delivery.CreateSalesOrderPosition:
      required:
        - SalesOrderPositionId
        - Amount
      type: object
      properties:
        SalesOrderPositionId:
          type: integer
          description: Position ID
          format: int32
        Amount:
          type: integer
          description: Quantity
          format: int32
      description: "Model Class: CreateSalesOrderPosition"
    JTL.Wawi.Rest.Contracts.Models.Delivery.ReassignResponse:
      required:
        - Picklists
        - SalesOrderPositions
      type: object
      properties:
        Picklists:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.Picklist
          description: Updated pick lists
        SalesOrderPositions:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.SalesOrderPositionReservation
          description: New reservations
      description: "Model Class: ReassignResponse"
    JTL.Wawi.Rest.Contracts.Models.Delivery.SalesOrderPositionReservation:
      required:
        - SalesOrderPositionId
        - Reservations
      type: object
      properties:
        SalesOrderPositionId:
          type: integer
          description: Position ID
          format: int32
        Reservations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.Reservation
          description: Reassigned reservations
      description: "Model Class: SalesOrderPositionReservation"
    JTL.Wawi.Rest.Contracts.Models.Delivery.CreateCancelReservationRequest:
      required:
        - Picklists
        - SalesOrders
      type: object
      properties:
        Picklists:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Delivery.CreatePicklist
          description: Pick list IDs to cancel
        SalesOrders:
          type: array
          items:
            type: integer
            format: int32
          description: Sales order IDs to cancel
      description: "Model Class: CreateCancelReservationRequest"
    JTL.Wawi.Rest.Contracts.Models.Delivery.CreatePicklist:
      required:
        - PicklistId
      type: object
      properties:
        PicklistId:
          type: integer
          description: ID of the pick list
          format: int32
      description: "Model Class: CreatePicklist"
    JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNotePackage:
      required:
        - Id
        - PackageDate
        - TrackingID
        - Weights
        - ShippingMethodId
        - ShippedDate
        - TrackingUrl
        - Comment
      type: object
      properties:
        Id:
          type: integer
          description: The id of the package.
          format: int32
          example: 65475
        PackageDate:
          type: string
          description: The date when the package was created.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        TrackingID:
          type: string
          description: The tracking Id of the package.
          example: JJD0099999999
        Weights:
          type: number
          description: The weight of the package.
          format: decimal
          example: 5
        ShippingMethodId:
          type: integer
          description: The shipping method of the package.
          format: int32
          example: 3
        ShippedDate:
          type: string
          description: The date when the package was shipped.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        TrackingUrl:
          type: string
          description: The tracking url of the package.
          example: >-
            https://nolp.dhl.de/nextt-online-public/set_identcodes.do?lang=de&idc=JJD0099999999
        Comment:
          type: string
          description: The comment of the package.
          example: Shipping Comment
      description: "Model Class: DeliveryNotePackage"
    JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNote:
      required:
        - Id
        - Number
        - DeliveryNoteDate
        - Packages
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a delivery note.
          format: int32
          example: 123
        Number:
          type: string
          description: The number of the delivery note.
          example: A1004465
        DeliveryNoteDate:
          type: string
          description: The date when the delivery note was created.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        Packages:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNotePackage
          description: All packages that are created with the delivery note.
      description: "Model Class: DeliveryNote"
    JTL.Wawi.Rest.Contracts.Models.DeliveryNote.CreateDeliveryNotePackagePosting:
      required:
        - TrackingID
      type: object
      properties:
        ShippedDate:
          type: string
          description: The date when the package was shipped.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        TrackingID:
          type: string
          description: The tracking Id of the package.
          example: JJD0099999999
        Comment:
          type: string
          description: The comment of the package.
          example: Shipping Comment
      description: "Model Class: CreateDeliveryNotePackagePosting"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNote]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.DeliveryNote.DeliveryNote
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.DeliveryNote.UpdateDeliveryNotePackagePosting:
      required:
        - TrackingID
      type: object
      properties:
        ShippedDate:
          type: string
          description: The date when the package was shipped.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        TrackingID:
          type: string
          description: The tracking Id of the package.
          example: JJD0099999999
        Comment:
          type: string
          description: The comment of the package.
          example: Shipping Comment
      description: "Model Class: UpdateDeliveryNotePackagePosting"
    JTL.Wawi.Rest.Contracts.Models.Features.FeatureInfo:
      required:
        - Feature
        - Version
        - Release
        - IsUsable
      type: object
      properties:
        Feature:
          type: string
          description: The Identifier of the Feature.
          example: http://wawi.api.jtl-software.de/features/feature/GetFeatureSets
        Version:
          type: integer
          description: The Version of API.
          format: int32
          example: 1
        Release:
          type: string
          description: The releasestate of the Feature
          example: Planned
        IsUsable:
          type: boolean
          description: The endpoint is possible to use
          example: true
      description: "Model Class: FeatureInfo"
    JTL.Wawi.Rest.Contracts.Models.Info.Status:
      required:
        - Version
        - Timestamp
        - Tenant
        - Type
      type: object
      properties:
        Version:
          type: string
          description: The Version of Wawi.
          example: 1.8.10.0
        Timestamp:
          type: string
          description: The current Server Time
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        Tenant:
          type: string
          description: The name of the current Database Tenant
          example: eazybusiness
        Type:
          type: string
          description: Constant Identifier of API
          example: WAWI-Api
      description: "Model Class: Status"
    JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceDepartureCountry:
      required:
        - CountryISO
        - State
        - CurrencyIso
        - CurrencyFactor
      type: object
      properties:
        CountryISO:
          type: string
          description: ISO code of the departure country.
          example: DE
        State:
          type: string
          description: Name of the state in the departure country.
          example: Berlin
        CurrencyIso:
          type: string
          description: ISO code of the currency of the departure country.
          example: TODO
        CurrencyFactor:
          type: number
          description: The currency factor of the departure country.
          format: decimal
          example: 1.37
      description: "Model Class: InvoiceDepartureCountry"
    JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceCancellationDetails:
      required:
        - CancellationReasonId
        - CancellationComment
        - Date
      type: object
      properties:
        CancellationReasonId:
          type: integer
          description: The ID of the reason for cancelling the invoice.
          format: int32
          example: -4
        CancellationComment:
          type: string
          description: A comment that adds further information to the cancellation.
          example: >-
            Change of mind (once again); we should consider terminating the
            customer relationship
        Date:
          type: string
          description: The DateTime of Cancellation.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
      description: "Model Class: InvoiceCancellationDetails"
    JTL.Wawi.Rest.Contracts.Models.Invoice.InvoicePaymentDetail:
      required:
        - PaymentMethodId
        - PaymentStatus
        - TotalGrossAmount
        - CurrencyIso
        - CurrencyFactor
        - StillToPay
        - PaymentTarget
        - CashDiscount
        - CashDiscountDays
        - StopPaymentRequest
        - DunningLevel
        - NextDueDate
      type: object
      properties:
        PaymentMethodId:
          type: integer
          description: The payment method whith which the invoice was paid.
          format: int32
          example: 12
        PaymentStatus:
          enum:
            - 0
            - 1
            - 2
          type: integer
          description: >-
            The payment status of the invoice.0=UnPayed | 1=PartialPayed |
            2=Payed
          format: int32
          example: TODO
          x-enumNames:
            - UnPayed
            - PartialPayed
            - Payed
        TotalGrossAmount:
          type: number
          description: The total gross amount of the invoice.
          format: decimal
          example: 19.99
        CurrencyIso:
          type: string
          description: ISO code of the currency of the invoice.
          example: TODO
        CurrencyFactor:
          type: number
          description: >-
            The currency factor for the sales order at the time the sales order
            has been created.
          format: decimal
          example: 1.37
        StillToPay:
          type: number
          description: The amount that is left to pay for this invoice.
          format: decimal
          example: 0
        PaymentTarget:
          type: integer
          description: The due date for payment of the sales order in days.
          format: int32
          example: 0
        CashDiscount:
          type: number
          description: The cash discount of the sales order.
          format: decimal
          example: 5
        CashDiscountDays:
          type: integer
          description: The days that the cash discount is valid.
          format: int32
          example: 2
        StopPaymentRequest:
          type: boolean
          description: The creation of dunning letters is blocked.
          example: false
        DunningLevel:
          type: integer
          description: The stage at which dunning currently is
          format: int32
          example: 0
        NextDueDate:
          type: string
          description: The next due date
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
      description: "Model Class: InvoicePaymentDetail"
    JTL.Wawi.Rest.Contracts.Models.Invoice.Invoice:
      required:
        - Id
        - Number
        - ExternalNumber
        - CompanyId
        - DepartureCountry
        - CustomerId
        - BillingAddress
        - ShipmentAddress
        - InvoiceDate
        - InvoicePaymentDetails
        - ColorcodeId
        - DunningBlock
        - IsExternalInvoice
        - Comment
        - CustomerComment
        - IsCancelled
        - LanguageIso
        - CancellationDetails
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify an invoice.
          format: int32
          example: 123
        Number:
          type: string
          description: The number of the invoice.
          example: A1004465
        ExternalNumber:
          type: string
          description: The external number of the sales order.
          example: D456-64894-132
        CompanyId:
          type: integer
          description: The company ID on the invoice.
          format: int32
          example: 1
        DepartureCountry:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceDepartureCountry
        CustomerId:
          type: integer
          description: The customer ID.
          format: int32
          example: 1005
        BillingAddress:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        ShipmentAddress:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        InvoiceDate:
          type: string
          description: The date when the invoice was created.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        InvoicePaymentDetails:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.InvoicePaymentDetail
        ColorcodeId:
          type: integer
          description: The colour code of the invoice.
          format: int32
          example: 2
        DunningBlock:
          type: boolean
          description: The creation of dunning letters is blocked.
          example: false
        IsExternalInvoice:
          type: boolean
          description: >-
            Indicates if the invoice of the sales order was created in an
            external system like Amazon VCS.
          example: false
        Comment:
          type: string
          description: A comment on the sales order.
          example: an additional order comment
        CustomerComment:
          type: string
          description: A customer comment on the sales order.
          example: an additional customer comment
        IsCancelled:
          type: boolean
          description: Indicates if the invoice has been cancelled.
          example: false
        LanguageIso:
          type: string
          description: The language of the invoice.
          example: DE
        CancellationDetails:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceCancellationDetails
      description: "Model Class: Invoice"
    JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceCancellationReason:
      required:
        - Id
        - Name
        - IsCommentRequired
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a cancellation reason
          format: int32
          example: 5
        Name:
          type: string
          description: Name of the cancellation reason
          example: Change of mind
        IsCommentRequired:
          type: boolean
          description: >-
            Indicates if a comment is required when this cancellation reason is
            used
          example: false
      description: "Model Class: InvoiceCancellationReason"
    JTL.Wawi.Rest.Contracts.Models.Invoice.InvoiceLineItem:
      required:
        - Id
        - InvoiceId
        - SalesOrderId
        - SalesOrderLineItemId
        - ItemId
        - Name
        - SKU
        - Type
        - Quantity
        - SalesUnit
        - SalesPriceNet
        - SalesPriceGross
        - Discount
        - PurchasePriceNet
        - TaxRate
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify an invoice line item.
          format: int32
          example: 1123
        InvoiceId:
          type: integer
          description: Unique ID to identify an invoice.
          format: int32
          example: 12
        SalesOrderId:
          type: integer
          description: Unique ID to identify a sales order.
          format: int32
          example: 12
        SalesOrderLineItemId:
          type: integer
          description: Unique ID to identify a sales order line item.
          format: int32
          example: 12
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1000
        Name:
          type: string
          description: Name of the item.
          example: Awesome Binoculars
        SKU:
          type: string
          description: SKU of the sales invoice item.
          example: ART2394871
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
          type: integer
          description: >-
            Type of the sales invoice item.0=CustomLineItem | 1=Item |
            2=Shipping | 3=Coupon | 4=Voucher | 5=Payment | 6=ShippingSurcharge
            | 7=NewCustomerCoupon | 8=CashOnDelivery | 9=ShippingSurchargeItem |
            10=GiftWrapping | 11=GiftForFree | 12=TrustedShops |
            13=InterestPremium | 14=ProcessingFee | 15=Carton |
            16=ReturnDelivery | 17=MultiPurposeVoucher |
            18=MultiPurposeVoucherDigital | 19=SinglePurposeVoucher |
            20=SinglePurposeVoucherDigital | 21=SinglePurposeVoucherRedemption
          format: int32
          example: TODO
          x-enumNames:
            - CustomLineItem
            - Item
            - Shipping
            - Coupon
            - Voucher
            - Payment
            - ShippingSurcharge
            - NewCustomerCoupon
            - CashOnDelivery
            - ShippingSurchargeItem
            - GiftWrapping
            - GiftForFree
            - TrustedShops
            - InterestPremium
            - ProcessingFee
            - Carton
            - ReturnDelivery
            - MultiPurposeVoucher
            - MultiPurposeVoucherDigital
            - SinglePurposeVoucher
            - SinglePurposeVoucherDigital
            - SinglePurposeVoucherRedemption
        Quantity:
          type: number
          description: The quantity of the line item.
          format: decimal
          example: 2
        SalesUnit:
          type: string
          description: The measurement unit in which the line item is sold.
          example: stk
        SalesPriceNet:
          type: number
          description: The net sales price of the line item.
          format: decimal
          example: 16.8
        SalesPriceGross:
          type: number
          description: The gross sales price of the line item.
          format: decimal
          example: 19.99
        Discount:
          type: number
          description: The discount applied to the line item.
          format: decimal
          example: 5
        PurchasePriceNet:
          type: number
          description: The price for which the merchant has bought the item.
          format: decimal
          example: 13.46
        TaxRate:
          type: number
          description: The tax rate of the line item.
          format: decimal
          example: 19
      description: "Model Class: InvoiceLineItem"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Invoice.Invoice]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Invoice.Invoice
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Item.ItemIdentifiers:
      required:
        - Gtin
        - ManufacturerNumber
        - ISBN
        - UPC
        - AmazonFnsku
        - Asins
        - OwnIdentifier
      type: object
      properties:
        Gtin:
          type: string
          description: GTIN
          example: "8896982295860"
        ManufacturerNumber:
          type: string
          description: Manufacturer number.
          example: "75"
        ISBN:
          type: string
          description: ISBN
          example: 978-3-86680-192-9
        UPC:
          type: string
          description: UPC
          example: "889698229586"
        AmazonFnsku:
          type: string
          description: An item's Amazon FNSKU.
          example: FN813S88A43
        Asins:
          type: array
          items:
            type: string
          description: A list of the item's ASINs.
          example: B071GVGFQF
        OwnIdentifier:
          type: string
          description: A custom identifier for the item.
          example: P446853
      description: "Model Class: ItemIdentifiers"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemPrice:
      required:
        - SalesPriceNet
        - SuggestedRetailPrice
        - PurchasePriceNet
        - EbayPrice
        - AmazonPrice
      type: object
      properties:
        SalesPriceNet:
          type: number
          description: The net sales price of the item.
          format: decimal
          example: 125.21
        SuggestedRetailPrice:
          type: number
          description: The suggested retail price for the item.
          format: decimal
          example: 159.99
        PurchasePriceNet:
          type: number
          description: The purchase price of the item.
          format: decimal
          example: 99.73
        EbayPrice:
          type: number
          description: Default price in new listing templates.
          format: decimal
          example: 149.99
        AmazonPrice:
          type: number
          description: Brutto price for new Amazon listings.
          format: decimal
          example: 149.99
      description: "Model Class: ItemPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemStorageOption:
      required:
        - InventoryManagementActive
        - SplitQuantity
        - GlobalMinimumStockLevel
        - Buffer
        - SerialNumberItem
        - SerialNumberTracking
        - SubjectToShelfLifeExpirationDate
        - SubjectToBatchItem
        - ProcurementTime
        - DetermineProcurementTimeAutomatically
        - AdditionalHandlingTime
      type: object
      properties:
        InventoryManagementActive:
          type: boolean
          description: >-
            Indicates if inventory management for the item is active, meaning
            that the item displays stock quantities.
          example: true
        SplitQuantity:
          type: boolean
          description: Indicates if the item can be split into quantities less than 1.
          example: false
        GlobalMinimumStockLevel:
          type: number
          description: >-
            Defines the minimum quantity that should always be in stock. For
            example, when calculating purchasing orders.
          format: decimal
          example: 15
        Buffer:
          type: integer
          description: >-
            The buffer of the item. Used when selling time-delayed across
            different sales channels, so as not to sell more than is in stock.
          format: int32
          example: 5
        SerialNumberItem:
          type: boolean
          description: Indicates the item's serial number when shipping the sales orders.
          example: false
        SerialNumberTracking:
          type: boolean
          description: >-
            Indicates if serial numbers are to be identified during a goods
            receipt process from a supplier.
          example: false
        SubjectToShelfLifeExpirationDate:
          type: boolean
          description: >-
            Indicates if the item has an expiration date, also known as a best
            before date.
          example: false
        SubjectToBatchItem:
          type: boolean
          description: Indicates whether the item is a batch item or not.
          example: false
        ProcurementTime:
          type: integer
          description: >-
            The procurement time indicates how many days it will take for the
            goods to be ready for shipment if they are currently out of stock.
            Procurement time is determined automatically on the basis of the
            supplier’s delivery time. By default, the delivery time of the
            default supplier is used as the procurement time. If additional
            processing time (in days) has been specified, this is added to the
            procurement time.
          format: int32
          example: 3
        DetermineProcurementTimeAutomatically:
          type: boolean
          description: >-
            If this option is set, the procurement time will be calculated from
            the default supplier's shipment time.
          example: false
        AdditionalHandlingTime:
          type: integer
          description: >-
            Indicates the additional processing time in days required to
            process. It is always added to the delivery time.
          format: int32
          example: 3
      description: "Model Class: ItemStorageOption"
    JTL.Wawi.Rest.Contracts.Models.Common.Dimensions:
      required:
        - Length
        - Width
        - Height
      type: object
      properties:
        Length:
          type: number
          description: Length
          format: decimal
          example: 10.5
        Width:
          type: number
          description: Width
          format: decimal
          example: 5.8
        Height:
          type: number
          description: Height
          format: decimal
          example: 3
      description: "Model Class: Dimensions"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemWeights:
      required:
        - ItemWeigth
        - ShippingWeight
      type: object
      properties:
        ItemWeigth:
          type: number
          description: The weight of the item in kilograms.
          format: decimal
          example: 5
        ShippingWeight:
          type: number
          description: The shipping weight of the item in kilograms.
          format: decimal
          example: 5.5
      description: "Model Class: ItemWeights"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemQuantities:
      required:
        - MinimumOrderQuantity
        - MinimumPurchaseQuantityForCustomerGroup
        - PermissibleOrderQuantity
      type: object
      properties:
        MinimumOrderQuantity:
          type: number
          description: The minimum order quantity of the item.
          format: decimal
          example: 0
        MinimumPurchaseQuantityForCustomerGroup:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemMinimumPurchaseQuantityForCustomerGroup
          description: >-
            A collection of minimum order quantities for different customer
            groups.
        PermissibleOrderQuantity:
          type: number
          description: >-
            The permissible order quantity for the item. Indicates the
            increments in which the item is sold.
          format: decimal
          example: 0
      description: "Model Class: ItemQuantities"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemDangerousGoods:
      required:
        - UnNumber
        - HazardNo
      type: object
      properties:
        UnNumber:
          type: string
          description: The UN number for the item.
          example: "0070"
        HazardNo:
          type: string
          description: The hazard number for the item.
          example: Class1 explosives
      description: "Model Class: ItemDangerousGoods"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemMinimumPurchaseQuantityForCustomerGroup:
      required:
        - CustomerGroupId
        - PermissibleOrderQuantity
        - MinimumPurchaseQuantity
        - IsActive
      type: object
      properties:
        CustomerGroupId:
          type: integer
          description: Unique ID to identify a customer group.
          format: int32
          example: 3
        PermissibleOrderQuantity:
          type: number
          description: >-
            The permissible order quantity for the item. Indicates the
            increments in which the item is sold.
          format: decimal
          example: 149.99
        MinimumPurchaseQuantity:
          type: number
          description: The minimum purchase quantity for a customer group.
          format: decimal
          example: 1
        IsActive:
          type: boolean
          description: Indicates if this setting is active or deactivated.
          example: true
      description: "Model Class: ItemMinimumPurchaseQuantityForCustomerGroup"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemComponent:
      required:
        - ItemId
        - Quantity
        - SortNumber
      type: object
      properties:
        ItemId:
          type: integer
          description: Item ID of the item's component.
          format: int32
          example: 12345
        Quantity:
          type: number
          description: Quantity of the component in the bill of material.
          format: decimal
          example: 2
        SortNumber:
          type: integer
          description: >-
            Defines the order of the components when shown in lists and sales
            channels.
          format: int32
          example: 1
      description: "Model Class: ItemComponent"
    JTL.Wawi.Rest.Contracts.Models.Item.CategoryReference:
      required:
        - CategoryId
        - Name
      type: object
      properties:
        CategoryId:
          type: integer
          description: Unique ID to identify a category.
          format: int32
          example: 33
        Name:
          type: string
          description: Name in the default language of the category.
          example: House and Garden
      description: "Model Class: CategoryReference"
    JTL.Wawi.Rest.Contracts.Models.Item.Item:
      required:
        - Id
        - SKU
        - ManufacturerId
        - ResponsiblePersonId
        - IsActive
        - Categories
        - Name
        - Description
        - ShortDescription
        - Identifiers
        - Components
        - ChildItems
        - ParentItemId
        - ItemPriceData
        - ActiveSalesChannels
        - SortNumber
        - Annotation
        - Added
        - Changed
        - ReleasedOnDate
        - StorageOptions
        - CountryOfOrigin
        - ConditionId
        - ShippingClassId
        - ProductGroupId
        - TaxClassId
        - Dimensions
        - Weights
        - AllowNegativeStock
        - Quantities
        - DangerousGoods
        - Taric
        - SearchTerms
        - PriceListActive
        - IgnoreDiscounts
        - AvailabilityId
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1
        SKU:
          type: string
          description: >-
            Item SKU. If no SKU is given when posting an item, the SKU will be
            generated automatically.
          example: ART2394871
        ManufacturerId:
          type: integer
          description: The manufacturer ID.
          format: int32
          example: 1
        ResponsiblePersonId:
          type: integer
          description: The Responsible person ID.
          format: int32
          example: 1
        IsActive:
          type: boolean
          description: Indicates if the item is active.
          example: true
        Categories:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CategoryReference
          description: List of all the categories for the item.
        Name:
          type: string
          description: Name of the item in the default language in JTL-Wawi.
          example: Interdimensional goggles
        Description:
          type: string
          description: Full textdescription for the item
          example: >-
            These goggles are a must have product. Everyone needs them. Buy
            them.
        ShortDescription:
          type: string
          description: Short description of the item in the default language in JTL-Wawi.
          example: The best goggles anyone can buy
        Identifiers:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemIdentifiers
        Components:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemComponent
          description: Components for the item if the item is a bill of material.
        ChildItems:
          type: array
          items:
            type: integer
            format: int32
          description: IDs of the child items, if the item is a parent item.
          example: ""
        ParentItemId:
          type: integer
          description: ID of the parent item, if the item is a child item.
          format: int32
          example: 2
        ItemPriceData:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemPrice"
        ActiveSalesChannels:
          type: string
          description: >-
            The list of active sales channels of the item. Only online shops and
            JTL-POS are permitted. Sales channels that are removed from this
            list will be deactivated for this item.
          example: ""
        SortNumber:
          type: integer
          description: >-
            The sort number of the item, used in some sales channels for
            ordering items.
          format: int32
          example: 0
        Annotation:
          type: string
          description: The item annotation.
          example: Some additional internal info about the item
        Added:
          type: string
          description: Date when the item was added to the system.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        Changed:
          type: string
          description: >-
            Date of the last change made to the item. Only item data changes are
            relevant for this field, not changes in stock.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        ReleasedOnDate:
          type: string
          description: The date when the item was put up for sale.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        StorageOptions:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemStorageOption
        CountryOfOrigin:
          type: string
          description: The country of origin of the item.
          example: DE
        ConditionId:
          type: integer
          description: Condition ID of the item. Default if nothing is specified.
          format: int32
          example: 1
        ShippingClassId:
          type: integer
          description: The shipping class ID.
          format: int32
          example: 4
        ProductGroupId:
          type: integer
          description: The ID of the item group.
          format: int32
          example: 2
        TaxClassId:
          type: integer
          description: The ID of the tax class.
          format: int32
          example: 3
        Dimensions:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Dimensions
        Weights:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemWeights"
        AllowNegativeStock:
          type: boolean
          description: >-
            This option allows you to sell a higher quantity of the item than is
            actually in stock.
          example: false
        Quantities:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemQuantities
        DangerousGoods:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemDangerousGoods
        Taric:
          type: string
          description: Taric code of the item.
          example: "61071100"
        SearchTerms:
          type: string
          description: Search terms for the item.
          example: goggles, magnification, lenses
        PriceListActive:
          type: boolean
          description: Indicates if the item is in the price list.
          example: false
        IgnoreDiscounts:
          type: boolean
          description: Indicates if discounts are to be disregarded.
          example: false
        AvailabilityId:
          type: integer
          description: Availability ID of the item.
          format: int32
          example: 2
      description: "Model Class: Item"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemMinimumPurchaseQuantityForCustomerGroup:
      required:
        - CustomerGroupId
      type: object
      properties:
        CustomerGroupId:
          type: integer
          description: Unique ID to identify a customer group.
          format: int32
          example: 3
        PermissibleOrderQuantity:
          type: number
          description: >-
            The permissible order quantity for the item. Indicates the
            increments in which the item is sold.
          format: decimal
          example: 149.99
        MinimumPurchaseQuantity:
          type: number
          description: The minimum purchase quantity for a customer group.
          format: decimal
          example: 1
        IsActive:
          type: boolean
          description: Indicates if this setting is active or deactivated.
          example: true
      description: "Model Class: UpdateItemMinimumPurchaseQuantityForCustomerGroup"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemDangerousGoods:
      type: object
      properties:
        UnNumber:
          type: string
          description: The UN number for the item.
          example: "0070"
        HazardNo:
          type: string
          description: The hazard number for the item.
          example: Class1 explosives
      description: "Model Class: UpdateItemDangerousGoods"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemQuantities:
      type: object
      properties:
        MinimumOrderQuantity:
          type: number
          description: The minimum order quantity of the item.
          format: decimal
          example: 0
        MinimumPurchaseQuantityForCustomerGroup:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemMinimumPurchaseQuantityForCustomerGroup
          description: >-
            A collection of minimum order quantities for different customer
            groups.
        PermissibleOrderQuantity:
          type: number
          description: >-
            The permissible order quantity for the item. Indicates the
            increments in which the item is sold.
          format: decimal
          example: 0
      description: "Model Class: UpdateItemQuantities"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemWeights:
      type: object
      properties:
        ItemWeigth:
          type: number
          description: The weight of the item in kilograms.
          format: decimal
          example: 5
        ShippingWeight:
          type: number
          description: The shipping weight of the item in kilograms.
          format: decimal
          example: 5.5
      description: "Model Class: UpdateItemWeights"
    JTL.Wawi.Rest.Contracts.Models.Common.UpdateDimensions:
      type: object
      properties:
        Length:
          type: number
          description: Length
          format: decimal
          example: 10.5
        Width:
          type: number
          description: Width
          format: decimal
          example: 5.8
        Height:
          type: number
          description: Height
          format: decimal
          example: 3
      description: "Model Class: UpdateDimensions"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemStorageOption:
      type: object
      properties:
        GlobalMinimumStockLevel:
          type: number
          description: >-
            Defines the minimum quantity that should always be in stock. For
            example, when calculating purchasing orders.
          format: decimal
          example: 15
        Buffer:
          type: integer
          description: >-
            The buffer of the item. Used when selling time-delayed across
            different sales channels, so as not to sell more than is in stock.
          format: int32
          example: 5
        SerialNumberTracking:
          type: boolean
          description: >-
            Indicates if serial numbers are to be identified during a goods
            receipt process from a supplier.
          example: false
        ProcurementTime:
          type: integer
          description: >-
            The procurement time indicates how many days it will take for the
            goods to be ready for shipment if they are currently out of stock.
            Procurement time is determined automatically on the basis of the
            supplier’s delivery time. By default, the delivery time of the
            default supplier is used as the procurement time. If additional
            processing time (in days) has been specified, this is added to the
            procurement time.
          format: int32
          example: 3
        DetermineProcurementTimeAutomatically:
          type: boolean
          description: >-
            If this option is set, the procurement time will be calculated from
            the default supplier's shipment time.
          example: false
        AdditionalHandlingTime:
          type: integer
          description: >-
            Indicates the additional processing time in days required to
            process. It is always added to the delivery time.
          format: int32
          example: 3
      description: "Model Class: UpdateItemStorageOption"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemPrice:
      type: object
      properties:
        SalesPriceNet:
          type: number
          description: The net sales price of the item.
          format: decimal
          example: 125.21
        SuggestedRetailPrice:
          type: number
          description: The suggested retail price for the item.
          format: decimal
          example: 159.99
        PurchasePriceNet:
          type: number
          description: The purchase price of the item.
          format: decimal
          example: 99.73
        EbayPrice:
          type: number
          description: Default price in new listing templates.
          format: decimal
          example: 149.99
        AmazonPrice:
          type: number
          description: Brutto price for new Amazon listings.
          format: decimal
          example: 149.99
      description: "Model Class: UpdateItemPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemComponent:
      required:
        - ItemId
        - Quantity
      type: object
      properties:
        ItemId:
          type: integer
          description: Item ID of the item's component.
          format: int32
          example: 12345
        Quantity:
          type: number
          description: Quantity of the component in the bill of material.
          format: double
          example: 2
        SortNumber:
          type: integer
          description: >-
            Defines the order of the components when shown in lists and sales
            channels.
          format: int32
          example: 1
      description: "Model Class: UpdateItemComponent"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemIdentifiers:
      type: object
      properties:
        Gtin:
          type: string
          description: GTIN
          example: "8896982295860"
        ManufacturerNumber:
          type: string
          description: Manufacturer number.
          example: "75"
        ISBN:
          type: string
          description: ISBN
          example: 978-3-86680-192-9
        UPC:
          type: string
          description: UPC
          example: "889698229586"
        AmazonFnsku:
          type: string
          description: An item's Amazon FNSKU.
          example: FN813S88A43
        Asins:
          type: array
          items:
            type: string
          description: A list of the item's ASINs.
          example: B071GVGFQF
        OwnIdentifier:
          type: string
          description: A custom identifier for the item.
          example: P446853
      description: "Model Class: UpdateItemIdentifiers"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateCategoryReference:
      required:
        - CategoryId
      type: object
      properties:
        CategoryId:
          type: integer
          description: Unique ID to identify a category.
          format: int32
          example: 33
      description: "Model Class: UpdateCategoryReference"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItem:
      type: object
      properties:
        SKU:
          type: string
          description: >-
            Item SKU. If no SKU is given when posting an item, the SKU will be
            generated automatically.
          example: ART2394871
        ManufacturerId:
          type: integer
          description: The manufacturer ID.
          format: int32
          example: 1
        ResponsiblePersonId:
          type: integer
          description: The Responsible person ID.
          format: int32
          example: 1
        Categories:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateCategoryReference
          description: List of all the categories for the item.
        Name:
          type: string
          description: Name of the item in the default language in JTL-Wawi.
          example: Interdimensional goggles
        Description:
          type: string
          description: Full textdescription for the item
          example: >-
            These goggles are a must have product. Everyone needs them. Buy
            them.
        ShortDescription:
          type: string
          description: Short description of the item in the default language in JTL-Wawi.
          example: The best goggles anyone can buy
        Identifiers:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemIdentifiers
        Components:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemComponent
          description: Components for the item if the item is a bill of material.
        ItemPriceData:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemPrice
        ActiveSalesChannels:
          type: string
          description: >-
            The list of active sales channels of the item. Only online shops and
            JTL-POS are permitted. Sales channels that are removed from this
            list will be deactivated for this item.
          example: ""
        SortNumber:
          type: integer
          description: >-
            The sort number of the item, used in some sales channels for
            ordering items.
          format: int32
          example: 0
        Annotation:
          type: string
          description: The item annotation.
          example: Some additional internal info about the item
        ReleasedOnDate:
          type: string
          description: The date when the item was put up for sale.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        StorageOptions:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemStorageOption
        CountryOfOrigin:
          type: string
          description: The country of origin of the item.
          example: DE
        ShippingClassId:
          type: integer
          description: The shipping class ID.
          format: int32
          example: 4
        ProductGroupId:
          type: integer
          description: The ID of the item group.
          format: int32
          example: 2
        TaxClassId:
          type: integer
          description: The ID of the tax class.
          format: int32
          example: 3
        Dimensions:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateDimensions
        Weights:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemWeights
        AllowNegativeStock:
          type: boolean
          description: >-
            This option allows you to sell a higher quantity of the item than is
            actually in stock.
          example: false
        Quantities:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemQuantities
        DangerousGoods:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemDangerousGoods
        Taric:
          type: string
          description: Taric code of the item.
          example: "61071100"
        SearchTerms:
          type: string
          description: Search terms for the item.
          example: goggles, magnification, lenses
        PriceListActive:
          type: boolean
          description: Indicates if the item is in the price list.
          example: false
        IgnoreDiscounts:
          type: boolean
          description: Indicates if discounts are to be disregarded.
          example: false
        AvailabilityId:
          type: integer
          description: Availability ID of the item.
          format: int32
          example: 2
      description: "Model Class: UpdateItem"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemImage:
      required:
        - ItemId
        - ImageId
        - Filename
        - ImageDataType
        - SalesChannelId
        - EbayUserName
        - SortNumber
        - Size
        - Width
        - Height
      type: object
      properties:
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 12345
        ImageId:
          type: integer
          description: Unique ID to identify an image.
          format: int32
          example: 100
        Filename:
          type: string
          description: Name of the file.
          example: itemImage.jpg
        ImageDataType:
          type: string
          description: Type of image.
          example: JPEG
        SalesChannelId:
          type: string
          description: >-
            The sales channel ID for an image. Only specific sales channels are
            allowed for this operation and are specified in the sales channel
            endpoint(GET).
          example: 1-1-1
        EbayUserName:
          type: string
          description: Name of the eBay user if the sales channel is eBay.
          example: eBay_username
        SortNumber:
          type: integer
          description: >-
            The sort number for arranging images in sales channels. Every image
            needs to have an unique sort number per sales channel and item.
          format: int32
          example: 3
        Size:
          type: integer
          description: The size of an image.
          format: int64
          example: 921
        Width:
          type: integer
          description: The width of an image in pixels.
          format: int32
          example: 1980
        Height:
          type: integer
          description: The height of the image in pixels.
          format: int32
          example: 1024
      description: "Model Class: ItemImage"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemImage:
      required:
        - ImageData
        - Filename
        - SalesChannelId
      type: object
      properties:
        ImageData:
          type: string
          description: Base64 encoded data of an image.
          format: byte
        Filename:
          type: string
          description: Name of the file.
          example: itemImage.jpg
        SalesChannelId:
          type: string
          description: >-
            The sales channel ID for an image. Only specific sales channels are
            allowed for this operation and are specified in the sales channel
            endpoint(GET).
          example: 1-1-1
      description: "Model Class: CreateItemImage"
    JTL.Wawi.Rest.Contracts.Models.Item.SupplierItemScalePrice:
      required:
        - FromQuantity
        - PurchasePriceNet
        - ReduceStandardPriceByPercent
      type: object
      properties:
        FromQuantity:
          type: integer
          description: >-
            The quantity where this scale price starts. This scale price ends at
            the next highest quantity. If there is no scale price with a higher
            quantity, then this price is set for all quantities from this point
            on.
          format: int32
          example: 0
        PurchasePriceNet:
          type: number
          description: >-
            Net purchase price of the supplier for the scale price starting from
            this given quantity to the next scale price with a higher quantity.
            If you use PurchasePriceNet, you can't use ReduceStandardSpBy% as
            well. Only one is allowed.
          format: decimal
          example: 94.21
        ReduceStandardPriceByPercent:
          type: number
          description: >-
            Reduces the default purchase price by a percentage. If you use
            PurchasePriceNet, you can't use ReduceStandardPriceByPercent as
            well. Only one is allowed.
          format: decimal
          example: 5
      description: "Model Class: SupplierItemScalePrice"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemSupplier:
      required:
        - ItemId
        - SupplierId
        - Sku
        - ItemName
        - IsStandard
        - PurchasePriceNet
        - TaxRate
        - MinimumPurchaseQuantity
        - PermissibleOrderQuantity
        - DeliveryTime
        - UseSupplierDeliveryTime
        - Stocklevel
        - IsDropshipping
        - MergeStockLevel
        - Comment
        - PackagingUnit
        - AmountPackagingUnit
        - PackagingUnitPurchasePriceNet
        - ScalePrices
      type: object
      properties:
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1
        SupplierId:
          type: integer
          description: Unique ID to identify a supplier.
          format: int32
          example: 1
        Sku:
          type: string
          description: Item SKU from the supplier.
          example: ART2394871
        ItemName:
          type: string
          description: Item name from the supplier.
          example: Interdimensional Goggles
        IsStandard:
          type: boolean
          description: Defines the main supplier for the given item.
          example: false
        PurchasePriceNet:
          type: number
          description: Net purchase price from the supplier.
          format: decimal
          example: 97.23
        TaxRate:
          type: number
          description: Percent of VAT tax rate.
          format: decimal
          example: 19
        MinimumPurchaseQuantity:
          type: number
          description: The minimum purchase quantity from the supplier.
          format: decimal
          example: 1
        PermissibleOrderQuantity:
          type: number
          description: >-
            The permissible order quantity for the item from the supplier. The
            increments in which the item can be sold.
          format: decimal
          example: 2
        DeliveryTime:
          type: integer
          description: Delivery time in days.
          format: int32
          example: 2
        UseSupplierDeliveryTime:
          type: boolean
          description: >-
            If set to true, Wawi will use the delivery time provided by the
            supplier and not by the item information. DeliveryTime will then be
            ignored.
          example: false
        Stocklevel:
          type: number
          description: Stock level of the item at the supplier.
          format: decimal
          example: 34
        IsDropshipping:
          type: boolean
          description: Activates drop shipping for a given item and supplier.
          example: false
        MergeStockLevel:
          type: boolean
          description: Forces Wawi to add the supplier's stock to your own stock.
          example: false
        Comment:
          type: string
          description: Comment for the supplier.
          example: A custom comment
        PackagingUnit:
          type: string
          description: Name of the packaging unit.
          example: box
        AmountPackagingUnit:
          type: number
          description: Quantity in a packaging unit.
          format: decimal
          example: 1
        PackagingUnitPurchasePriceNet:
          type: number
          description: Net purchase price from the supplier for a packaging unit.
          format: decimal
          example: 94.21
        ScalePrices:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.SupplierItemScalePrice
          description: Scale prices from this supplier for the item.
      description: "Model Class: ItemSupplier"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateSupplierItemScalePrice:
      required:
        - FromQuantity
      type: object
      properties:
        FromQuantity:
          type: integer
          description: >-
            The quantity where this scale price starts. This scale price ends at
            the next highest quantity. If there is no scale price with a higher
            quantity, then this price is set for all quantities from this point
            on.
          format: int32
          example: 0
        PurchasePriceNet:
          type: number
          description: >-
            Net purchase price of the supplier for the scale price starting from
            this given quantity to the next scale price with a higher quantity.
            If you use PurchasePriceNet, you can't use ReduceStandardSpBy% as
            well. Only one is allowed.
          format: decimal
          example: 94.21
        ReduceStandardPriceByPercent:
          type: number
          description: >-
            Reduces the default purchase price by a percentage. If you use
            PurchasePriceNet, you can't use ReduceStandardPriceByPercent as
            well. Only one is allowed.
          format: decimal
          example: 5
      description: "Model Class: CreateSupplierItemScalePrice"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemSupplier:
      required:
        - SupplierId
      type: object
      properties:
        SupplierId:
          type: integer
          description: Unique ID to identify a supplier.
          format: int32
          example: 1
        Sku:
          type: string
          description: Item SKU from the supplier.
          example: ART2394871
        ItemName:
          type: string
          description: Item name from the supplier.
          example: Interdimensional Goggles
        IsStandard:
          type: boolean
          description: Defines the main supplier for the given item.
          example: false
        PurchasePriceNet:
          type: number
          description: Net purchase price from the supplier.
          format: decimal
          example: 97.23
        TaxRate:
          type: number
          description: Percent of VAT tax rate.
          format: decimal
          example: 19
        MinimumPurchaseQuantity:
          type: number
          description: The minimum purchase quantity from the supplier.
          format: decimal
          example: 1
        PermissibleOrderQuantity:
          type: number
          description: >-
            The permissible order quantity for the item from the supplier. The
            increments in which the item can be sold.
          format: decimal
          example: 2
        DeliveryTime:
          type: integer
          description: Delivery time in days.
          format: int32
          example: 2
        UseSupplierDeliveryTime:
          type: boolean
          description: >-
            If set to true, Wawi will use the delivery time provided by the
            supplier and not by the item information. DeliveryTime will then be
            ignored.
          example: false
        Stocklevel:
          type: number
          description: Stock level of the item at the supplier.
          format: decimal
          example: 34
        IsDropshipping:
          type: boolean
          description: Activates drop shipping for a given item and supplier.
          example: false
        MergeStockLevel:
          type: boolean
          description: Forces Wawi to add the supplier's stock to your own stock.
          example: false
        Comment:
          type: string
          description: Comment for the supplier.
          example: A custom comment
        PackagingUnit:
          type: string
          description: Name of the packaging unit.
          example: box
        AmountPackagingUnit:
          type: number
          description: Quantity in a packaging unit.
          format: decimal
          example: 1
        ScalePrices:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateSupplierItemScalePrice
          description: Scale prices from this supplier for the item.
      description: "Model Class: CreateItemSupplier"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemPropertyValue:
      required:
        - PropertyId
        - PropertyValueId
      type: object
      properties:
        PropertyId:
          type: integer
          description: A unique property ID for an item.
          format: int32
          example: 43
        PropertyValueId:
          type: integer
          description: A unique property value ID for an item.
          format: int32
          example: 43
      description: "Model Class: ItemPropertyValue"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemProperties:
      required:
        - ItemId
        - Properties
      type: object
      properties:
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1
        Properties:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.ItemPropertyValue
          description: A list of property values for an item.
      description: "Model Class: ItemProperties"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemPropertyValue:
      required:
        - PropertyValueId
      type: object
      properties:
        PropertyValueId:
          type: integer
          description: A unique property value ID for an item.
          format: int32
          example: 43
      description: "Model Class: CreateItemPropertyValue"
    JTL.Wawi.Rest.Contracts.Models.Common.Translation:
      required:
        - LanguageIso
        - Name
      type: object
      properties:
        LanguageIso:
          type: string
          description: The language ISO code
          example: DE
        Name:
          type: string
          description: The word in the corresponding language
          example: German
      description: "Model Class: Translation"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemVariation:
      required:
        - Id
        - ItemId
        - Name
        - Type
        - Translations
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a variation.
          format: int32
          example: 101
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1
        Name:
          type: string
          description: Name of a variation in the default language.
          example: Interdimensional Goggles - Supermagnifier
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
          description: >-
            The type of variation.0=Dropdown | 1=Radiobutton | 2=Swatches |
            3=Textbox | 4=FreeText | 5=MandatoryFreeText
          format: int32
          example: ""
          x-enumNames:
            - Dropdown
            - Radiobutton
            - Swatches
            - Textbox
            - FreeText
            - MandatoryFreeText
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Translation
          description: Different terms for a variation in the non-default languages.
      description: "Model Class: ItemVariation"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemVariation:
      required:
        - Name
        - Type
      type: object
      properties:
        Name:
          type: string
          description: Name of a variation in the default language.
          example: Interdimensional Goggles - Supermagnifier
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
          description: >-
            The type of variation.0=Dropdown | 1=Radiobutton | 2=Swatches |
            3=Textbox | 4=FreeText | 5=MandatoryFreeText
          format: int32
          example: ""
          x-enumNames:
            - Dropdown
            - Radiobutton
            - Swatches
            - Textbox
            - FreeText
            - MandatoryFreeText
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateTranslation
          description: Different terms for a variation in the non-default languages.
      description: "Model Class: CreateItemVariation"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemDescription:
      required:
        - ItemId
        - Name
        - Description
        - ShortDescription
        - SeoPath
        - SeoMetaDescription
        - SeoTitleTag
        - SeoMetaKeywords
        - LanguageIso
        - SalesChannelId
      type: object
      properties:
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1
        Name:
          type: string
          description: >-
            The item name in the given language and sales channel. The name in
            JTL-Wawi and the default language is the default name of the item.
          example: Interdimensional goggles
        Description:
          type: string
          description: The item description for the given language and sales channel.
          example: >-
            These goggles are a must have product. Everyone needs them. Buy
            them.
        ShortDescription:
          type: string
          description: An item's short description in the given language and sales channel.
          example: The best goggles anyone can buy.
        SeoPath:
          type: string
          description: The SEO path in the given language and sales channel.
          example: Interdimensional-goggles
        SeoMetaDescription:
          type: string
          description: The SEO meta description in the given language and sales channel.
          example: A meta description
        SeoTitleTag:
          type: string
          description: The title tag (SEO) in the given language and sales channel.
          example: Interdimensional goggles
        SeoMetaKeywords:
          type: string
          description: Meta keywords in the given language and sales channel.
          example: Interdimensional, Vision, Goggles
        LanguageIso:
          type: string
          description: The ISO code of the language for the description.
          example: DE
        SalesChannelId:
          type: string
          description: >-
            The ID of the sales channel for this description. Only specific
            sales channels are allowed for this operation and are specified in
            the sales channel endpoint(GET).
          example: 1-1-1
      description: "Model Class: ItemDescription"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemDescription:
      required:
        - Name
        - LanguageIso
        - SalesChannelId
      type: object
      properties:
        Name:
          type: string
          description: >-
            The item name in the given language and sales channel. The name in
            JTL-Wawi and the default language is the default name of the item.
          example: Interdimensional goggles
        Description:
          type: string
          description: The item description for the given language and sales channel.
          example: >-
            These goggles are a must have product. Everyone needs them. Buy
            them.
        ShortDescription:
          type: string
          description: An item's short description in the given language and sales channel.
          example: The best goggles anyone can buy.
        SeoPath:
          type: string
          description: The SEO path in the given language and sales channel.
          example: Interdimensional-goggles
        SeoMetaDescription:
          type: string
          description: The SEO meta description in the given language and sales channel.
          example: A meta description
        SeoTitleTag:
          type: string
          description: The title tag (SEO) in the given language and sales channel.
          example: Interdimensional goggles
        SeoMetaKeywords:
          type: string
          description: Meta keywords in the given language and sales channel.
          example: Interdimensional, Vision, Goggles
        LanguageIso:
          type: string
          description: The ISO code of the language for the description.
          example: DE
        SalesChannelId:
          type: string
          description: >-
            The ID of the sales channel for this description. Only specific
            sales channels are allowed for this operation and are specified in
            the sales channel endpoint(GET).
          example: 1-1-1
      description: "Model Class: CreateItemDescription"
    JTL.Wawi.Rest.Contracts.Models.Item.SpecialPrice:
      required:
        - IsActive
        - CustomerGroupId
        - NetPrice
        - SalesChannelId
      type: object
      properties:
        IsActive:
          type: boolean
          description: Indicates whether the special price is active at the moment.
          example: true
        CustomerGroupId:
          type: integer
          description: The ID of the customer group that uses the special price.
          format: int32
          example: 1
        NetPrice:
          type: number
          description: Net price for the special price.
          format: decimal
          example: 126.04
        SalesChannelId:
          type: string
          description: >-
            The sales channel ID for this special price. Only specific sales
            channels are allowed for this operation and are specified in the
            sales channel endpoint(GET).
          example: 1-1-1
      description: "Model Class: SpecialPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemSpecialPrice:
      required:
        - ItemId
        - SpecialPrice
        - IsActive
        - StartDate
        - EndDateActive
        - EndDate
        - TillAmountActive
        - TillAmountInStockSmallerThan
      type: object
      properties:
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1
        SpecialPrice:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.SpecialPrice
          description: >-
            List of all special prices for JTL-Wawi and the sales channel with
            the type online shop and JTL-POS.
        IsActive:
          type: boolean
          description: Indicates if the special price is active.
          example: true
        StartDate:
          type: string
          description: The date when the special price should start.
          format: date-time
          example: "2023-02-01T13:00:00.0000000+00:00"
        EndDateActive:
          type: boolean
          description: >-
            If set, the special price will end on a given date. In this case,
            the field EndDate is required.
          example: false
        EndDate:
          type: string
          description: >-
            This is required if EndDateActive is set. In this case, the special
            price ends on this date.
          format: date-time
          example: "2023-02-01T13:00:00.0000000+00:00"
        TillAmountActive:
          type: boolean
          description: >-
            Indicates that the special price ends when a certain amount is
            reached. The field TillAmountInStockSmallerThan is required in this
            case.
          example: false
        TillAmountInStockSmallerThan:
          type: integer
          description: >-
            If this amount of stock for the item is reached, the special price
            ends. Only applies if TillAmountActive is true.
          format: int32
          example: 15
      description: "Model Class: ItemSpecialPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateSpecialPrice:
      required:
        - IsActive
        - CustomerGroupId
        - NetPrice
        - SalesChannelId
      type: object
      properties:
        IsActive:
          type: boolean
          description: Indicates whether the special price is active at the moment.
          example: true
        CustomerGroupId:
          type: integer
          description: The ID of the customer group that uses the special price.
          format: int32
          example: 1
        NetPrice:
          type: number
          description: Net price for the special price.
          format: double
          example: 126.04
        SalesChannelId:
          type: string
          description: >-
            The sales channel ID for this special price. Only specific sales
            channels are allowed for this operation and are specified in the
            sales channel endpoint(GET).
          example: 1-1-1
      description: "Model Class: UpdateSpecialPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSpecialPrice:
      required:
        - IsActive
      type: object
      properties:
        SpecialPrice:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateSpecialPrice
          description: >-
            List of all special prices for JTL-Wawi and the sales channel with
            the type online shop and JTL-POS.
        IsActive:
          type: boolean
          description: Indicates if the special price is active.
          example: true
        StartDate:
          type: string
          description: The date when the special price should start.
          format: date-time
          example: "2023-02-01T13:00:00.0000000+00:00"
        EndDateActive:
          type: boolean
          description: >-
            If set, the special price will end on a given date. In this case,
            the field EndDate is required.
          example: false
        EndDate:
          type: string
          description: >-
            This is required if EndDateActive is set. In this case, the special
            price ends on this date.
          format: date-time
          example: "2023-02-01T13:00:00.0000000+00:00"
        TillAmountActive:
          type: boolean
          description: >-
            Indicates that the special price ends when a certain amount is
            reached. The field TillAmountInStockSmallerThan is required in this
            case.
          example: false
        TillAmountInStockSmallerThan:
          type: integer
          description: >-
            If this amount of stock for the item is reached, the special price
            ends. Only applies if TillAmountActive is true.
          format: int32
          example: 15
      description: "Model Class: UpdateItemSpecialPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemCustomerPrice:
      required:
        - ItemId
        - CustomerId
        - FromQuantity
        - NetPrice
        - ReduceStandardPriceByPercent
      type: object
      properties:
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1
        CustomerId:
          type: integer
          description: Unique ID to identify a customer.
          format: int32
          example: 1
        FromQuantity:
          type: integer
          description: >-
            The quantity for the scale prices. This should be 0 or empty for the
            default price. If a FromQuantity is given, this price applies to the
            range from this quantity to the next specified FromQuantity. If no
            higher FromQuantity exists, then this price applies to all
            quantities from this point on.
          format: int32
          example: 0
        NetPrice:
          type: number
          description: >-
            The net sales price of the item. If you use NetPrice, you can't use
            ReduceStandardSpBy% too. Only one can be used.
          format: decimal
          example: 12.99
        ReduceStandardPriceByPercent:
          type: number
          description: >-
            Reduces the default sales price by a percentage. If you use
            NetPrice, you can't use ReduceStandardSpBy% too. Only one can be
            used.
          format: decimal
          example: 5
      description: "Model Class: ItemCustomerPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemCustomerPrice:
      required:
        - CustomerId
      type: object
      properties:
        CustomerId:
          type: integer
          description: Unique ID to identify a customer.
          format: int32
          example: 1
        FromQuantity:
          type: integer
          description: >-
            The quantity for the scale prices. This should be 0 or empty for the
            default price. If a FromQuantity is given, this price applies to the
            range from this quantity to the next specified FromQuantity. If no
            higher FromQuantity exists, then this price applies to all
            quantities from this point on.
          format: int32
          example: 0
        NetPrice:
          type: number
          description: >-
            The net sales price of the item. If you use NetPrice, you can't use
            ReduceStandardSpBy% too. Only one can be used.
          format: decimal
          example: 12.99
        ReduceStandardPriceByPercent:
          type: number
          description: >-
            Reduces the default sales price by a percentage. If you use
            NetPrice, you can't use ReduceStandardSpBy% too. Only one can be
            used.
          format: decimal
          example: 5
      description: "Model Class: CreateItemCustomerPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemSalesChannelPrice:
      required:
        - ItemId
        - SalesChannelId
        - CustomerGroupId
        - FromQuantity
        - NetPrice
        - ReduceStandardPriceByPercent
      type: object
      properties:
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1
        SalesChannelId:
          type: string
          description: >-
            The ID of the sales channel for this description. Only specific
            sales channels are allowed for this operation and are specified in
            the sales channel endpoint (GET).
          example: 1-1-1
        CustomerGroupId:
          type: integer
          description: >-
            Unique ID to identify a customer group. If CustomerGroupId is 0, the
            price will be the default value for all customer groups.
          format: int32
          example: 0
        FromQuantity:
          type: integer
          description: >-
            The quantity for the scale prices. This should be 0 or empty for the
            default price. If a FromQuantity is given, this price applies to the
            range from this quantity to the next specified FromQuantity. If no
            higher FromQuantity exists, then this price applies to all
            quantities from this point on.
          format: int32
          example: 0
        NetPrice:
          type: number
          description: >-
            The net sales price of the item. If you use NetPrice, you can't use
            ReduceStandardPriceByPercent too. Only one can be used.
          format: decimal
          example: 126.04
        ReduceStandardPriceByPercent:
          type: number
          description: >-
            Reduce the default sales price by a percentage. If you use NetPrice,
            you can't use ReduceStandardPriceByPercent too. Only one can be
            used.
          format: decimal
          example: 5
      description: "Model Class: ItemSalesChannelPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemSalesChannelPrice:
      required:
        - SalesChannelId
      type: object
      properties:
        SalesChannelId:
          type: string
          description: >-
            The ID of the sales channel for this description. Only specific
            sales channels are allowed for this operation and are specified in
            the sales channel endpoint (GET).
          example: 1-1-1
        CustomerGroupId:
          type: integer
          description: >-
            Unique ID to identify a customer group. If CustomerGroupId is 0, the
            price will be the default value for all customer groups.
          format: int32
          example: 0
        FromQuantity:
          type: integer
          description: >-
            The quantity for the scale prices. This should be 0 or empty for the
            default price. If a FromQuantity is given, this price applies to the
            range from this quantity to the next specified FromQuantity. If no
            higher FromQuantity exists, then this price applies to all
            quantities from this point on.
          format: int32
          example: 0
        NetPrice:
          type: number
          description: >-
            The net sales price of the item. If you use NetPrice, you can't use
            ReduceStandardPriceByPercent too. Only one can be used.
          format: decimal
          example: 126.04
        ReduceStandardPriceByPercent:
          type: number
          description: >-
            Reduce the default sales price by a percentage. If you use NetPrice,
            you can't use ReduceStandardPriceByPercent too. Only one can be
            used.
          format: decimal
          example: 5
      description: "Model Class: CreateItemSalesChannelPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.ItemVariationValue:
      required:
        - Id
        - Name
        - Translations
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a variation value.
          format: int32
          example: 232
        Name:
          type: string
          description: Name of a variation value in the default language.
          example: Supermagnifier
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Translation
          description: Different terms for a variation value in the non-default languages.
      description: "Model Class: ItemVariationValue"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemVariationValue:
      required:
        - Name
      type: object
      properties:
        Name:
          type: string
          description: Name of a variation value in the default language.
          example: Supermagnifier
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateTranslation
          description: Different terms for a variation value in the non-default languages.
      description: "Model Class: CreateItemVariationValue"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Item.Item]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.Item"
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemMinimumPurchaseQuantityForCustomerGroup:
      required:
        - CustomerGroupId
      type: object
      properties:
        CustomerGroupId:
          type: integer
          description: Unique ID to identify a customer group.
          format: int32
          example: 3
        PermissibleOrderQuantity:
          type: number
          description: >-
            The permissible order quantity for the item. Indicates the
            increments in which the item is sold.
          format: decimal
          example: 149.99
        MinimumPurchaseQuantity:
          type: number
          description: The minimum purchase quantity for a customer group.
          format: decimal
          example: 1
        IsActive:
          type: boolean
          description: Indicates if this setting is active or deactivated.
          example: true
      description: "Model Class: CreateItemMinimumPurchaseQuantityForCustomerGroup"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemDangerousGoods:
      type: object
      properties:
        UnNumber:
          type: string
          description: The UN number for the item.
          example: "0070"
        HazardNo:
          type: string
          description: The hazard number for the item.
          example: Class1 explosives
      description: "Model Class: CreateItemDangerousGoods"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemQuantities:
      type: object
      properties:
        MinimumOrderQuantity:
          type: number
          description: The minimum order quantity of the item.
          format: decimal
          example: 0
        MinimumPurchaseQuantityForCustomerGroup:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemMinimumPurchaseQuantityForCustomerGroup
          description: >-
            A collection of minimum order quantities for different customer
            groups.
        PermissibleOrderQuantity:
          type: number
          description: >-
            The permissible order quantity for the item. Indicates the
            increments in which the item is sold.
          format: decimal
          example: 0
      description: "Model Class: CreateItemQuantities"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemWeights:
      type: object
      properties:
        ItemWeigth:
          type: number
          description: The weight of the item in kilograms.
          format: decimal
          example: 5
        ShippingWeight:
          type: number
          description: The shipping weight of the item in kilograms.
          format: decimal
          example: 5.5
      description: "Model Class: CreateItemWeights"
    JTL.Wawi.Rest.Contracts.Models.Common.CreateDimensions:
      type: object
      properties:
        Length:
          type: number
          description: Length
          format: decimal
          example: 10.5
        Width:
          type: number
          description: Width
          format: decimal
          example: 5.8
        Height:
          type: number
          description: Height
          format: decimal
          example: 3
      description: "Model Class: CreateDimensions"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemStorageOption:
      type: object
      properties:
        InventoryManagementActive:
          type: boolean
          description: >-
            Indicates if inventory management for the item is active, meaning
            that the item displays stock quantities.
          example: true
        SplitQuantity:
          type: boolean
          description: Indicates if the item can be split into quantities less than 1.
          example: false
        GlobalMinimumStockLevel:
          type: number
          description: >-
            Defines the minimum quantity that should always be in stock. For
            example, when calculating purchasing orders.
          format: decimal
          example: 15
        Buffer:
          type: integer
          description: >-
            The buffer of the item. Used when selling time-delayed across
            different sales channels, so as not to sell more than is in stock.
          format: int32
          example: 5
        SerialNumberItem:
          type: boolean
          description: Indicates the item's serial number when shipping the sales orders.
          example: false
        SerialNumberTracking:
          type: boolean
          description: >-
            Indicates if serial numbers are to be identified during a goods
            receipt process from a supplier.
          example: false
        SubjectToShelfLifeExpirationDate:
          type: boolean
          description: >-
            Indicates if the item has an expiration date, also known as a best
            before date.
          example: false
        SubjectToBatchItem:
          type: boolean
          description: Indicates whether the item is a batch item or not.
          example: false
        ProcurementTime:
          type: integer
          description: >-
            The procurement time indicates how many days it will take for the
            goods to be ready for shipment if they are currently out of stock.
            Procurement time is determined automatically on the basis of the
            supplier’s delivery time. By default, the delivery time of the
            default supplier is used as the procurement time. If additional
            processing time (in days) has been specified, this is added to the
            procurement time.
          format: int32
          example: 3
        DetermineProcurementTimeAutomatically:
          type: boolean
          description: >-
            If this option is set, the procurement time will be calculated from
            the default supplier's shipment time.
          example: false
        AdditionalHandlingTime:
          type: integer
          description: >-
            Indicates the additional processing time in days required to
            process. It is always added to the delivery time.
          format: int32
          example: 3
      description: "Model Class: CreateItemStorageOption"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemPrice:
      type: object
      properties:
        SalesPriceNet:
          type: number
          description: The net sales price of the item.
          format: decimal
          example: 125.21
        SuggestedRetailPrice:
          type: number
          description: The suggested retail price for the item.
          format: decimal
          example: 159.99
        PurchasePriceNet:
          type: number
          description: The purchase price of the item.
          format: decimal
          example: 99.73
        EbayPrice:
          type: number
          description: Default price in new listing templates.
          format: decimal
          example: 149.99
        AmazonPrice:
          type: number
          description: Brutto price for new Amazon listings.
          format: decimal
          example: 149.99
      description: "Model Class: CreateItemPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemComponent:
      required:
        - ItemId
        - Quantity
      type: object
      properties:
        ItemId:
          type: integer
          description: Item ID of the item's component.
          format: int32
          example: 12345
        Quantity:
          type: number
          description: Quantity of the component in the bill of material.
          format: double
          example: 2
        SortNumber:
          type: integer
          description: >-
            Defines the order of the components when shown in lists and sales
            channels.
          format: int32
          example: 1
      description: "Model Class: CreateItemComponent"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItemIdentifiers:
      type: object
      properties:
        Gtin:
          type: string
          description: GTIN
          example: "8896982295860"
        ManufacturerNumber:
          type: string
          description: Manufacturer number.
          example: "75"
        ISBN:
          type: string
          description: ISBN
          example: 978-3-86680-192-9
        UPC:
          type: string
          description: UPC
          example: "889698229586"
        AmazonFnsku:
          type: string
          description: An item's Amazon FNSKU.
          example: FN813S88A43
        Asins:
          type: array
          items:
            type: string
          description: A list of the item's ASINs.
          example: B071GVGFQF
        OwnIdentifier:
          type: string
          description: A custom identifier for the item.
          example: P446853
      description: "Model Class: CreateItemIdentifiers"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateCategoryReference:
      required:
        - CategoryId
      type: object
      properties:
        CategoryId:
          type: integer
          description: Unique ID to identify a category.
          format: int32
          example: 33
      description: "Model Class: CreateCategoryReference"
    JTL.Wawi.Rest.Contracts.Models.Item.CreateItem:
      required:
        - Categories
        - Name
      type: object
      properties:
        SKU:
          type: string
          description: >-
            Item SKU. If no SKU is given when posting an item, the SKU will be
            generated automatically.
          example: ART2394871
        ManufacturerId:
          type: integer
          description: The manufacturer ID.
          format: int32
          example: 1
        ResponsiblePersonId:
          type: integer
          description: The Responsible person ID.
          format: int32
          example: 1
        Categories:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateCategoryReference
          description: List of all the categories for the item.
        Name:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: Name of the item in the default language in JTL-Wawi.
          example: Interdimensional goggles
        Description:
          type: string
          description: Full textdescription for the item
          example: >-
            These goggles are a must have product. Everyone needs them. Buy
            them.
        ShortDescription:
          type: string
          description: Short description of the item in the default language in JTL-Wawi.
          example: The best goggles anyone can buy
        Identifiers:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemIdentifiers
        Components:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemComponent
          description: Components for the item if the item is a bill of material.
        ItemPriceData:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemPrice
        ActiveSalesChannels:
          type: string
          description: >-
            The list of active sales channels of the item. Only online shops and
            JTL-POS are permitted. Sales channels that are removed from this
            list will be deactivated for this item.
          example: ""
        SortNumber:
          type: integer
          description: >-
            The sort number of the item, used in some sales channels for
            ordering items.
          format: int32
          example: 0
        Annotation:
          type: string
          description: The item annotation.
          example: Some additional internal info about the item
        ReleasedOnDate:
          type: string
          description: The date when the item was put up for sale.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        StorageOptions:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemStorageOption
        CountryOfOrigin:
          type: string
          description: The country of origin of the item.
          example: DE
        ConditionId:
          type: integer
          description: Condition ID of the item. Default if nothing is specified.
          format: int32
          example: 1
        ShippingClassId:
          type: integer
          description: The shipping class ID.
          format: int32
          example: 4
        ProductGroupId:
          type: integer
          description: The ID of the item group.
          format: int32
          example: 2
        TaxClassId:
          type: integer
          description: The ID of the tax class.
          format: int32
          example: 3
        Dimensions:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateDimensions
        Weights:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemWeights
        AllowNegativeStock:
          type: boolean
          description: >-
            This option allows you to sell a higher quantity of the item than is
            actually in stock.
          example: false
        Quantities:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemQuantities
        DangerousGoods:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.CreateItemDangerousGoods
        Taric:
          type: string
          description: Taric code of the item.
          example: "61071100"
        SearchTerms:
          type: string
          description: Search terms for the item.
          example: goggles, magnification, lenses
        PriceListActive:
          type: boolean
          description: Indicates if the item is in the price list.
          example: false
        IgnoreDiscounts:
          type: boolean
          description: Indicates if discounts are to be disregarded.
          example: false
        AvailabilityId:
          type: integer
          description: Availability ID of the item.
          format: int32
          example: 2
      description: "Model Class: CreateItem"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSalesChannels:
      type: object
      properties:
        ApplyToAllChildItems:
          type: boolean
          description: >-
            Specifies if sales channel activation should be applied to all child
            items.
          example: true
        Items:
          type: array
          items:
            type: integer
            format: int32
          description: The IDs of the items for which sales channels should be updated.
          example: "1"
        ActivateSalesChannels:
          type: array
          items:
            type: integer
            format: int32
          description: >-
            The IDs of the sales channels that should be activated. Only
            specific sales channels are allowed for this operation and are
            specified in the sales channel endpoint (GET).
          example: "1"
        DeactivateSalesChannels:
          type: array
          items:
            type: integer
            format: int32
          description: >-
            The ID of the sales channel for this description. Only specific
            sales channels are allowed for this operation and are specified in
            the sales channel endpoint (GET).
          example: "1"
      description: "Model Class: UpdateItemSalesChannels"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSalesChannelsResponse:
      required:
        - NotActivatedForJtlPosItems
        - NotActivatedForScxDueToPartialItems
        - NotActivatedForScxForMissingChildItems
        - NotActivatedBecauseInactiveItems
      type: object
      properties:
        NotActivatedForJtlPosItems:
          type: array
          description: >-
            The IDs of the items for which JTL-POS sales channels could not be
            activated.
        NotActivatedForScxDueToPartialItems:
          type: array
          description: >-
            The IDs of the items for which sales channels cuold not be activated
            because they are partial items.
        NotActivatedForScxForMissingChildItems:
          type: array
          description: >-
            The IDs of the items for which sales channels cuold not be activated
            because they are parent items without children.
        NotActivatedBecauseInactiveItems:
          type: array
          description: >-
            The IDs of the items for which sales channels cuold not be activated
            because they are inactive items.
      description: "Model Class: UpdateItemSalesChannelsResponse"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemImage:
      required:
        - SalesChannelId
      type: object
      properties:
        ImageData:
          type: string
          description: Base64 encoded data of an image.
          format: byte
        Filename:
          type: string
          description: Name of the file.
          example: itemImage.jpg
        SalesChannelId:
          type: string
          description: >-
            The sales channel ID for an image. Only specific sales channels are
            allowed for this operation and are specified in the sales channel
            endpoint(GET).
          example: 1-1-1
        SortNumber:
          type: integer
          description: >-
            The sort number for arranging images in sales channels. Every image
            needs to have an unique sort number per sales channel and item.
          format: int32
          example: 3
      description: "Model Class: UpdateItemImage"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateSupplierItemScalePrice:
      required:
        - FromQuantity
      type: object
      properties:
        FromQuantity:
          type: integer
          description: >-
            The quantity where this scale price starts. This scale price ends at
            the next highest quantity. If there is no scale price with a higher
            quantity, then this price is set for all quantities from this point
            on.
          format: int32
          example: 0
        PurchasePriceNet:
          type: number
          description: >-
            Net purchase price of the supplier for the scale price starting from
            this given quantity to the next scale price with a higher quantity.
            If you use PurchasePriceNet, you can't use ReduceStandardSpBy% as
            well. Only one is allowed.
          format: decimal
          example: 94.21
        ReduceStandardPriceByPercent:
          type: number
          description: >-
            Reduces the default purchase price by a percentage. If you use
            PurchasePriceNet, you can't use ReduceStandardPriceByPercent as
            well. Only one is allowed.
          format: decimal
          example: 5
      description: "Model Class: UpdateSupplierItemScalePrice"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSupplier:
      type: object
      properties:
        Sku:
          type: string
          description: Item SKU from the supplier.
          example: ART2394871
        ItemName:
          type: string
          description: Item name from the supplier.
          example: Interdimensional Goggles
        IsStandard:
          type: boolean
          description: Defines the main supplier for the given item.
          example: false
        PurchasePriceNet:
          type: number
          description: Net purchase price from the supplier.
          format: decimal
          example: 97.23
        TaxRate:
          type: number
          description: Percent of VAT tax rate.
          format: decimal
          example: 19
        MinimumPurchaseQuantity:
          type: number
          description: The minimum purchase quantity from the supplier.
          format: decimal
          example: 1
        PermissibleOrderQuantity:
          type: number
          description: >-
            The permissible order quantity for the item from the supplier. The
            increments in which the item can be sold.
          format: decimal
          example: 2
        DeliveryTime:
          type: integer
          description: Delivery time in days.
          format: int32
          example: 2
        UseSupplierDeliveryTime:
          type: boolean
          description: >-
            If set to true, Wawi will use the delivery time provided by the
            supplier and not by the item information. DeliveryTime will then be
            ignored.
          example: false
        Stocklevel:
          type: number
          description: Stock level of the item at the supplier.
          format: decimal
          example: 34
        IsDropshipping:
          type: boolean
          description: Activates drop shipping for a given item and supplier.
          example: false
        MergeStockLevel:
          type: boolean
          description: Forces Wawi to add the supplier's stock to your own stock.
          example: false
        Comment:
          type: string
          description: Comment for the supplier.
          example: A custom comment
        PackagingUnit:
          type: string
          description: Name of the packaging unit.
          example: box
        AmountPackagingUnit:
          type: number
          description: Quantity in a packaging unit.
          format: decimal
          example: 1
        ScalePrices:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Item.UpdateSupplierItemScalePrice
          description: Scale prices from this supplier for the item.
      description: "Model Class: UpdateItemSupplier"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemVariation:
      type: object
      properties:
        Name:
          type: string
          description: Name of a variation in the default language.
          example: Interdimensional Goggles - Supermagnifier
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateTranslation
          description: Different terms for a variation in the non-default languages.
      description: "Model Class: UpdateItemVariation"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemCustomerPrice:
      type: object
      properties:
        NetPrice:
          type: number
          description: >-
            The net sales price of the item. If you use NetPrice, you can't use
            ReduceStandardSpBy% too. Only one can be used.
          format: decimal
          example: 12.99
        ReduceStandardPriceByPercent:
          type: number
          description: >-
            Reduces the default sales price by a percentage. If you use
            NetPrice, you can't use ReduceStandardSpBy% too. Only one can be
            used.
          format: decimal
          example: 5
      description: "Model Class: UpdateItemCustomerPrice"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemDescription:
      type: object
      properties:
        Name:
          type: string
          description: >-
            The item name in the given language and sales channel. The name in
            JTL-Wawi and the default language is the default name of the item.
          example: Interdimensional goggles
        Description:
          type: string
          description: The item description for the given language and sales channel.
          example: >-
            These goggles are a must have product. Everyone needs them. Buy
            them.
        ShortDescription:
          type: string
          description: An item's short description in the given language and sales channel.
          example: The best goggles anyone can buy.
        SeoPath:
          type: string
          description: The SEO path in the given language and sales channel.
          example: Interdimensional-goggles
        SeoMetaDescription:
          type: string
          description: The SEO meta description in the given language and sales channel.
          example: A meta description
        SeoTitleTag:
          type: string
          description: The title tag (SEO) in the given language and sales channel.
          example: Interdimensional goggles
        SeoMetaKeywords:
          type: string
          description: Meta keywords in the given language and sales channel.
          example: Interdimensional, Vision, Goggles
      description: "Model Class: UpdateItemDescription"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemVariationValue:
      type: object
      properties:
        Name:
          type: string
          description: Name of a variation value in the default language.
          example: Supermagnifier
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateTranslation
          description: Different terms for a variation value in the non-default languages.
      description: "Model Class: UpdateItemVariationValue"
    JTL.Wawi.Rest.Contracts.Models.Item.UpdateItemSalesChannelPrice:
      type: object
      properties:
        NetPrice:
          type: number
          description: >-
            The net sales price of the item. If you use NetPrice, you can't use
            ReduceStandardPriceByPercent too. Only one can be used.
          format: decimal
          example: 126.04
        ReduceStandardPriceByPercent:
          type: number
          description: >-
            Reduce the default sales price by a percentage. If you use NetPrice,
            you can't use ReduceStandardPriceByPercent too. Only one can be
            used.
          format: decimal
          example: 5
      description: "Model Class: UpdateItemSalesChannelPrice"
    JTL.Wawi.Rest.Contracts.Models.Manufacturer.Manufacturer:
      required:
        - Id
        - Name
        - Description
        - Homepage
        - SortNumber
        - MetaTitle
        - MetaKeywords
        - MetaDescription
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a manufacturer.
          format: int32
          example: 15
        Name:
          type: string
          description: Name of the manufacturer.
          example: Awesome Manufacturer
        Description:
          type: string
          description: Manufacturer description.
          example: Some info about the manufacturer
        Homepage:
          type: string
          description: Homepage of the manufacturer.
          example: https://awsome-manufacturer.com
        SortNumber:
          type: integer
          description: Sorting number of the manufacturer.
          format: int32
          example: 1
        MetaTitle:
          type: string
          description: Meta title of the manufacturer.
          example: Awesome Manufacturer
        MetaKeywords:
          type: string
          description: Meta keywords of the manufacturer.
          example: Products, fast delivery
        MetaDescription:
          type: string
          description: Meta description of the manufacturer.
          example: Awesome Manufacturer
      description: "Model Class: Manufacturer"
    JTL.Wawi.Rest.Contracts.Models.NumberRanges.NumberRangeItem:
      required:
        - Identifier
        - Name
        - Description
        - Prefix
        - CurrentNumber
        - Suffix
        - MaxLength
        - ExampleNumber
        - IsDeletable
      type: object
      properties:
        Identifier:
          type: integer
          description: The Unique Identifier of a Sync
          format: int32
          example: 3f54a9ef-f644-4bbb-a6cd-1f57fcae2c85
        Name:
          type: string
          description: The Name of the Number Range
          example: Rechnung
        Description:
          type: string
          description: The Name of the Number Range
          example: Hierbei handelt es sich um den Nummernkreis für Rechnungen
        Prefix:
          type: string
          description: The Number Prefix for the NumberRange
          example: RE<j><M>
        CurrentNumber:
          type: integer
          description: The Current Number of the NumberRange
          format: int32
          example: 70
        Suffix:
          type: string
          description: The Number Suffix for the NumberRange
          example: "-1"
        MaxLength:
          type: integer
          description: The Max Length of an Number Range
          format: int32
          example: 100
        CompanyId:
          type: integer
          description: >-
            The internal ID of the company associated with the customer. This is
            configured in the company and email settings in JTL-Wawi
          format: int32
          example: 1
        ExampleNumber:
          type: string
          description: The Example of a Number
          example: RE2025470-1
        IsDeletable:
          type: boolean
          description: Can the Number Range be deleted
          example: false
      description: A Individuel NumberRange
    JTL.Wawi.Rest.Contracts.Models.NumberRanges.PutNumberRangeItem:
      type: object
      properties:
        Prefix:
          type: string
          description: The Number Prefix for the NumberRange
          example: RE<j><M>
        CurrentNumber:
          type: integer
          description: The Current Number of the NumberRange
          format: int32
          example: 70
        Suffix:
          type: string
          description: The Number Suffix for the NumberRange
          example: "-1"
        CompanyId:
          type: integer
          description: >-
            The internal ID of the company associated with the customer. This is
            configured in the company and email settings in JTL-Wawi
          format: int32
          example: 1
      description: A Individuel NumberRange
    JTL.Wawi.Rest.Contracts.Models.NumberRanges.NumberRangeCurrentNumberItem:
      required:
        - NextNumber
        - IsPreview
      type: object
      properties:
        NextNumber:
          type: string
          description: The Next Number of the NumberRange
          example: RE2025470-1
        IsPreview:
          type: boolean
          description: Can the Number is only a Preview Number
          example: false
      description: The CurrentValue of Individuel NumberRange
    JTL.Wawi.Rest.Contracts.Models.NumberRanges.CreateNumberRangeItem:
      required:
        - CompanyId
      type: object
      properties:
        Prefix:
          type: string
          description: The Number Prefix for the NumberRange
          example: RE<j><M>
        CurrentNumber:
          type: integer
          description: The Current Number of the NumberRange
          format: int32
          example: 70
        Suffix:
          type: string
          description: The Number Suffix for the NumberRange
          example: "-1"
        CompanyId:
          type: integer
          description: >-
            The internal ID of the company associated with the customer. This is
            configured in the company and email settings in JTL-Wawi
          format: int32
          example: 1
      description: A Individuel NumberRange
    JTL.Wawi.Rest.Contracts.Models.OnHoldReason.OnHoldReason:
      required:
        - Id
        - Name
        - IsMergeable
        - ItemsNotUsedForPurchaseList
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify an on hold reason.
          format: int32
          example: 5
        Name:
          type: string
          description: Name of the on hold reason.
          example: needs further review
        IsMergeable:
          type: boolean
          description: >-
            Indicates if orders with an on hold reason are allowed to be merged
            with other orders from the same customer.
          example: false
        ItemsNotUsedForPurchaseList:
          type: boolean
          description: >-
            If this option is enabled, then the items in this order are not used
            for calculating the purchase list.
          example: false
      description: "Model Class: OnHoldReason"
    JTL.Wawi.Rest.Contracts.Models.PaymentMethod.PaymentMethod:
      required:
        - Id
        - Name
        - IsStandard
        - IsActive
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a payment method.
          format: int32
          example: 19
        Name:
          type: string
          description: Name of the payment method.
          example: PayPal
        IsStandard:
          type: boolean
          description: >-
            Indicates if the method is the default payment method. There is only
            one default method and if a new one is enabled, the previous method
            is no longer the default one.
          example: false
        IsActive:
          type: boolean
          description: Indicates if the payment method is still active.
          example: true
      description: "Model Class: PaymentMethod"
    JTL.Wawi.Rest.Contracts.Models.ProductGroup.ProductGroup:
      required:
        - Id
        - Name
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify an item group.
          format: int32
          example: 1
        Name:
          type: string
          description: The name of the item group.
          example: Standard items
      description: "Model Class: ProductGroup"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Property.Property]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.Property
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Property.Property:
      required:
        - Id
        - Name
        - Translations
        - PropertyGroups
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a property.
          format: int32
          example: 51
        Name:
          type: string
          description: Name of the property in the standard language.
          example: Nightvision
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Translation
          description: Different terms for the property in the non-default languages.
        PropertyGroups:
          type: array
          items:
            type: integer
            format: int32
          description: IDs of property groups.
          example: ""
      description: "Model Class: Property"
    JTL.Wawi.Rest.Contracts.Models.Property.CreateProperty:
      required:
        - Name
      type: object
      properties:
        Name:
          type: string
          description: Name of the property in the standard language.
          example: Nightvision
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateTranslation
          description: Different terms for the property in the non-default languages.
        PropertyGroups:
          type: array
          items:
            type: integer
            format: int32
          description: IDs of property groups.
          example: ""
      description: "Model Class: CreateProperty"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Property.PropertyGroup]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Property.PropertyGroup
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Property.PropertyGroup:
      required:
        - Id
        - Name
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a property group.
          format: int32
          example: 33
        Name:
          type: string
          description: Name of the property group.
          example: features
      description: "Model Class: PropertyGroup"
    JTL.Wawi.Rest.Contracts.Models.Property.CreatePropertyGroup:
      required:
        - Name
      type: object
      properties:
        Name:
          type: string
          description: Name of the property group.
          example: features
      description: "Model Class: CreatePropertyGroup"
    JTL.Wawi.Rest.Contracts.Models.Property.PropertyValue:
      required:
        - Id
        - Name
        - Description
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify the property value.
          format: int32
          example: 20
        Name:
          type: string
          description: Name of the property value in the default language.
          example: "yes"
        Description:
          type: string
          description: Description of the property value in the default language.
          example: A description for the property value
      description: "Model Class: PropertyValue"
    JTL.Wawi.Rest.Contracts.Models.Property.CreatePropertyValue:
      required:
        - Name
      type: object
      properties:
        Name:
          type: string
          description: Name of the property value in the default language.
          example: "yes"
        Description:
          type: string
          description: Description of the property value in the default language.
          example: A description for the property value
      description: "Model Class: CreatePropertyValue"
    JTL.Wawi.Rest.Contracts.Models.Property.PropertyValueDescription:
      required:
        - PropertyValueId
        - Name
        - Description
        - SeoPath
        - SeoMetaDescription
        - SeoTitleTag
        - SeoMetaKeywords
        - LanguageIso
      type: object
      properties:
        PropertyValueId:
          type: integer
          description: Unique ID to identify a property value.
          format: int32
          example: 20
        Name:
          type: string
          description: The property value name in the given language.
          example: "yes"
        Description:
          type: string
          description: The property value description in the given language.
          example: A description for the property value
        SeoPath:
          type: string
          description: The SEO path in the given language.
          example: SEO path
        SeoMetaDescription:
          type: string
          description: The SEO metadescription in the given language.
          example: A description for the property value
        SeoTitleTag:
          type: string
          description: The title tag (SEO) in the given language.
          example: "yes"
        SeoMetaKeywords:
          type: string
          description: The meta keywords in the given language.
          example: Your metakeywords
        LanguageIso:
          type: string
          description: The ISO code of the language of the description.
          example: DE
      description: "Model Class: PropertyValueDescription"
    JTL.Wawi.Rest.Contracts.Models.Property.CreatePropertyValueDescription:
      required:
        - PropertyValueId
        - Name
        - LanguageIso
      type: object
      properties:
        PropertyValueId:
          type: integer
          description: Unique ID to identify a property value.
          format: int32
          example: 20
        Name:
          type: string
          description: The property value name in the given language.
          example: "yes"
        Description:
          type: string
          description: The property value description in the given language.
          example: A description for the property value
        SeoPath:
          type: string
          description: The SEO path in the given language.
          example: SEO path
        SeoMetaDescription:
          type: string
          description: The SEO metadescription in the given language.
          example: A description for the property value
        SeoTitleTag:
          type: string
          description: The title tag (SEO) in the given language.
          example: "yes"
        SeoMetaKeywords:
          type: string
          description: The meta keywords in the given language.
          example: Your metakeywords
        LanguageIso:
          type: string
          description: The ISO code of the language of the description.
          example: DE
      description: "Model Class: CreatePropertyValueDescription"
    JTL.Wawi.Rest.Contracts.Models.Property.UpdatePropertyValue:
      type: object
      properties:
        Name:
          type: string
          description: Name of the property value in the default language.
          example: "yes"
        Description:
          type: string
          description: Description of the property value in the default language.
          example: A description for the property value
      description: "Model Class: UpdatePropertyValue"
    JTL.Wawi.Rest.Contracts.Models.Property.UpdatePropertyValueDescription:
      type: object
      properties:
        Name:
          type: string
          description: The property value name in the given language.
          example: "yes"
        Description:
          type: string
          description: The property value description in the given language.
          example: A description for the property value
        SeoPath:
          type: string
          description: The SEO path in the given language.
          example: SEO path
        SeoMetaDescription:
          type: string
          description: The SEO metadescription in the given language.
          example: A description for the property value
        SeoTitleTag:
          type: string
          description: The title tag (SEO) in the given language.
          example: "yes"
        SeoMetaKeywords:
          type: string
          description: The meta keywords in the given language.
          example: Your metakeywords
      description: "Model Class: UpdatePropertyValueDescription"
    JTL.Wawi.Rest.Contracts.Models.Refund.RefundCancellationReason:
      required:
        - Id
        - Name
        - IsCommentRequired
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a cancellation reason
          format: int32
          example: 5
        Name:
          type: string
          description: Name of the cancellation reason
          example: Change of mind
        IsCommentRequired:
          type: boolean
          description: >-
            Indicates if a comment is required when this cancellation reason is
            used
          example: false
      description: "Model Class: RefundCancellationReason"
    JTL.Wawi.Rest.Contracts.Models.ResponsiblePerson.ResponsiblePerson:
      required:
        - Id
        - Number
        - Description
        - Address
        - Created
        - LastChanged
        - IsActive
        - LanguageKey
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a Contact.
          format: int32
          example: 15
        Number:
          type: string
          description: Unique Number of the ResponsiblePerson.
          example: AB31313
        Description:
          type: string
          description: Manufacturer description.
          example: Some info about the ResponsiblePerson
        Address:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        Created:
          type: string
          description: The DateTime of Creation.
          format: date-time
          example: 1985-01-01T00-00-00
        LastChanged:
          type: string
          description: The DateTime of the Lastchange.
          format: date-time
          example: 1985-01-01T00-00-00
        IsActive:
          type: boolean
          description: The ResponsiblePerson is active
          example: true
        LanguageKey:
          type: integer
          description: The Default Language of the ResponsiblePerson
          format: int32
          example: 4
      description: "Model Class: ResponsiblePerson"
    JTL.Wawi.Rest.Contracts.Models.Return.Return:
      required:
        - Id
        - Number
        - ReturnDate
        - CustomerId
        - ExternalNumber
        - Origin
        - CompanyId
        - SalesOrderId
        - StateId
        - WarehouseId
        - ExternalComment
        - InternalComment
        - Contact
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a return.
          format: int32
          example: 123
        Number:
          type: string
          description: The number of the return.
          example: A1004465
        ReturnDate:
          type: string
          description: The date when the return was created.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        CustomerId:
          type: integer
          description: The customer ID.
          format: int32
          example: 1005
        ExternalNumber:
          type: string
          description: >-
            An arbitrary external reference number for identifying the return,
            provided only during creation and cannot be changed afterward.
          example: EX-12345
        Origin:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
          type: integer
          description: >-
            Indicates the origin of the return, specifying where or how the
            return was initiated.0=None | 1=Email | 2=Manual | 3=Phone | 4=Fax |
            5=FFN | 6=SCX | 7=RestAPI
          format: int32
          example: 1
          x-enumNames:
            - None
            - Email
            - Manual
            - Phone
            - Fax
            - FFN
            - SCX
            - RestAPI
        CompanyId:
          type: integer
          description: The company of the corresponding sales order.
          format: int32
          example: 1
        SalesOrderId:
          type: integer
          description: >-
            The id of the sales order if the return has exactly on corresponding
            sales order.
          format: int32
          example: 1643
        StateId:
          type: integer
          description: The id of the return state.
          format: int32
          example: 1005
        WarehouseId:
          type: integer
          description: Id of the Warehouse.
          format: int32
          example: 1
        ExternalComment:
          type: string
          description: The external comment of the sales order.
          example: a replacement is needed
        InternalComment:
          type: string
          description: The internal comment of the sales order.
          example: handle with care
        Contact:
          type: string
          description: The contact of the return.
          example: Mr. Robinson
      description: "Model Class: Return"
    JTL.Wawi.Rest.Contracts.Models.Return.ReturnPackage:
      required:
        - Id
        - ReturnId
        - TrackingID
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a return package.
          format: int32
          example: 1123
        ReturnId:
          type: integer
          description: Unique ID to identify a return.
          format: int32
          example: 12
        TrackingID:
          type: string
          description: The tracking Id of the package.
          example: JJD0099999999
        ShippingMethodId:
          type: integer
          description: The shipping method.
          format: int32
          example: 3
        ShippingMethodCustom:
          type: string
          description: >-
            The custom shipping method name used for the return. This value may
            only be set if ShippingMethodId is not provided.
          example: DHL
      description: "Model Class: ReturnPackage"
    JTL.Wawi.Rest.Contracts.Models.Return.ReturnLineItem:
      required:
        - Id
        - ReturnId
        - StateId
        - ItemId
        - Name
        - SKU
        - Quantity
        - ReturnReasonId
        - ConditionId
        - ConditionComment
        - SalesOrderId
        - SalesOrderLineItemId
        - DeliveryNoteLineItemId
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a return line item.
          format: int32
          example: 1123
        ReturnId:
          type: integer
          description: Unique ID to identify a return.
          format: int32
          example: 12
        StateId:
          type: integer
          description: The id of the return line item state.
          format: int32
          example: 1005
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1000
        Name:
          type: string
          description: Name of the position.
          example: Awesome Binoculars
        SKU:
          type: string
          description: SKU of the line item.
          example: ART2394871
        Quantity:
          type: number
          description: The quantity of the line item.
          format: decimal
          example: 2
        ReturnReasonId:
          type: integer
          description: Unique ID to identify a return reason.
          format: int32
          example: 13
        ReturnReasonComment:
          type: string
          description: The comment corresponding to the return line item reason.
          example: too small
        ConditionId:
          type: integer
          description: Unique ID to identify a condition.
          format: int32
          example: 13
        ConditionComment:
          type: string
          description: The comment corresponding to the return line item condition.
          example: broken
        SalesOrderId:
          type: integer
          description: Unique ID to identify a sales order file.
          format: int32
          example: 123
        SalesOrderLineItemId:
          type: integer
          description: Unique ID to identify a sales order item.
          format: int32
          example: 12
        DeliveryNoteLineItemId:
          type: integer
          description: Unique ID to identify a delivery note item.
          format: int32
          example: 12
      description: "Model Class: ReturnLineItem"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Return.Return]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.Return"
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Return.CreateReturnPackage:
      required:
        - TrackingID
      type: object
      properties:
        TrackingID:
          type: string
          description: The tracking Id of the package.
          example: JJD0099999999
        ShippingMethodId:
          type: integer
          description: The shipping method.
          format: int32
          example: 3
        ShippingMethodCustom:
          type: string
          description: >-
            The custom shipping method name used for the return. This value may
            only be set if ShippingMethodId is not provided.
          example: DHL
      description: "Model Class: CreateReturnPackage"
    JTL.Wawi.Rest.Contracts.Models.Return.CreateReturnLineItem:
      required:
        - Quantity
        - ReturnReasonId
      type: object
      properties:
        Quantity:
          maximum: 2147483647
          type: number
          description: The quantity of the line item.
          format: double
          example: 2
        ReturnReasonId:
          type: integer
          description: Unique ID to identify a return reason.
          format: int32
          example: 13
        ReturnReasonComment:
          type: string
          description: The comment corresponding to the return line item reason.
          example: too small
        SalesOrderLineItemId:
          type: integer
          description: Unique ID to identify a sales order item.
          format: int32
          example: 12
        DeliveryNoteLineItemId:
          type: integer
          description: Unique ID to identify a delivery note item.
          format: int32
          example: 12
      description: "Model Class: CreateReturnLineItem"
    JTL.Wawi.Rest.Contracts.Models.Return.CreateReturn:
      required:
        - CompanyId
        - SalesOrderId
        - WarehouseId
        - Items
      type: object
      properties:
        ReturnDate:
          type: string
          description: The date when the return was created.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        ExternalNumber:
          type: string
          description: >-
            An arbitrary external reference number for identifying the return,
            provided only during creation and cannot be changed afterward.
          example: EX-12345
        CompanyId:
          type: integer
          description: The company of the corresponding sales order.
          format: int32
          example: 1
        SalesOrderId:
          type: integer
          description: >-
            The id of the sales order if the return has exactly on corresponding
            sales order.
          format: int32
          example: 1643
        WarehouseId:
          type: integer
          description: Id of the Warehouse.
          format: int32
          example: 1
        ExternalComment:
          type: string
          description: The external comment of the sales order.
          example: a replacement is needed
        InternalComment:
          type: string
          description: The internal comment of the sales order.
          example: handle with care
        Contact:
          type: string
          description: The contact of the return.
          example: Mr. Robinson
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.CreateReturnLineItem
          description: List of items included in the return.
        Packages:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Return.CreateReturnPackage
          description: List of packages included in the return.
      description: "Model Class: CreateReturn"
    JTL.Wawi.Rest.Contracts.Models.ReturnReason.ReturnReason:
      required:
        - Id
        - Translations
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify an return reason.
          format: int32
          example: 5
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Translation
          description: The list of the condition names.
      description: "Model Class: ReturnReason"
    JTL.Wawi.Rest.Contracts.Models.ReturnState.ReturnState:
      required:
        - Id
        - IsActive
        - Translations
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify an return state.
          format: int32
          example: 5
        IsActive:
          type: boolean
          description: Indicates if the state is active.
          example: true
        Translations:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Translation
          description: The list of the return state.
      description: "Model Class: ReturnState"
    JTL.Wawi.Rest.Contracts.Models.SalesChannel.ItemCapabilities:
      required:
        - Descriptions
        - OnlineShopActivation
        - Prices
        - SpecialPrices
        - Images
      type: object
      properties:
        Descriptions:
          type: boolean
          description: >-
            Indicates if the category descriptions for this sales channel can be
            created or changed via REST-API.
          example: true
        OnlineShopActivation:
          type: boolean
          description: >-
            Indicates if the category for this sales channel can be activated.
            Categories can only be activated for online shops or JTL-POS.
          example: false
        Prices:
          type: boolean
          description: Indicates if the prices for this sales channel can be manipulated.
          example: true
        SpecialPrices:
          type: boolean
          description: Indicates if the prices for this sales channel can be manipulated.
          example: true
        Images:
          type: boolean
          description: Indicates if the images for this sales channel can be manipulated.
          example: true
      description: "Model Class: ItemCapabilities"
    JTL.Wawi.Rest.Contracts.Models.SalesChannel.CategoryCapabilities:
      required:
        - Descriptions
        - OnlineShopActivation
      type: object
      properties:
        Descriptions:
          type: boolean
          description: >-
            Indicates if the category descriptions for this sales channel can be
            created or changed via REST-API.
          example: true
        OnlineShopActivation:
          type: boolean
          description: >-
            Indicates if the category for this sales channel can be activated.
            Categories can only be activated for online shops or JTL-POS.
          example: true
      description: "Model Class: CategoryCapabilities"
    JTL.Wawi.Rest.Contracts.Models.SalesChannel.SalesChannel:
      required:
        - Id
        - Type
        - Name
        - ItemCapabilities
        - CategoryCapabilities
        - DocumentationUrl
      type: object
      properties:
        Id:
          type: string
          description: Unique ID to identify a sales channel.
          example: 1-1-1
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
          type: integer
          description: >-
            Type of the sales channel.0=JTL_Wawi | 1=OnlineShop | 2=JTL_POS |
            3=Ebay | 4=Unicorn | 5=SCX | 6=JTL_Fulfillment_Network | 7=REST_API
            | 8=XML_Import | 9=Amazon | 10=JTL_BI
          format: int32
          example: 0
          x-enumNames:
            - JTL_Wawi
            - OnlineShop
            - JTL_POS
            - Ebay
            - Unicorn
            - SCX
            - JTL_Fulfillment_Network
            - REST_API
            - XML_Import
            - Amazon
            - JTL_BI
        Name:
          type: string
          description: Name of the sales channel, e.g. eBay.de, amazon.uk, myshop.de.
          example: JTL-Wawi
        ItemCapabilities:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesChannel.ItemCapabilities
        CategoryCapabilities:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesChannel.CategoryCapabilities
        DocumentationUrl:
          type: string
          description: >-
            URL for the documentation of the available endpoints for this
            specific sales channel.
          example: TODO
      description: "Model Class: SalesChannel"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.DepartureCountry:
      required:
        - CountryISO
        - State
        - CurrencyIso
        - CurrencyFactor
      type: object
      properties:
        CountryISO:
          type: string
          description: ISO code of the departure country.
          example: DE
        State:
          type: string
          description: Name of the state in the departure country.
          example: Berlin
        CurrencyIso:
          type: string
          description: ISO code of the currency of the departure country.
          example: EUR
        CurrencyFactor:
          type: number
          description: The currency factor of the departure country.
          format: decimal
          example: 1
      description: "Model Class: DepartureCountry"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderCancellationDetails:
      required:
        - CancellationReasonId
        - CancellationComment
        - Date
      type: object
      properties:
        CancellationReasonId:
          type: integer
          description: The id of the reason for cancelling the sales order.
          format: int32
          example: -4
        CancellationComment:
          type: string
          description: A comment that adds further information to the cancellation.
          example: >-
            Change of mind (once again); we should consider terminating the
            customer relationship
        Date:
          type: string
          description: The DateTime of Cancellation.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
      description: "Model Class: SalesOrderCancellationDetails"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderShippingDetail:
      required:
        - ShippingMethodId
        - DeliveryCompleteStatus
        - ShippingPriority
        - ShippingDate
        - EstimatedDeliveryDate
        - DeliveredDate
        - OnHoldReasonId
        - ExtraWeight
      type: object
      properties:
        ShippingMethodId:
          type: integer
          description: The shipping method of the sales order.
          format: int32
          example: 3
        DeliveryCompleteStatus:
          enum:
            - 0
            - 1
            - 2
          type: integer
          description: >-
            The delivery status of the sales order.0=DeliveryNotComplete |
            1=DeliveryComplete | 2=DeliveryCompleteWithoutNote
          format: int32
          example: ""
          x-enumNames:
            - DeliveryNotComplete
            - DeliveryComplete
            - DeliveryCompleteWithoutNote
        ShippingPriority:
          type: integer
          description: The shipping priority of the sales order.
          format: int32
          example: 5
        ShippingDate:
          type: string
          description: The notified shipping date of the sales order.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        EstimatedDeliveryDate:
          type: string
          description: The estimated delivery date of the sales order.
          format: date-time
          example: "2023-01-16T13:00:00.0000000+00:00"
        DeliveredDate:
          type: string
          description: The date when the sales order was delivered.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        OnHoldReasonId:
          type: integer
          description: The ID of the on hold reason of the sales order.
          format: int32
          example: 1
        ExtraWeight:
          type: number
          description: The extra weight added to the sales order.
          format: decimal
          example: 0.1
      description: "Model Class: SalesOrderShippingDetail"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderPaymentDetail:
      required:
        - PaymentMethodId
        - PaymentStatus
        - TotalGrossAmount
        - CurrencyIso
        - CurrencyFactor
        - DateOfPayment
        - StillToPay
        - PaymentTarget
        - CashDiscount
        - CashDiscountDays
      type: object
      properties:
        PaymentMethodId:
          type: integer
          description: The payment method of the sales order.
          format: int32
          example: 12
        PaymentStatus:
          enum:
            - 0
            - 1
            - 2
          type: integer
          description: >-
            The payment status of the sales order0=UnPayed | 1=PartialPayed |
            2=Payed
          format: int32
          example: ""
          x-enumNames:
            - UnPayed
            - PartialPayed
            - Payed
        TotalGrossAmount:
          type: number
          description: The total gross amount of the sales order.
          format: decimal
          example: 19.99
        CurrencyIso:
          type: string
          description: ISO code of the currency of the sales order.
          example: EUR
        CurrencyFactor:
          type: number
          description: The currency factor in the order at the time the order is created.
          format: decimal
          example: 1
        DateOfPayment:
          type: string
          description: Date of payment that paid off the sales order.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        StillToPay:
          type: number
          description: The amount that is left to pay for this sales order.
          format: decimal
          example: 0
        PaymentTarget:
          type: integer
          description: The payment target of the sales order in days.
          format: int32
          example: 0
        CashDiscount:
          type: number
          description: The cash discount of the sales order.
          format: decimal
          example: 5
        CashDiscountDays:
          type: integer
          description: The days that the cash discount is valid.
          format: int32
          example: 2
      description: "Model Class: SalesOrderPaymentDetail"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder:
      required:
        - Id
        - Number
        - ExternalNumber
        - BillingNumber
        - CompanyId
        - DepartureCountry
        - CustomerId
        - CustomerVatID
        - MerchantVatID
        - BillingAddress
        - Shipmentaddress
        - SalesOrderDate
        - SalesOrderPaymentDetails
        - SalesOrderShippingDetail
        - ColorcodeId
        - IsExternalInvoice
        - Comment
        - CustomerComment
        - IsCancelled
        - LanguageIso
        - CancellationDetails
        - SalesChannelId
        - UserCreatedId
        - UserId
        - TransactionStatusId
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a sales order file.
          format: int32
          example: 123
        Number:
          type: string
          description: The number of the sales order.
          example: A1004465
        ExternalNumber:
          type: string
          description: The external number of the sales order.
          example: D456-64894-132
        BillingNumber:
          type: string
          description: The number of the invoice.
          example: RE-202404-10000
        CompanyId:
          type: integer
          description: The company of the sales order.
          format: int32
          example: 1
        DepartureCountry:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.DepartureCountry
        CustomerId:
          type: integer
          description: The customer ID.
          format: int32
          example: 1005
        CustomerVatID:
          type: string
          description: The VAT ID of the customer.
          example: DE12345
        MerchantVatID:
          type: string
          description: The VAT ID of the merchant.
          example: DE12345
        BillingAddress:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        Shipmentaddress:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        SalesOrderDate:
          type: string
          description: The date when the order was created.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        SalesOrderPaymentDetails:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderPaymentDetail
        SalesOrderShippingDetail:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderShippingDetail
        ColorcodeId:
          type: integer
          description: The colour code of the sales order.
          format: int32
          example: 2
        IsExternalInvoice:
          type: boolean
          description: >-
            Indicates if the invoice of the order was created in an external
            system, like Amazon VCS.
          example: false
        Comment:
          type: string
          description: A comment on the sales order.
          example: an additional order comment
        CustomerComment:
          type: string
          description: A customer comment on the sales order.
          example: an additional customer comment
        IsCancelled:
          type: boolean
          description: >-
            Indicates if the order has been cancelled. There is a special
            endpoint for cancelling sales orders.
          example: false
        LanguageIso:
          type: string
          description: The language of the order.
          example: DE
        CancellationDetails:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderCancellationDetails
        SalesChannelId:
          type: string
          description: The sales channel of the sales order.
          example: 1-1-1
        UserCreatedId:
          type: integer
          description: The user who created the sales order.
          format: int32
          example: 1
        UserId:
          type: integer
          description: The user who is responsible for the sales order.
          format: int32
          example: 1
        TransactionStatusId:
          type: integer
          description: Unique ID to identify a transaction's status.
          format: int32
          example: 13
      description: "Model Class: SalesOrder"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderShippingDetail:
      type: object
      properties:
        ShippingMethodId:
          type: integer
          description: The shipping method of the sales order.
          format: int32
          example: 3
        ShippingPriority:
          type: integer
          description: The shipping priority of the sales order.
          format: int32
          example: 5
        ShippingDate:
          type: string
          description: The notified shipping date of the sales order.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        EstimatedDeliveryDate:
          type: string
          description: The estimated delivery date of the sales order.
          format: date-time
          example: "2023-01-16T13:00:00.0000000+00:00"
        OnHoldReasonId:
          type: integer
          description: The ID of the on hold reason of the sales order.
          format: int32
          example: 1
        ExtraWeight:
          type: number
          description: The extra weight added to the sales order.
          format: decimal
          example: 0.1
      description: "Model Class: UpdateSalesOrderShippingDetail"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderPaymentDetail:
      type: object
      properties:
        PaymentMethodId:
          type: integer
          description: The payment method of the sales order.
          format: int32
          example: 12
        CurrencyIso:
          type: string
          description: ISO code of the currency of the sales order.
          example: EUR
        CurrencyFactor:
          type: number
          description: The currency factor in the order at the time the order is created.
          format: decimal
          example: 1
        PaymentTarget:
          type: integer
          description: The payment target of the sales order in days.
          format: int32
          example: 0
        CashDiscount:
          type: number
          description: The cash discount of the sales order.
          format: decimal
          example: 5
        CashDiscountDays:
          type: integer
          description: The days that the cash discount is valid.
          format: int32
          example: 2
      description: "Model Class: UpdateSalesOrderPaymentDetail"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateDepartureCountry:
      type: object
      properties:
        CountryISO:
          type: string
          description: ISO code of the departure country.
          example: DE
        State:
          type: string
          description: Name of the state in the departure country.
          example: Berlin
        CurrencyIso:
          type: string
          description: ISO code of the currency of the departure country.
          example: EUR
        CurrencyFactor:
          type: number
          description: The currency factor of the departure country.
          format: decimal
          example: 1
      description: "Model Class: UpdateDepartureCountry"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrder:
      type: object
      properties:
        ExternalNumber:
          type: string
          description: The external number of the sales order.
          example: D456-64894-132
        BillingNumber:
          type: string
          description: The number of the invoice.
          example: RE-202404-10000
        CompanyId:
          type: integer
          description: The company of the sales order.
          format: int32
          example: 1
        DepartureCountry:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateDepartureCountry
        CustomerId:
          type: integer
          description: The customer ID.
          format: int32
          example: 1005
        CustomerVatID:
          type: string
          description: The VAT ID of the customer.
          example: DE12345
        BillingAddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateAddress
        Shipmentaddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.UpdateAddress
        SalesOrderDate:
          type: string
          description: The date when the order was created.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        SalesOrderPaymentDetails:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderPaymentDetail
        SalesOrderShippingDetail:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderShippingDetail
        ColorcodeId:
          type: integer
          description: The colour code of the sales order.
          format: int32
          example: 2
        Comment:
          type: string
          description: A comment on the sales order.
          example: an additional order comment
        CustomerComment:
          type: string
          description: A customer comment on the sales order.
          example: an additional customer comment
        LanguageIso:
          type: string
          description: The language of the order.
          example: DE
      description: "Model Class: UpdateSalesOrder"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderCancellationReason:
      required:
        - Id
        - Name
        - IsCommentRequired
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a cancellation reason
          format: int32
          example: 5
        Name:
          type: string
          description: Name of the cancellation reason
          example: Change of mind
        IsCommentRequired:
          type: boolean
          description: >-
            Indicates if a comment is required when this cancellation reason is
            used
          example: false
      description: "Model Class: SalesOrderCancellationReason"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderFile:
      required:
        - Id
        - SalesOrderId
        - FileId
        - FileDataType
        - Size
        - CreatedAt
        - FileName
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a sales order file.
          format: int32
          example: 1123
        SalesOrderId:
          type: integer
          description: Unique ID to identify a sales order.
          format: int32
          example: 12
        FileId:
          type: integer
          description: Unique ID to identify a file.
          format: int32
          example: TODO
        FileDataType:
          type: string
          description: Type of file.
          example: png
        Size:
          type: number
          description: Image size.
          format: decimal
          example: TODO
        CreatedAt:
          type: string
          description: Date when the file was created in the system.
          format: date-time
          example: TODO
        FileName:
          type: string
          description: name of the file.
          example: Anhangdateiname
      description: "Model Class: SalesOrderFile"
    JTL.Wawi.Rest.Contracts.Models.Common.CreateFile:
      required:
        - FileData
        - FileDataType
        - FileName
      type: object
      properties:
        FileData:
          type: string
          description: Base64 encoded data of the file.
          format: byte
        FileDataType:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: Type of file.
          example: png
        FileName:
          maxLength: 2147483647
          minLength: 1
          type: string
          description: name of the file.
          example: Attachment FileName
      description: "Model Class: CreateFile"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItem:
      required:
        - Id
        - SalesOrderId
        - ItemId
        - Name
        - SKU
        - Type
        - Quantity
        - QuantityDelivered
        - QuantityReturned
        - SalesUnit
        - SalesPriceNet
        - SalesPriceGross
        - Discount
        - PurchasePriceNet
        - TaxRate
        - Notice
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a sales order item.
          format: int32
          example: 1123
        SalesOrderId:
          type: integer
          description: Unique ID to identify a sales order.
          format: int32
          example: 12
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1000
        Name:
          type: string
          description: Name of the position.
          example: Awesome Binoculars
        SKU:
          type: string
          description: SKU of the sales order line item.
          example: ART2394871
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
          type: integer
          description: >-
            Type of the sales order line item. Type 0 -&gt; free-text position |
            Type 1 -&gt; item position0=Blank | 1=Item | 2=Shipping | 3=Coupon |
            4=Voucher | 5=Payment | 6=ShippingSurcharge | 7=NewCustomerCoupon |
            8=CashOnDelivery | 9=ShippingSurchargeItem | 10=Packing |
            11=GiftForFree | 12=TrustedShops | 13=InterestPremium |
            14=ProcessingFee | 15=Carton | 16=ReturnDelivery |
            17=MultiPurposeVoucher | 18=MultiPurposeVoucherDigital |
            19=SinglePurposeVoucher | 20=SinglePurposeVoucherDigital |
            21=SinglePurposeVoucherRedemption
          format: int32
          example: 1
          x-enumNames:
            - Blank
            - Item
            - Shipping
            - Coupon
            - Voucher
            - Payment
            - ShippingSurcharge
            - NewCustomerCoupon
            - CashOnDelivery
            - ShippingSurchargeItem
            - Packing
            - GiftForFree
            - TrustedShops
            - InterestPremium
            - ProcessingFee
            - Carton
            - ReturnDelivery
            - MultiPurposeVoucher
            - MultiPurposeVoucherDigital
            - SinglePurposeVoucher
            - SinglePurposeVoucherDigital
            - SinglePurposeVoucherRedemption
        Quantity:
          type: number
          description: The quantity of the line item.
          format: decimal
          example: 2
        QuantityDelivered:
          type: number
          description: The quantity of the line item that has been delivered.
          format: decimal
          example: 2
        QuantityReturned:
          type: number
          description: The quantity of the line item that has been returned.
          format: decimal
          example: 1
        SalesUnit:
          type: string
          description: The sales unit of the line item.
          example: stk
        SalesPriceNet:
          type: number
          description: >-
            The net sales price of the item. Only net or gross price can be
            entered. The other price will then be calculated.
          format: decimal
          example: 16.8
        SalesPriceGross:
          type: number
          description: >-
            The gross sales price of the item. Only net or gross price can be
            entered. The other price will then be calculated.
          format: decimal
          example: 19.99
        Discount:
          type: number
          description: The discount of the line item.
          format: decimal
          example: 5
        PurchasePriceNet:
          type: number
          description: The purchase price of the item.
          format: decimal
          example: 13.46
        TaxRate:
          type: number
          description: The tax rate of the line item.
          format: decimal
          example: 19
        Notice:
          type: string
          description: Notice for the line item.
          example: Without sugar
      description: "Model Class: SalesOrderLineItem"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderLineItem:
      required:
        - Quantity
      type: object
      properties:
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1000
        Name:
          type: string
          description: Name of the position.
          example: Awesome Binoculars
        SKU:
          type: string
          description: SKU of the sales order line item.
          example: ART2394871
        Quantity:
          maximum: 2147483647
          minimum: 0
          type: number
          description: The quantity of the line item.
          format: double
          example: 2
        SalesUnit:
          type: string
          description: The sales unit of the line item.
          example: stk
        SalesPriceNet:
          type: number
          description: >-
            The net sales price of the item. Only net or gross price can be
            entered. The other price will then be calculated.
          format: decimal
          example: 16.8
        SalesPriceGross:
          type: number
          description: >-
            The gross sales price of the item. Only net or gross price can be
            entered. The other price will then be calculated.
          format: decimal
          example: 19.99
        Discount:
          type: number
          description: The discount of the line item.
          format: decimal
          example: 5
        PurchasePriceNet:
          type: number
          description: The purchase price of the item.
          format: decimal
          example: 13.46
        TaxRate:
          type: number
          description: The tax rate of the line item.
          format: decimal
          example: 19
        Notice:
          type: string
          description: Notice for the line item.
          example: Without sugar
      description: "Model Class: CreateSalesOrderLineItem"
    JTL.Wawi.Rest.Contracts.Models.Common.UpdateFile:
      type: object
      properties:
        FileData:
          type: string
          description: Base64 encoded data of the file.
          format: byte
        FileDataType:
          type: string
          description: Type of file.
          example: png
        FileName:
          type: string
          description: name of the file.
          example: Attachment FileName
      description: "Model Class: UpdateFile"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrderLineItemFile:
      required:
        - Id
        - SalesOrderLineItemId
        - SalesOrderId
        - FileId
        - FileDataType
        - Size
        - CreatedAt
        - FileName
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a sales order line item file.
          format: int32
          example: TODO
        SalesOrderLineItemId:
          type: integer
          description: Unique ID to identify a sales order item.
          format: int32
          example: TODO
        SalesOrderId:
          type: integer
          description: Unique ID to identify a sales order.
          format: int32
          example: 12
        FileId:
          type: integer
          description: Unique ID to identify a file.
          format: int32
          example: TODO
        FileDataType:
          type: string
          description: Type of file.
          example: png
        Size:
          type: number
          description: Image size.
          format: decimal
          example: TODO
        CreatedAt:
          type: string
          description: Date when the file was created in the system.
          format: date-time
          example: TODO
        FileName:
          type: string
          description: name of the file.
          example: Anhangdateiname
      description: "Model Class: SalesOrderLineItemFile"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderLineItemFile:
      type: object
      properties:
        FileData:
          type: string
          description: Base64 encoded data of the file.
          format: byte
        FileDataType:
          type: string
          description: Type of file.
          example: png
        FileName:
          type: string
          description: name of the file.
          example: Anhangdateiname
      description: "Model Class: UpdateSalesOrderLineItemFile"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.SalesOrder
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderShippingDetail:
      type: object
      properties:
        ShippingMethodId:
          type: integer
          description: The shipping method of the sales order.
          format: int32
          example: 3
        ShippingPriority:
          type: integer
          description: The shipping priority of the sales order.
          format: int32
          example: 5
        ShippingDate:
          type: string
          description: The notified shipping date of the sales order.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        EstimatedDeliveryDate:
          type: string
          description: The estimated delivery date of the sales order.
          format: date-time
          example: "2023-01-16T13:00:00.0000000+00:00"
        OnHoldReasonId:
          type: integer
          description: The ID of the on hold reason of the sales order.
          format: int32
          example: 1
        ExtraWeight:
          type: number
          description: The extra weight added to the sales order.
          format: decimal
          example: 0.1
      description: "Model Class: CreateSalesOrderShippingDetail"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderPaymentDetail:
      type: object
      properties:
        PaymentMethodId:
          type: integer
          description: The payment method of the sales order.
          format: int32
          example: 12
        CurrencyIso:
          type: string
          description: ISO code of the currency of the sales order.
          example: EUR
        CurrencyFactor:
          type: number
          description: The currency factor in the order at the time the order is created.
          format: decimal
          example: 1
        PaymentTarget:
          type: integer
          description: The payment target of the sales order in days.
          format: int32
          example: 0
        CashDiscount:
          type: number
          description: The cash discount of the sales order.
          format: decimal
          example: 5
        CashDiscountDays:
          type: integer
          description: The days that the cash discount is valid.
          format: int32
          example: 2
      description: "Model Class: CreateSalesOrderPaymentDetail"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateDepartureCountry:
      type: object
      properties:
        CountryISO:
          type: string
          description: ISO code of the departure country.
          example: DE
        State:
          type: string
          description: Name of the state in the departure country.
          example: Berlin
        CurrencyIso:
          type: string
          description: ISO code of the currency of the departure country.
          example: EUR
        CurrencyFactor:
          type: number
          description: The currency factor of the departure country.
          format: decimal
          example: 1
      description: "Model Class: CreateDepartureCountry"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrder:
      required:
        - CompanyId
        - CustomerId
      type: object
      properties:
        Number:
          type: string
          description: The number of the sales order.
          example: A1004465
        ExternalNumber:
          type: string
          description: The external number of the sales order.
          example: D456-64894-132
        BillingNumber:
          type: string
          description: The number of the invoice.
          example: RE-202404-10000
        CompanyId:
          type: integer
          description: The company of the sales order.
          format: int32
          example: 1
        DepartureCountry:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateDepartureCountry
        CustomerId:
          type: integer
          description: The customer ID.
          format: int32
          example: 1005
        CustomerVatID:
          type: string
          description: The VAT ID of the customer.
          example: DE12345
        BillingAddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateAddress
        Shipmentaddress:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateAddress
        SalesOrderDate:
          type: string
          description: The date when the order was created.
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        SalesOrderPaymentDetails:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderPaymentDetail
        SalesOrderShippingDetail:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderShippingDetail
        ColorcodeId:
          type: integer
          description: The colour code of the sales order.
          format: int32
          example: 2
        Comment:
          type: string
          description: A comment on the sales order.
          example: an additional order comment
        CustomerComment:
          type: string
          description: A customer comment on the sales order.
          example: an additional customer comment
        LanguageIso:
          type: string
          description: The language of the order.
          example: DE
      description: "Model Class: CreateSalesOrder"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.CreateSalesOrderCancellationDetails:
      required:
        - CancellationReasonId
      type: object
      properties:
        CancellationReasonId:
          type: integer
          description: The id of the reason for cancelling the sales order.
          format: int32
          example: -4
        CancellationComment:
          type: string
          description: A comment that adds further information to the cancellation.
          example: >-
            Change of mind (once again); we should consider terminating the
            customer relationship
      description: "Model Class: CreateSalesOrderCancellationDetails"
    JTL.Wawi.Rest.Contracts.Models.SalesOrder.UpdateSalesOrderLineItem:
      type: object
      properties:
        ItemId:
          type: integer
          description: Unique ID to identify an item.
          format: int32
          example: 1000
        Name:
          type: string
          description: Name of the position.
          example: Awesome Binoculars
        SKU:
          type: string
          description: SKU of the sales order line item.
          example: ART2394871
        Quantity:
          type: number
          description: The quantity of the line item.
          format: decimal
          example: 2
        SalesUnit:
          type: string
          description: The sales unit of the line item.
          example: stk
        SalesPriceNet:
          type: number
          description: >-
            The net sales price of the item. Only net or gross price can be
            entered. The other price will then be calculated.
          format: decimal
          example: 16.8
        SalesPriceGross:
          type: number
          description: >-
            The gross sales price of the item. Only net or gross price can be
            entered. The other price will then be calculated.
          format: decimal
          example: 19.99
        Discount:
          type: number
          description: The discount of the line item.
          format: decimal
          example: 5
        PurchasePriceNet:
          type: number
          description: The purchase price of the item.
          format: decimal
          example: 13.46
        TaxRate:
          type: number
          description: The tax rate of the line item.
          format: decimal
          example: 19
        Notice:
          type: string
          description: Notice for the line item.
          example: Without sugar
      description: "Model Class: UpdateSalesOrderLineItem"
    JTL.Wawi.Rest.Contracts.Models.ShippingClass.ShippingClass:
      required:
        - Id
        - Name
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a shipping class.
          format: int32
          example: 3
        Name:
          type: string
          description: The name of the shipping class.
          example: default shipping service
      description: "Model Class: ShippingClass"
    JTL.Wawi.Rest.Contracts.Models.ShippingMethod.ShippingMethod:
      required:
        - Id
        - Name
        - Priority
        - GrossPrice
        - ExtraWeight
        - IsAmazonPrime
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a shipping method.
          format: int32
          example: 31
        Name:
          type: string
          description: Name of the shipping method.
          example: DHL Paket
        Priority:
          type: integer
          description: The priority of the shipping method.
          format: int32
          example: 1
        GrossPrice:
          type: number
          description: Gross price of the shipping method.
          format: decimal
          example: 3.99
        ExtraWeight:
          type: number
          description: Extra weight for each parcel created with the shipping method.
          format: decimal
          example: 0.1
        IsAmazonPrime:
          type: boolean
          description: >-
            Indicates if seller-fulfilled Amazon Prime should be applied to the
            shipping method.
          example: false
      description: "Model Class: ShippingMethod"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Stock.StockChange]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Stock.StockChange
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Stock.StockChange:
      required:
        - ItemId
        - WarehouseId
        - StorageLocationId
        - Quantity
        - ChangedDate
        - ShelfLifeExpirationDate
        - BatchNumber
        - Comment
        - Username
      type: object
      properties:
        ItemId:
          type: integer
          description: Id of the item.
          format: int32
          example: 15
        WarehouseId:
          type: integer
          description: Id of the Warehouse.
          format: int32
          example: 1
        StorageLocationId:
          type: integer
          description: Id of the storage location.
          format: int32
          example: 1
        Quantity:
          type: number
          description: The quantity that was changed.
          format: decimal
          example: 100
        ChangedDate:
          type: string
          description: The date when the stock change took place.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        ShelfLifeExpirationDate:
          type: string
          description: Shelf life expiration date of the item if the item has one.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
        BatchNumber:
          type: string
          description: Batch number of the item if the item is a batch item.
          example: 20240315A
        Comment:
          type: string
          description: Comment for this stock change.
          example: Comment for this stock change
        Username:
          type: string
          description: Name of the user who made this stock change.
          example: user1
      description: "Model Class: StockChange"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Stock.SerialNumber]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Stock.SerialNumber
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Stock.SerialNumber:
      required:
        - WarehouseId
        - StorageLocationId
        - ItemId
        - SerialNumbers
      type: object
      properties:
        WarehouseId:
          type: integer
          description: Id of the Warehouse.
          format: int32
          example: 5
        StorageLocationId:
          type: integer
          description: Id of the storage location if the warehouse type is JTL-WMS.
          format: int32
          example: 8
        ItemId:
          type: integer
          description: Id of the item.
          format: int32
          example: 1001
        SerialNumbers:
          type: array
          items:
            type: string
          description: Serial numbers of the item.
          example: ""
      description: "Model Class: SerialNumber"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Stock.Stock]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Stock.Stock"
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Stock.Stock:
      required:
        - WarehouseId
        - StorageLocationId
        - StorageLocationName
        - ItemId
        - ShelfLifeExpirationDate
        - BatchNumber
        - QuantityTotal
        - QuantityLockedForShipment
        - QuantityLockedForAvailability
        - QuantityInPickingLists
      type: object
      properties:
        WarehouseId:
          type: integer
          description: Warehouse ID.
          format: int32
          example: 5
        StorageLocationId:
          type: integer
          description: Storage location ID if the warehouse type is JTL-WMS.
          format: int32
          example: 8
        StorageLocationName:
          type: string
          description: Name of the storage location.
          example: R15-F12-08
        ItemId:
          type: integer
          description: Id of the item.
          format: int32
          example: 1001
        ShelfLifeExpirationDate:
          type: string
          description: Shelf life expiration date of the item, if applicable.
          format: date-time
          example: TODO
        BatchNumber:
          type: string
          description: Batch number of the item if, the item is a batch item.
          example: 20240315A
        QuantityTotal:
          type: number
          description: Total quantity of this item at this storage location.
          format: decimal
          example: 32
        QuantityLockedForShipment:
          type: number
          description: >-
            Quantity at this storage location that is locked for shipment, f.e.
            because the storage location or warehouse is locked for shipment.
          format: decimal
          example: 1
        QuantityLockedForAvailability:
          type: number
          description: >-
            Quantity at this storage location that is locked for availability,
            f.e. because the storage location or warehouse is locked for
            availability.
          format: decimal
          example: 0
        QuantityInPickingLists:
          type: number
          description: Quantity at this storage location that is on picking lists.
          format: decimal
          example: 3
      description: "Model Class: Stock"
    JTL.Wawi.Rest.Contracts.Models.Stock.CreateStock:
      required:
        - WarehouseId
        - ItemId
        - Quantity
      type: object
      properties:
        WarehouseId:
          type: integer
          description: Warehouse ID.
          format: int32
          example: 5
        StorageLocationId:
          type: integer
          description: Storage location ID if the warehouse type is JTL-WMS.
          format: int32
          example: 8
        ItemId:
          type: integer
          description: Id of the item.
          format: int32
          example: 1001
        ShelfLifeExpirationDate:
          type: string
          description: Shelf life expiration date of the item, if applicable.
          format: date-time
          example: TODO
        BatchNumber:
          type: string
          description: Batch number of the item if, the item is a batch item.
          example: 20240315A
        Quantity:
          type: number
          description: The quantity that should be added to this storage location.
          format: double
          example: 500
        PurchasePriceNet:
          type: number
          description: The purchase price of the item.
          format: decimal
          example: 45.67
        SerialNumbers:
          type: array
          items:
            type: string
          description: >-
            Serial numbers of the item. The amount of serial numbers must match
            the quantity and no serial numbers that are already in stock are
            allowed.
          example: ""
        Comment:
          type: string
          description: Comment for this stock change.
          example: Comment for this stock change
      description: "Model Class: CreateStock"
    JTL.Wawi.Rest.Contracts.Models.Supplier.Supplier:
      required:
        - Id
        - Name
        - Type
        - SupplierNo
        - InternalCustomerId
        - LanguageISO
        - FormOfAddress
        - FirstName
        - LastName
        - Company
        - Company2
        - Contact
        - Street
        - Address2
        - PostalCode
        - City
        - State
        - CountryIso
        - Phone
        - PhoneExtension
        - Fax
        - Email
        - Website
        - Comment
        - VatID
        - Status
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a supplier.
          format: int32
          example: 231
        Name:
          type: string
          description: Supplier name.
          example: Global Transport
        Type:
          type: string
          example: Default
        SupplierNo:
          type: string
          description: Supplier ID number.
          example: SP12345
        InternalCustomerId:
          type: string
          description: Internal customer ID of the supplier.
          example: "12"
        LanguageISO:
          type: string
          description: The language ISO of a supplier.
          example: DE
        FormOfAddress:
          type: string
          description: The form of address of the supplier.
          example: Muster Str. 15
        FirstName:
          type: string
          description: Supplier first name.
          example: John
        LastName:
          type: string
          description: Supplier last name.
          example: Smith
        Company:
          type: string
          description: Name of the supplier's company.
          example: Tradewell Company
        Company2:
          type: string
          description: The additional address infomation about the company.
          example: Office Department
        Contact:
          type: string
          description: Supplier's contact person.
          example: John Smith
        Street:
          type: string
          description: Supplier's street and house number.
          example: Example St. 15
        Address2:
          type: string
          description: Additional address information.
          example: Apartment 201
        PostalCode:
          type: string
          description: Supplier's postal code.
          example: "10115"
        City:
          type: string
          description: Supplier's city.
          example: Berlin
        State:
          type: string
          description: Supplier's state.
          example: Berlin
        CountryIso:
          type: string
          description: Country ISO code of the address.
          example: DE
        Phone:
          type: string
          description: Supplier's main telephone number.
          example: 040 / 12345
        PhoneExtension:
          type: string
          description: Supplier's telephone number extension.
          example: "10"
        Fax:
          type: string
          description: Supplier's fax number.
          example: 040 / 12345-19
        Email:
          type: string
          description: Supplier's email address.
          example: info@a-company-domain.com
        Website:
          type: string
          description: Supplier's website.
          example: https://a-company-domain.com
        Comment:
          type: string
          description: Additional information about the supplier.
          example: Comment about the supplier
        VatID:
          type: string
          description: Supplier's VAT ID number.
          example: DE123456789
        Status:
          type: string
          description: Supplier's status.
          example: aktiv
      description: "Model Class: Supplier"
    JTL.Wawi.Rest.Contracts.Models.Tax.TaxRate:
      required:
        - Rate
        - TaxClassId
        - DepartureCountryISO
        - ShipmentCountryISO
      type: object
      properties:
        Rate:
          type: number
          description: The given Rate
          format: decimal
          example: 19
        TaxClassId:
          type: integer
          description: The ID of the tax class.
          format: int32
          example: 3
        DepartureCountryISO:
          type: string
          description: Country ISO code of the address.
          example: DE
        ShipmentCountryISO:
          type: string
          description: Country ISO code of the address.
          example: DE
      description: "Model Class: TaxRate"
    JTL.Wawi.Rest.Contracts.Models.TaxClass.TaxClass:
      required:
        - Id
        - Name
        - IsDefault
        - Type
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a tax class.
          format: int32
          example: 1
        Name:
          type: string
          description: Name of the tax class.
          example: Normaler Steuersatz
        IsDefault:
          type: boolean
          description: >-
            Indicates whether or not the tax class is the default one. There can
            be only one default tax class.
          example: true
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
          description: >-
            Type of the tax rate.0=KeinTyp | 1=StarkErmaessigterSatz |
            2=ErmaessigterSatzNiedrig | 3=ErmaessigterSatz | 4=NormalerSatz |
            5=Zwischensatz
          format: int32
          example: 0
          x-enumNames:
            - KeinTyp
            - StarkErmaessigterSatz
            - ErmaessigterSatzNiedrig
            - ErmaessigterSatz
            - NormalerSatz
            - Zwischensatz
      description: "Model Class: TaxClass"
    JTL.Wawi.Rest.Contracts.Models.TransactionStatus.TransactionStatus:
      required:
        - Id
        - Name
        - IsValidForSalesQuotation
        - IsValidForSalesOrder
        - IsValidForSubscription
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID to identify a transaction's status.
          format: int32
          example: 13
        Name:
          type: string
          description: Name of the transaction status.
          example: Neuer Vorgangsstatus
        IsValidForSalesQuotation:
          type: boolean
          description: Indicates if a transaction status can be used for sales quotations.
          example: false
        IsValidForSalesOrder:
          type: boolean
          description: Indicates if a transaction status can be used for sales orders.
          example: true
        IsValidForSubscription:
          type: boolean
          description: Indicates if a transaction status can be used for subscriptions.
          example: false
      description: "Model Class: TransactionStatus"
    JTL.Wawi.Rest.Contracts.Models.Warehouse.WarehouseType:
      required:
        - Id
        - Name
        - Description
        - Scope
      type: object
      properties:
        Id:
          type: string
          description: Unique Id of the warehouse type as UUID.
          example: 561FCDEA-261D-4593-A0E4-E9AE7892D046
        Name:
          type: string
          description: Name of the warehouse type.
          example: Fulfillment
        Description:
          type: string
          description: Description of the warehouse type.
          example: Optional description
        Scope:
          type: array
          items:
            type: string
          description: List of Scopes with permissions
          example: Token1,Token2
      description: "Model Class: WarehouseType"
    JTL.Wawi.Rest.Contracts.Models.Warehouse.StorageLocationType:
      required:
        - Id
        - Name
        - Description
        - Scope
      type: object
      properties:
        Id:
          type: string
          description: Unique Id of the storage location type as UUID.
          example: 561FCDEA-261D-4593-A0E4-E9AE7892D046
        Name:
          type: string
          description: Name of the storage location type.
          example: goods receipt
        Description:
          type: string
          description: Description of the storage location type.
          example: Optional storage location description
        Scope:
          type: array
          items:
            type: string
          description: List of Scopes with permissions
          example: Token1,Token2
      description: "Model Class: StorageLocationType"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Warehouse.Warehouse]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Warehouse.Warehouse
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Warehouse.Warehouse:
      required:
        - Id
        - Name
        - Address
        - Code
        - Type
        - Description
        - Priority
        - CompanyId
        - LockForShipment
        - LockForAvailability
        - IsActive
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID of the warehouse.
          format: int32
          example: 1
        Name:
          type: string
          description: Name of the warehouse.
          example: Default Warehouse
        Address:
          $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Address"
        Code:
          type: string
          description: Code of the warehouse.
          example: STD_Warehouse
        Type:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Warehouse.WarehouseType
        Description:
          type: string
          description: A description on the warehouse.
          example: Custom additional info about the warehouse
        Priority:
          type: integer
          description: Priority level of the warehouse.
          format: int32
          example: 1
        CompanyId:
          type: integer
          description: Company assigned to the warehouse.
          format: int32
          example: 1
        LockForShipment:
          type: boolean
          description: Indicates if the warehouse is locked for shipment.
          example: false
        LockForAvailability:
          type: boolean
          description: Indicates if the warehouse is locked for stock availability.
          example: false
        IsActive:
          type: boolean
          description: Indicates if the warehouse is active.
          example: true
      description: "Model Class: Warehouse"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.Warehouse.StorageLocation]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Warehouse.StorageLocation
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.Warehouse.StorageLocation:
      required:
        - Id
        - WarehouseId
        - Name
        - StorageLocationType
        - SortNumber
        - Priority
        - LockForShipment
        - LockForAvailability
        - Comment
        - Dimensions
      type: object
      properties:
        Id:
          type: integer
          description: Unique ID of the storage location or bin.
          format: int32
          example: 12
        WarehouseId:
          type: integer
          description: ID of the warehouse where the storage location is located.
          format: int32
          example: 1
        Name:
          type: string
          description: >-
            Name of the storage bin. This identifies the exact location inside
            the warehouse.
          example: Standard Warehouse
        StorageLocationType:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Warehouse.StorageLocationType
        SortNumber:
          type: integer
          description: >-
            Sort number for the storage location. Used for creating picking
            lists.
          format: int32
          example: 100
        Priority:
          type: integer
          description: Priority of the storage location.
          format: int32
          example: 10
        LockForShipment:
          type: boolean
          description: Declares if the warehouse is locked for shipment.
          example: false
        LockForAvailability:
          type: boolean
          description: Declares is the warehouse is locked for stock availabilites.
          example: false
        Comment:
          type: string
          description: Comment for the storage bin.
          example: Some custom comment for the storage location
        Dimensions:
          $ref: >-
            #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Dimensions
      description: "Model Class: StorageLocation"
    JTL.Wawi.Rest.Contracts.Models.WMS.PickListPosition:
      required:
        - Id
        - WarehouseId
        - PicklistId
        - StorageLocationId
        - ItemId
        - Quantity
        - Status
        - Priority
        - SalesOrderLineItemId
        - CreatedAt
      type: object
      properties:
        Id:
          type: integer
          description: Id of the pick list position.
          format: int32
          example: 100
        WarehouseId:
          type: integer
          description: Id of the warehouse.
          format: int32
          example: 1
        PicklistId:
          type: integer
          description: Id of the pick list.
          format: int32
          example: 123
        StorageLocationId:
          type: integer
          description: Id of the storage location from where the pick should happen.
          format: int32
          example: 654
        ItemId:
          type: integer
          description: Id of the item.
          format: int32
          example: 1000
        Quantity:
          type: number
          description: Quantity to pick.
          format: decimal
          example: 2
        Status:
          enum:
            - 10
            - 11
            - 20
            - 30
            - 40
          type: integer
          description: >-
            Status of the position.10=Created | 11=InProgress | 20=Picked |
            30=InShippingBox | 40=Completed
          format: int32
          example: 10
          x-enumNames:
            - Created
            - InProgress
            - Picked
            - InShippingBox
            - Completed
        Priority:
          type: integer
          description: Priority of the position.
          format: int32
          example: 3
        SalesOrderLineItemId:
          type: integer
          description: Id of the corresponding order position.
          format: int32
          example: 50
        CreatedAt:
          type: string
          description: Time when the pick list was created.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
      description: "Model Class: PickListPosition"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.WMS.PickListTemplate]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.WMS.PickListTemplate
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.WMS.PickListTemplate:
      required:
        - PickListTemplateId
        - Name
      type: object
      properties:
        PickListTemplateId:
          type: integer
          description: Id of the pick list template.
          format: int32
          example: 2
        Name:
          type: string
          description: Name of the pick list template.
          example: WMS default picklist
      description: "Model Class: PickListTemplate"
    JTL.Wawi.Rest.Contracts.Models.PagedList[JTL.Wawi.Rest.Contracts.Models.WMS.PickList]:
      required:
        - TotalItems
        - PageNumber
        - PageSize
        - Items
      type: object
      properties:
        TotalItems:
          type: integer
          description: Gets or sets the total number of items available in the data source.
          format: int32
        PageNumber:
          type: integer
          description: Gets or sets the current page number in the paginated list.
          format: int32
        PageSize:
          type: integer
          description: Gets or sets the number of items per page in the paginated list.
          format: int32
        Items:
          type: array
          items:
            $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.WMS.PickList"
          description: Gets or sets the collection of items contained in the paged list.
        TotalPages:
          type: integer
          description: >-
            Gets the total number of pages based on the total number of items
            and the page size.
          format: int32
          readOnly: true
        HasPreviousPage:
          type: boolean
          description: >-
            Gets a value indicating whether there is a previous page available
            in the paginated list.
          readOnly: true
        HasNextPage:
          type: boolean
          description: Gets a value indicating whether there is a next page available.
          readOnly: true
        NextPageNumber:
          type: integer
          description: >-
            Gets the number of the next page if there is one; otherwise, returns
            the total number of pages.
          format: int32
          readOnly: true
        PreviousPageNumber:
          type: integer
          description: >-
            Gets the number of the previous page. If there is no previous page,
            it returns 1.
          format: int32
          readOnly: true
      description: Represents a paginated list of items
    JTL.Wawi.Rest.Contracts.Models.WMS.PickList:
      required:
        - Id
        - WarehouseId
        - PicklistNumber
        - PickListTemplateId
        - PickListTemplateName
        - Status
        - CreatedAt
      type: object
      properties:
        Id:
          type: integer
          description: >-
            Internal unique id of the pick list. This is not the same as the
            pick list number.
          format: int32
          example: 123
        WarehouseId:
          type: integer
          description: Id of the Warehouse.
          format: int32
          example: 1
        PicklistNumber:
          type: string
          description: >-
            Number of the pick list. This can be resetted in JTL-Wawi, but is
            always used for printing and showing the pick list in the UI.
          example: Pcl01234
        PickListTemplateId:
          type: integer
          description: Id of the pick list template that created the pick list.
          format: int32
          example: 15
        PickListTemplateName:
          type: string
          description: Name of the pick list template that created the pick list.
          example: WMS default picklist
        Status:
          enum:
            - 10
            - 11
            - 20
            - 30
            - 40
          type: integer
          description: >-
            Status of the pick list.10=Created | 11=InProgress | 20=Picked |
            30=InShippingBox | 40=Completed
          format: int32
          example: 10
          x-enumNames:
            - Created
            - InProgress
            - Picked
            - InShippingBox
            - Completed
        CreatedAt:
          type: string
          description: Time when the pick list was created.
          format: date-time
          example: "2023-01-15T13:00:00.0000000+00:00"
      description: "Model Class: PickList"
    JTL.Wawi.Rest.Contracts.Models.WMS.CreatePickList:
      required:
        - PickListTemplateId
      type: object
      properties:
        PickListTemplateId:
          type: integer
          description: Id of the pick list template that created the pick list.
          format: int32
          example: 15
      description: "Model Class: CreatePickList"
    JTL.Wawi.Rest.Contracts.Models.WMS.UpdatePickPosition:
      type: object
      properties:
        Quantity:
          type: number
          description: Quantity to pick.
          format: decimal
          example: 2
        ShelfLifeExpirationDate:
          type: string
          description: Shelf life expiration date of the item, if applicable.
          format: date-time
          example: TODO
        BatchNumber:
          type: string
          description: Batch number of the item if, the item is a batch item.
          example: 20240315A
        SerialNumbers:
          type: array
          items:
            type: string
          description: >-
            Serial numbers of the item. The amount of serial numbers must match
            the quantity and no serial numbers that are already in stock are
            allowed.
          example: ""
      description: "Model Class: UpdatePickPosition"
    JTL.Wawi.Rest.Contracts.Models.WMS.UpdateChangeReservation:
      type: object
      properties:
        StorageLocationList:
          type: array
          items:
            type: integer
            format: int32
          description: Id of the storage location from where the pick should happen.
          example: "654"
      description: "Model Class: UpdateChangeReservation"
    JTL.Wawi.Rest.Contracts.Models.WMS.ChangeReservation:
      required:
        - Error
        - UpdatedPositions
      type: object
      properties:
        Error:
          enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
          description: todo0=None | 1=Unknown | 2=PartialReserved | 3=NothingReserved
          format: int32
          example: 0
          x-enumNames:
            - None
            - Unknown
            - PartialReserved
            - NothingReserved
        UpdatedPositions:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.WMS.PickListPosition
          description: todo
      description: "Model Class: ChangeReservation"
    JTL.Wawi.Rest.Contracts.Models.Common.Config:
      required:
        - Identifier
        - DisplayName
        - DisplayDescription
        - Type
        - CurrentValue
        - IsRequired
      type: object
      properties:
        Identifier:
          type: integer
          description: The Unique Identifier of a Config
          format: int32
          example: 9514B1E5-2541-4942-A0D1-D4EACC8FCB27
        DisplayName:
          type: string
          description: The Display Name of a Setting
          example: Create orders
        DisplayDescription:
          type: string
          description: The Display Description of a Setting
          example: Create orders for every Sales
        Type:
          type: string
          description: The Type of the Setting
          example: bool
        CurrentValue:
          type: string
          description: The Current Value of the Setting
          example: "false"
        IsRequired:
          type: boolean
          description: If the Setting is Required
          example: false
      description: "Model Class: Config"
    JTL.Wawi.Rest.Contracts.Models.Worker.WorkerSyncItem:
      required:
        - Identifier
        - SyncName
        - SalesChannelName
        - SalesChannelId
        - ReportProgress
        - Configurations
      type: object
      properties:
        Identifier:
          type: integer
          description: The Unique Identifier of a Sync
          format: int32
          example: 3f54a9ef-f644-4bbb-a6cd-1f57fcae2c85
        SyncName:
          type: string
          description: the Name of the Sync
          example: Ebay
        SalesChannelName:
          type: string
          description: The Name of the Sales Channel
          example: Shop
        SalesChannelId:
          type: string
          description: The SalesChannel for the Sync
          example: 1-1-1
        Interval:
          type: string
          description: The Sync Interval
          example: "00:05:00"
        ReportProgress:
          type: boolean
          description: The Sync can Report Progress in Percent
          example: false
        Configurations:
          type: array
          items:
            $ref: "#/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.Config"
          description: The Configurations
      description: "Model Class: WorkerSyncItem"
    JTL.Wawi.Rest.Contracts.Models.Worker.WorkerSyncStatus:
      required:
        - Identifier
        - State
        - ProgressText
      type: object
      properties:
        Identifier:
          type: integer
          description: The Unique Identifier of a Sync
          format: int32
          example: 3f54a9ef-f644-4bbb-a6cd-1f57fcae2c85
        State:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
          type: integer
          description: >-
            The current State of Sync0=Suspended | 1=Starting | 2=Running |
            3=SuccessfullFinished | 4=SleepingError | 5=Stopping |
            6=SleepingErrorGesperrt | 7=Deactivated
          format: int32
          example: Running
          x-enumNames:
            - Suspended
            - Starting
            - Running
            - SuccessfullFinished
            - SleepingError
            - Stopping
            - SleepingErrorGesperrt
            - Deactivated
        ProgressText:
          type: string
          description: The text of Progress
          example: ""
        Progress:
          type: number
          description: The Percent of Progress
          format: double
          example: 0
        LastSync:
          type: string
          description: The Time of Last Sync
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
        NextSync:
          type: string
          description: The Time of Next Sync
          format: date-time
          example: "2023-02-01T12:45:00.0000000+00:00"
      description: "Model Class: WorkerSyncStatus"
    JTL.Wawi.Rest.Contracts.Models.Worker.PutWorkerSyncAction:
      type: object
      properties:
        Action:
          enum:
            - 0
            - 1
            - 2
          type: integer
          description: The Action to Execute0=Start | 1=Stop | 2=Restart
          format: int32
          x-enumNames:
            - Start
            - Stop
            - Restart
    JTL.Wawi.Rest.Contracts.Models.Common.CreateConfigItem:
      type: object
      properties:
        Identifier:
          type: integer
          description: The Unique Identifier of a Config
          format: int32
          example: 3f54a9ef-f644-4bbb-a6cd-1f57fcae2c85
        Value:
          type: string
          description: The Serialized Configuration Value to set.
          example: "true"
      description: "Model Class: CreateConfigItem"
    JTL.Wawi.Rest.Contracts.Models.Worker.CreateWorkerSyncConfiguration:
      type: object
      properties:
        Interval:
          type: string
          description: The Sync Interval
          example: "00:05:00"
        Configs:
          type: array
          items:
            $ref: >-
              #/components/schemas/JTL.Wawi.Rest.Contracts.Models.Common.CreateConfigItem
          description: The Config Items to Set
      description: "Model Class: CreateWorkerSyncConfiguration"
  securitySchemes:
    Wawi:
      type: apiKey
      description: Fill Wawi Token here
      name: Authorization
      in: header
tags:
  - name: info
    description: <p data-section-id='tag/info' class='stable_summary'></p>
  - name: worker
    description: Planned
  - name: features
    description: <p data-section-id='tag/features' class='stable_summary'></p>
  - name: printer
    description: <p data-section-id='tag/printer' class='beta_summary'></p>
  - name: company
    description: <p data-section-id='tag/company' class='stable_summary'></p>
  - name: supplier
    description: <p data-section-id='tag/supplier' class='stable_summary'></p>
  - name: colorcodes
    description: <p data-section-id='tag/colorcodes' class='stable_summary'></p>
  - name: item
    description: <p data-section-id='tag/item' class='stable_summary'></p>
  - name: property
    description: <p data-section-id='tag/property' class='stable_summary'></p>
  - name: returnstate
    description: Planned
  - name: onholdreason
    description: <p data-section-id='tag/onholdreason' class='stable_summary'></p>
  - name: returnreason
    description: Planned
  - name: saleschannel
    description: <p data-section-id='tag/saleschannel' class='stable_summary'></p>
  - name: customerGroup
    description: <p data-section-id='tag/customerGroup' class='stable_summary'></p>
  - name: paymentmethod
    description: <p data-section-id='tag/paymentmethod' class='stable_summary'></p>
  - name: odata
    description: <p data-section-id='tag/odata' class='beta_summary'></p>
  - name: shippingmethod
    description: <p data-section-id='tag/shippingmethod' class='stable_summary'></p>
  - name: warehouse
    description: <p data-section-id='tag/warehouse' class='stable_summary'></p>
  - name: customerCategory
    description: <p data-section-id='tag/customerCategory' class='stable_summary'></p>
  - name: return
    description: <p data-section-id='tag/return' class='beta_summary'></p>
  - name: cancellationreason
    description: <p data-section-id='tag/cancellationreason' class='stable_summary'></p>
  - name: transactionStatus
    description: <p data-section-id='tag/transactionStatus' class='stable_summary'></p>
  - name: invoice
    description: Planned
  - name: customer
    description: <p data-section-id='tag/customer' class='stable_summary'></p>
  - name: category
    description: <p data-section-id='tag/category' class='stable_summary'></p>
  - name: salesorder
    description: <p data-section-id='tag/salesorder' class='stable_summary'></p>
  - name: Configuration
    description: Planned
  - name: deliverynote
    description: Planned
  - name: appRegistration
    description: <p data-section-id='tag/appRegistration' class='stable_summary'></p>
  - name: login
    description: <p data-section-id='tag/login' class='beta_summary'></p>
  - name: logout
    description: <p data-section-id='tag/logout' class='beta_summary'></p>
  - name: wms
    description: <p data-section-id='tag/wms' class='stable_summary'></p>
  - name: stock
    description: <p data-section-id='tag/stock' class='stable_summary'></p>
  - name: accountingData
    description: Planned
  - name: tax
    description: <p data-section-id='tag/tax' class='stable_summary'></p>
  - name: shipping
    description: Development
  - name: offer
    description: <p data-section-id='tag/offer' class='beta_summary'></p>
  - name: creditnote
    description: <p data-section-id='tag/creditnote' class='beta_summary'></p>
